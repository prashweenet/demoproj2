----------------------------------------------------------------------------
--
--  Dimension:  Account
--  Component:  ACCRUL
--  LU:         DimAccount
--
--  File        : MVAccrul_DimAccount.cre
--  Purpose     : Create Materialized views, constraints and indexes for ACCRUL BRA Services
--  Localization: No translation needed.
--
--  IFS Developer Studio Template Version 3.0
--
--  NOTE! Do not edit!! This file is completely generated and will be
--        overwritten next time the corresponding model is saved.
-----------------------------------------------------------------------------

SET SERVEROUTPUT ON



-- ***** &MV - Start *****

DEFINE MV         = ACCOUNT_MV
DEFINE TAB1       = ACCOUNTING_CODE_PART_VALUE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB

PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.code_part_value id,
              a.company                           company,
              a.code_part_value                   code,
              a.description                       description,
              a.accnt_group                       account_group,
              b.description                       account_group_desc,
              a.accnt_type                        account_type,
              c.description                       account_type_desc,
              a.valid_from                        valid_from,
              a.valid_until                       valid_until,
              a.logical_account_type              logical_account_type,
              a.ledg_flag                         ledger_account,
              a.curr_balance                      currency_balance,
              a.bud_account                       budget_account_only,
              a.tax_flag                          tax_account,
              a.tax_handling_value                tax_handling,
              a.exclude_from_curr_trans           exclude_from_curr_trans,
              a.keep_rep_currency                 keep_rep_currency,
              a.keep_reporting_entity             keep_reporting_entity,
              a.master_com_code_part_value        master_company_account,
              a.sat_account_type                  sat_account_type,
              a.sat_account_group                 sat_account_group,
              d.description                       sat_account_group_desc,
              a.sat_level                         sat_level,
              a.sat_parent_account                sat_parent_account
       FROM   ACCOUNTING_CODE_PART_VALUE_TAB a,
   ACCOUNT_GROUP_TAB b,
   ACCOUNT_TYPE_TAB c,
   SAT_ACCOUNT_GROUP_TAB d
       WHERE a.code_part   = ''A''
   AND    a.company     = b.company
   AND    a.accnt_group = b.accnt_group
   AND    a.company     = c.company
   AND    a.accnt_type  = c.user_defined_account_type
   AND    a.company     = d.company (+)
   AND    a.sat_account_group = d.sat_account_group (+)
       UNION ALL
       SELECT company||''^''||''#''               id,
              company                             company,
              NULL                                code,
              NULL                                description,
              NULL                                account_group,
              NULL                                account_group_desc,
              NULL                                account_type,
              NULL                                account_type_desc,
              NULL                                valid_from,
              NULL                                valid_until,
              NULL                                logical_account_type,
              NULL                                ledger_account,
              NULL                                currency_balance,
              NULL                                budget_account_only,
              NULL                                tax_account,
              NULL                                tax_handling,
              NULL                                exclude_from_curr_trans,
              NULL                                keep_rep_currency,
              NULL                                keep_reporting_entity,
              NULL                                master_company_account,
              NULL                                sat_account_type,
              NULL                                sat_account_group,
              NULL                                sat_account_group_desc,
              NULL                                sat_level,
              NULL                                sat_parent_account
       FROM   &TAB2
       UNION ALL
       SELECT ''#''||''^''||''#''                 id,
              NULL                                company,
              NULL                                code,
              NULL                                description,
              NULL                                account_group,
              NULL                                account_group_desc,
              NULL                                account_type,
              NULL                                account_type_desc,
              NULL                                valid_from,
              NULL                                valid_until,
              NULL                                logical_account_type,
              NULL                                ledger_account,
              NULL                                currency_balance,
              NULL                                budget_account_only,
              NULL                                tax_account,
              NULL                                tax_handling,
              NULL                                exclude_from_curr_trans,
              NULL                                keep_rep_currency,
              NULL                                keep_reporting_entity,
              NULL                                master_company_account,
              NULL                                sat_account_type,
              NULL                                sat_account_group,
              NULL                                sat_account_group_desc,
              NULL                                sat_level,
              NULL                                sat_parent_account
       FROM BI_DUAL_TAB
    ';
   EXECUTE IMMEDIATE stmt_;
END;
/

PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN

   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX1';
   Database_SYS.Set_Table_Column (columns_, 'COMPANY');
   Database_SYS.Set_Table_Column (columns_, 'ACCOUNT_GROUP');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'N',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX2';
   Database_SYS.Set_Table_Column (columns_, 'COMPANY');
   Database_SYS.Set_Table_Column (columns_, 'LOGICAL_ACCOUNT_TYPE');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'N',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX3';
   Database_SYS.Set_Table_Column (columns_, 'COMPANY');
   Database_SYS.Set_Table_Column (columns_, 'ACCOUNT_TYPE');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'N',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_UX1';
   Database_SYS.Set_Table_Column (columns_, 'COMPANY');
   Database_SYS.Set_Table_Column (columns_, 'CODE');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'U',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

END;
/

UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2
-- ***** &MV - End *****
------------------------------------------------------------------
