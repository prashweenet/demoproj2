----------------------------------------------------------------------------
--
--  Dimension:  LedgerInformation
--  Component:  ACCRUL
--  LU:         DimLedgerInformation
--
--  File        : MVAccrul_DimLedgerInformation.cre
--  Purpose     : Create Materialized views, constraints and indexes for ACCRUL BI Services
--  Localization: No translation needed.
--
--  IFS Developer Studio Template Version 3.0
--
--  NOTE! Do not edit!! This file is completely generated and will be
--        overwritten next time the corresponding model is saved.
-----------------------------------------------------------------------------

SET SERVEROUTPUT ON



-- ***** &MV - Start *****

DEFINE MV         = LEDGER_INFORMATION_MV
DEFINE TAB1       = ACC_YEAR_LEDGER_INFO_TAB
DEFINE TAB2       = ACC_PERIOD_LEDGER_INFO_TAB

PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT TO_CHAR(b.company ||''^''|| TO_CHAR(b.accounting_year) ||''^''|| TO_CHAR(b.accounting_period)||''^''|| TO_CHAR(b.ledger_id)) id,
              a.company                                                                                                                    company,
              TO_CHAR(b.accounting_year)|| TO_CHAR(b.accounting_period,''FM00'')||TO_CHAR(b.ledger_id)                                     code,
              a.accounting_year                                                                                                            accounting_year,
              b.accounting_period                                                                                                          accounting_period,
              b.ledger_id                                                                                                                  ledger_id,
              a.year_status                                                                                                                year_status,
              b.period_status                                                                                                              period_status,
              a.opening_balances                                                                                                           opening_balances,
              a.closing_balances                                                                                                           closing_balances
       FROM   ACC_YEAR_LEDGER_INFO_TAB a,ACC_PERIOD_LEDGER_INFO_TAB b
       WHERE b.accounting_year = a.accounting_year AND b.company = a.company AND b.ledger_id = a.ledger_id';
   EXECUTE IMMEDIATE stmt_;
END;
/

PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN

   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX1';
   Database_SYS.Set_Table_Column (columns_, 'COMPANY');
   Database_SYS.Set_Table_Column (columns_, 'CODE');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'N',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX2';
   Database_SYS.Set_Table_Column (columns_, 'COMPANY');
   Database_SYS.Set_Table_Column (columns_, 'ACCOUNTING_YEAR');
   Database_SYS.Set_Table_Column (columns_, 'ACCOUNTING_PERIOD');
   Database_SYS.Set_Table_Column (columns_, 'LEDGER_ID');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'N',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

END;
/

UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2
-- ***** &MV - End *****
------------------------------------------------------------------
