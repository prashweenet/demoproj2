-----------------------------------------------------------------------------
--  Module : ACCRUL
--
--  Purpose: File for upgrade from Accrul 9.1.0 to 10.0.0
--
--  File   : 1000.UPG
--
--  IFS/Design Template Version 2.3
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  151020  THPELK  STRFI-330, Created.
-----------------------------------------------------------------------------

SET SERVEROUTPUT ON

DEFINE MODULE = 'ACCRUL'

------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------

-- Instructions for upg files:

-- If possible, everything regarding one table should be placed in one section.
-- If this is not possible, a proper comment about the reason should be added.

-- Each section should be started with a "-" line and a empty line.
-- The section should then start with a line like: "-- ***** Example_Tab Start *****"
-- and end with a line like:                       "-- ***** Example_Tab End *****"
-- The "start tag" (in this case "Example_Tab"), should be placed in "List of upgrade sections".
-- Don't forget UPPER/lower case !

-- Every part inside the section should start with a "PROMPT" line.

-- If the Pl block has DML instructions (INSERT,UPDATE,DELETE etc) there should always be a "COMMIT;" line after the block.
-- If the Pl block not has DML instructions, there should not be a "COMMIT;" line after the block.

-- Remember ordinary coding standard rules !

-- Don't drop any column in an upgrade file !

-- Don't forget performance when updating large tabled !

-- No unnecessary blank lines or comments !

-- If possible, use pure SQL update
-- If possible, try to put several updates together in one statement.

------------------------------------------------------------------------------------------


---------------------------------------------------------------------
-- CREATE CURRENCY_CODE_CHK_MV
---------------------------------------------------------------------

DEFINE MV_NAME       = CURRENCY_CODE_CHK_MV
DEFINE SOURCE_TABLE  = CURRENCY_CODE_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_1');
PROMPT Creating view CURRENCY_CODE_CHK_MV
DECLARE
   stmt_            VARCHAR2(32000);
BEGIN
   Database_SYS.Remove_Materialized_View('&MV_NAME',TRUE);
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_NAME
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT MAX(ROWVERSION) MAX_ROWVERSION
       FROM &SOURCE_TABLE';

   EXECUTE IMMEDIATE stmt_;

   IS_MV_REFRESH_INFO_API.Clear_Refresh_Info('&MV_NAME');
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_2');
PROMPT VIEW &MV_NAME created.
UNDEFINE MV_NAME
UNDEFINE SOURCE_TABLE

---------------------------------------------------------------------
-- CREATE COMPANY_FINANCE_MV
---------------------------------------------------------------------
DEFINE MV         = COMPANY_FINANCE_MV
DEFINE TAB1       = COMPANY_FINANCE_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_3');
PROMPT Create Materialized View COMPANY_FINANCE_MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT cf.company               id,
              cf.company               code,
              c.name                   name,
              c.country                country_code,
              c.association_no         association_no,
              cf.cons_company          parent_company,
              cf.currency_code         currency_code,
              cf.parallel_acc_currency parallel_currency_code,
              c.master_company         master_company
       FROM   COMPANY_FINANCE_TAB cf, COMPANY_TAB c
       WHERE cf.company = c.company
       UNION ALL
       SELECT ''#''                    id,
              NULL                     code,
              NULL                     name,
              NULL                     country_code,
              NULL                     association_no,
              NULL                     parent_company,
              NULL                     currency_code,
              NULL                     parallel_currency_code,
              NULL                     master_company
       FROM BI_DUAL_TAB
    ';
   EXECUTE IMMEDIATE stmt_;
END;
/

--------------------------------------------------------------
----------Create constraints and index(s) on Materialized VIEW
--------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_4');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);

   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_Sys.Create_Index( table_name_,
                              index_name_,
                              columns_,
                              'U',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
END;
/

UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2

---------------------------------------------------------------------
-- CREATE ANALYTIC_ATTR_ACCOUNT_MV
---------------------------------------------------------------------
DEFINE MV         = ANALYTIC_ATTR_ACCOUNT_MV

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_5');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.code_part_value id,
              a.company                           company,
              a.code_part_value                   code,
              a.attribute                         attribute,
              a2.description                      attribute_description,
              a.attribute_value                   attribute_value,
              a3.description                      attribute_value_description
       FROM   ACCOUNTING_ATTRIBUTE_CON_TAB a,
              ACCOUNTING_ATTRIBUTE_TAB a2,
              ACCOUNTING_ATTRIBUTE_VALUE_TAB a3
       WHERE  a.code_part        = ''A''
       AND    a2.company         = a.company
       AND    a2.attribute       = a.attribute
       AND    a3.company         = a.company
       AND    a3.attribute       = a.attribute
       AND    a3.attribute_value = a.attribute_value';
   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_6');
PROMPT Create indexs on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN

   index_name_ := table_name_ || '_IX1';
   Database_SYS.Set_Table_Column (columns_, 'ID');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'N',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX2';
   Database_SYS.Set_Table_Column (columns_, 'COMPANY');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'N',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX3';
   Database_SYS.Set_Table_Column (columns_, 'COMPANY');
   Database_SYS.Set_Table_Column (columns_, 'ATTRIBUTE');
   Database_SYS.Set_Table_Column (columns_, 'ATTRIBUTE_VALUE');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'N',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX4';
   Database_SYS.Set_Table_Column (columns_, 'COMPANY');
   Database_SYS.Set_Table_Column (columns_, 'CODE');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'N',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

END;
/
UNDEFINE MV

---------------------------------------------------------------------
-- CREATE ANALYTIC_ATTR_CODE_B_MV
---------------------------------------------------------------------

DEFINE MV         = ANALYTIC_ATTR_CODE_B_MV
DEFINE TAB1       = ANALYTIC_ATTR_CODE_B_TAB
DEFINE CODE_PART  = B

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_7');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.code_part_value id,
              a.company                           company,
              a.code_part_value                   code,
              a.attribute                         attribute,
              a2.description                      attribute_description,
              a.attribute_value                   attribute_value,
              a3.description                      attribute_value_description
       FROM   ACCOUNTING_ATTRIBUTE_CON_TAB a,
   ACCOUNTING_ATTRIBUTE_TAB a2,
   ACCOUNTING_ATTRIBUTE_VALUE_TAB a3
       WHERE  a.code_part        = ''B''
   AND    a2.company         = a.company
   AND    a2.attribute       = a.attribute
   AND    a3.company         = a.company
   AND    a3.attribute       = a.attribute
   AND    a3.attribute_value = a.attribute_value';
   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_8');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN

   index_name_ := table_name_ || '_IX1';
   Database_SYS.Set_Table_Column (columns_, 'ID');
   Database_Sys.Create_Index(table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX2';
   Database_SYS.Set_Table_Column (columns_, 'COMPANY');
   Database_Sys.Create_Index(table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX3';
   Database_SYS.Set_Table_Column (columns_, 'COMPANY');
   Database_SYS.Set_Table_Column (columns_, 'ATTRIBUTE');
   Database_SYS.Set_Table_Column (columns_, 'ATTRIBUTE_VALUE');
   Database_Sys.Create_Index(table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX4';
   Database_SYS.Set_Table_Column (columns_, 'COMPANY');
   Database_SYS.Set_Table_Column (columns_, 'CODE');
   Database_Sys.Create_Index(table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);
   Database_SYS.Reset_Column_Table(columns_);

END;
/

UNDEFINE MV
UNDEFINE TAB1
UNDEFINE CODE_PART

---------------------------------------------------------------------
-- CREATE ANALYTIC_ATTR_CODE_C_MV
---------------------------------------------------------------------
DEFINE MV         = ANALYTIC_ATTR_CODE_C_MV
DEFINE TAB1       = ANALYTIC_ATTR_CODE_C_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_9');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.code_part_value id,
              a.company                           company,
              a.code_part_value                   code,
              a.attribute                         attribute,
              a2.description                      attribute_description,
              a.attribute_value                   attribute_value,
              a3.description                      attribute_value_description
       FROM   ACCOUNTING_ATTRIBUTE_CON_TAB a,
   ACCOUNTING_ATTRIBUTE_TAB a2,
   ACCOUNTING_ATTRIBUTE_VALUE_TAB a3
       WHERE a.code_part        = ''C''
   AND    a2.company         = a.company
   AND    a2.attribute       = a.attribute
   AND    a3.company         = a.company
   AND    a3.attribute       = a.attribute
   AND    a3.attribute_value = a.attribute_value';
   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_10');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN

   index_name_ := table_name_ || '_IX1';
   Database_SYS.Set_Table_Column (columns_, 'ID');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'N',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX2';
   Database_SYS.Set_Table_Column (columns_, 'COMPANY');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'N',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX3';
   Database_SYS.Set_Table_Column (columns_, 'COMPANY');
   Database_SYS.Set_Table_Column (columns_, 'ATTRIBUTE');
   Database_SYS.Set_Table_Column (columns_, 'ATTRIBUTE_VALUE');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'N',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX4';
   Database_SYS.Set_Table_Column (columns_, 'COMPANY');
   Database_SYS.Set_Table_Column (columns_, 'CODE');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'N',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

END;
/
UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2

---------------------------------------------------------------------
-- CREATE ANALYTIC_ATTR_CODE_D_MV
---------------------------------------------------------------------
DEFINE MV         = ANALYTIC_ATTR_CODE_D_MV
DEFINE TAB1       = ANALYTIC_ATTR_CODE_D_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_11');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.code_part_value id,
              a.company                           company,
              a.code_part_value                   code,
              a.attribute                         attribute,
              a2.description                      attribute_description,
              a.attribute_value                   attribute_value,
              a3.description                      attribute_value_description
       FROM   ACCOUNTING_ATTRIBUTE_CON_TAB a,
   ACCOUNTING_ATTRIBUTE_TAB a2,
   ACCOUNTING_ATTRIBUTE_VALUE_TAB a3
       WHERE a.code_part        = ''D''
   AND    a2.company         = a.company
   AND    a2.attribute       = a.attribute
   AND    a3.company         = a.company
   AND    a3.attribute       = a.attribute
   AND    a3.attribute_value = a.attribute_value';
   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_12');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN

   index_name_ := table_name_ || '_IX1';
   Database_SYS.Set_Table_Column (columns_, 'ID');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'N',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX2';
   Database_SYS.Set_Table_Column (columns_, 'COMPANY');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'N',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX3';
   Database_SYS.Set_Table_Column (columns_, 'COMPANY');
   Database_SYS.Set_Table_Column (columns_, 'ATTRIBUTE');
   Database_SYS.Set_Table_Column (columns_, 'ATTRIBUTE_VALUE');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'N',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX4';
   Database_SYS.Set_Table_Column (columns_, 'COMPANY');
   Database_SYS.Set_Table_Column (columns_, 'CODE');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'N',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

END;
/

UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2
-----------------------------------------------------------------------------
-- ***** ANALYTIC_ATTR_CODE_E_MV - Start *****

DEFINE TAB        = ACCOUNTING_ATTRIBUTE_CON_TAB
DEFINE TAB2       = ACCOUNTING_ATTRIBUTE_TAB
DEFINE TAB3       = ACCOUNTING_ATTRIBUTE_VALUE_TAB
DEFINE MV         = ANALYTIC_ATTR_CODE_E_MV
DEFINE CODE_PART  = E

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_13');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.code_part_value              id,
              a.code_part_value                                code,
              a.company                                        company,
              a.attribute                                      attribute,
              a2.description                                   attribute_description,
              a.attribute_value                                attribute_value,
              a3.description                                   attribute_value_description
       FROM   &TAB a,
              &TAB2 a2,
              &TAB3 a3
       WHERE  a.code_part        = ''&CODE_PART''
       AND    a2.company         = a.company
       AND    a2.attribute       = a.attribute
       AND    a3.company         = a.company
       AND    a3.attribute       = a.attribute
       AND    a3.attribute_value = a.attribute_value';

      EXECUTE IMMEDIATE stmt_;
END;
/

DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);

   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX2';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);

   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX3';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'ATTRIBUTE');
   Database_SYS.Set_Table_Column (columns_ , 'ATTRIBUTE_VALUE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);

   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX4';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);
END;
/

UNDEFINE TAB
UNDEFINE TAB2
UNDEFINE TAB3
UNDEFINE MV
UNDEFINE CODE_PART

-- ***** ANALYTIC_ATTR_CODE_E_MV - End *****

-----------------------------------------------------------------------------

-- ***** ANALYTIC_ATTR_CODE_F_MV - Start *****

DEFINE TAB        = ACCOUNTING_ATTRIBUTE_CON_TAB
DEFINE TAB2       = ACCOUNTING_ATTRIBUTE_TAB
DEFINE TAB3       = ACCOUNTING_ATTRIBUTE_VALUE_TAB
DEFINE MV         = ANALYTIC_ATTR_CODE_F_MV
DEFINE CODE_PART  = F

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_14');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.code_part_value              id,
              a.code_part_value                                code,
              a.company                                        company,
              a.attribute                                      attribute,
              a2.description                                   attribute_description,
              a.attribute_value                                attribute_value,
              a3.description                                   attribute_value_description
       FROM   &TAB a,
              &TAB2 a2,
              &TAB3 a3
       WHERE  a.code_part        = ''&CODE_PART''
       AND    a2.company         = a.company
       AND    a2.attribute       = a.attribute
       AND    a3.company         = a.company
       AND    a3.attribute       = a.attribute
       AND    a3.attribute_value = a.attribute_value';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_15');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);

   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX2';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);

   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX3';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'ATTRIBUTE');
   Database_SYS.Set_Table_Column (columns_ , 'ATTRIBUTE_VALUE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);

   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX4';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);
END;
/

UNDEFINE TAB
UNDEFINE TAB2
UNDEFINE TAB3
UNDEFINE MV
UNDEFINE CODE_PART

-- ***** ANALYTIC_ATTR_CODE_F_MV - End *****

-----------------------------------------------------------------------------

-- ***** ANALYTIC_ATTR_CODE_G_MV - Start *****

DEFINE TAB        = ACCOUNTING_ATTRIBUTE_CON_TAB
DEFINE TAB2       = ACCOUNTING_ATTRIBUTE_TAB
DEFINE TAB3       = ACCOUNTING_ATTRIBUTE_VALUE_TAB
DEFINE MV         = ANALYTIC_ATTR_CODE_G_MV
DEFINE CODE_PART  = G

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_16');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.code_part_value              id,
              a.code_part_value                                code,
              a.company                                        company,
              a.attribute                                      attribute,
              a2.description                                   attribute_description,
              a.attribute_value                                attribute_value,
              a3.description                                   attribute_value_description
       FROM   &TAB a,
              &TAB2 a2,
              &TAB3 a3
       WHERE  a.code_part        = ''&CODE_PART''
       AND    a2.company         = a.company
       AND    a2.attribute       = a.attribute
       AND    a3.company         = a.company
       AND    a3.attribute       = a.attribute
       AND    a3.attribute_value = a.attribute_value';

      EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_17');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);

   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX2';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);

   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX3';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'ATTRIBUTE');
   Database_SYS.Set_Table_Column (columns_ , 'ATTRIBUTE_VALUE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);

   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX4';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);
END;
/

UNDEFINE TAB
UNDEFINE TAB2
UNDEFINE TAB3
UNDEFINE MV
UNDEFINE CODE_PART

-- ***** ANALYTIC_ATTR_CODE_G_MV - End *****

-----------------------------------------------------------------------------

-- ***** ANALYTIC_ATTR_CODE_H_MV - Start *****

DEFINE TAB        = ACCOUNTING_ATTRIBUTE_CON_TAB
DEFINE TAB2       = ACCOUNTING_ATTRIBUTE_TAB
DEFINE TAB3       = ACCOUNTING_ATTRIBUTE_VALUE_TAB
DEFINE MV         = ANALYTIC_ATTR_CODE_H_MV
DEFINE CODE_PART  = H

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_18');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.code_part_value              id,
              a.code_part_value                                code,
              a.company                                        company,
              a.attribute                                      attribute,
              a2.description                                   attribute_description,
              a.attribute_value                                attribute_value,
              a3.description                                   attribute_value_description
       FROM   &TAB a,
              &TAB2 a2,
              &TAB3 a3
       WHERE  a.code_part        = ''&CODE_PART''
       AND    a2.company         = a.company
       AND    a2.attribute       = a.attribute
       AND    a3.company         = a.company
       AND    a3.attribute       = a.attribute
       AND    a3.attribute_value = a.attribute_value';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_19');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);

   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX2';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);

   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX3';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'ATTRIBUTE');
   Database_SYS.Set_Table_Column (columns_ , 'ATTRIBUTE_VALUE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);

   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX4';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);
END;
/

UNDEFINE TAB
UNDEFINE TAB2
UNDEFINE TAB3
UNDEFINE MV
UNDEFINE CODE_PART

-- ***** ANALYTIC_ATTR_CODE_H_MV - End *****

-----------------------------------------------------------------------------

-- ***** ANALYTIC_ATTR_CODE_I_MV - Start *****

DEFINE TAB        = ACCOUNTING_ATTRIBUTE_CON_TAB
DEFINE TAB2       = ACCOUNTING_ATTRIBUTE_TAB
DEFINE TAB3       = ACCOUNTING_ATTRIBUTE_VALUE_TAB
DEFINE MV         = ANALYTIC_ATTR_CODE_I_MV
DEFINE CODE_PART  = I

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_20');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.code_part_value              id,
              a.code_part_value                                code,
              a.company                                        company,
              a.attribute                                      attribute,
              a2.description                                   attribute_description,
              a.attribute_value                                attribute_value,
              a3.description                                   attribute_value_description
       FROM   &TAB a,
              &TAB2 a2,
              &TAB3 a3
       WHERE  a.code_part        = ''&CODE_PART''
       AND    a2.company         = a.company
       AND    a2.attribute       = a.attribute
       AND    a3.company         = a.company
       AND    a3.attribute       = a.attribute
       AND    a3.attribute_value = a.attribute_value';

    EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_21');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);

   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX2';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);

   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX3';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'ATTRIBUTE');
   Database_SYS.Set_Table_Column (columns_ , 'ATTRIBUTE_VALUE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);

   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX4';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);
END;
/

UNDEFINE TAB
UNDEFINE TAB2
UNDEFINE TAB3
UNDEFINE MV
UNDEFINE CODE_PART

-- ***** ANALYTIC_ATTR_CODE_I_MV - End *****

-----------------------------------------------------------------------------

-- ***** ANALYTIC_ATTR_CODE_J_MV - Start *****

DEFINE TAB        = ACCOUNTING_ATTRIBUTE_CON_TAB
DEFINE TAB2       = ACCOUNTING_ATTRIBUTE_TAB
DEFINE TAB3       = ACCOUNTING_ATTRIBUTE_VALUE_TAB
DEFINE MV         = ANALYTIC_ATTR_CODE_J_MV
DEFINE CODE_PART  = J

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_22');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.code_part_value              id,
              a.code_part_value                                code,
              a.company                                        company,
              a.attribute                                      attribute,
              a2.description                                   attribute_description,
              a.attribute_value                                attribute_value,
              a3.description                                   attribute_value_description
       FROM   &TAB a,
              &TAB2 a2,
              &TAB3 a3
       WHERE  a.code_part        = ''&CODE_PART''
       AND    a2.company         = a.company
       AND    a2.attribute       = a.attribute
       AND    a3.company         = a.company
       AND    a3.attribute       = a.attribute
       AND    a3.attribute_value = a.attribute_value';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_23');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);

   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX2';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);

   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX3';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'ATTRIBUTE');
   Database_SYS.Set_Table_Column (columns_ , 'ATTRIBUTE_VALUE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);

   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX4';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);
END;
/

UNDEFINE TAB
UNDEFINE TAB2
UNDEFINE TAB3
UNDEFINE MV
UNDEFINE CODE_PART

-- ***** ANALYTIC_ATTR_CODE_J_MV - End *****

---------------------------------------------------------------------
-- CREATE CURRENCY_RATE_MV
---------------------------------------------------------------------

DEFINE TAB    = CURRENCY_RATE_TAB
DEFINE MV     = CURRENCY_RATE_MV
DEFINE MODULE = ACCRUL

-------------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_24');
PROMPT ********* Component &MODULE, definition begins ***********

SET SERVEROUTPUT ON
DECLARE
   stmt_                    VARCHAR2(32000);
   columns_                 Database_SYS.ColumnTabType;
   table_name_              VARCHAR2(30) := '&MV';
   index_name_              VARCHAR2(30);
   constraint_name_         VARCHAR2(30);
BEGIN

   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
   'CREATE MATERIALIZED VIEW &MV
    TABLESPACE &IFSAPP_DATA
    BUILD DEFERRED
    USING INDEX TABLESPACE &IFSAPP_INDEX
    REFRESH COMPLETE ON DEMAND
	 EVALUATE USING CURRENT EDITION
    AS
    SELECT cr.company_key||''^''||TO_CHAR(cr.valid_from_key,''YYYY-MM-DD'')||''^''||cr.currency_rate_type_key||''^''||cr.currency_code_key id,
           cr.company_key                                                                                                                  company_key,
           cr.valid_from_key                                                                                                               valid_from_key,
           cr.currency_rate_type_key                                                                                                       currency_rate_type_key,
           cr.currency_code_key                                                                                                            currency_code_key,
           CAST (cr.currency_rate AS NUMBER)                                                                                               currency_rate,
           CAST (cr.direct_currency_rate AS NUMBER)                                                                                        direct_currency_rate,
           CAST (cr.direct_currency_rate_round AS NUMBER)                                                                                  direct_currency_rate_round,
           cr.valid_from                                                                                                                   valid_from,
           cr.valid_until                                                                                                                  valid_until,
           cr.is_max_valid_from                                                                                                            is_max_valid_from,
           cr.dim_company_id                                                                                                               dim_company_id,
           cr.dim_currency_code_id                                                                                                         dim_currency_code_id,
           cr.dim_currency_rate_type_id                                                                                                    dim_currency_rate_type_id,
           cr.currency_code                                                                                                                currency_code,
           cr.currency_type                                                                                                                currency_type
    FROM currency_rate_mv_hlp cr';

   EXECUTE IMMEDIATE stmt_;

   /*
   ----------------------------------------------------------------------------------
   Template section for creation of indexes on a fact based MV.
   It is suggested to create one primary key (or maybe unique) contraint on the key
   columns. It is also suggested to create indexes on dimension identity columns for
   the most commonly used dimensions. Indexes with combination of id columns are
   preferred compared to adding single id column indexes.
   ----------------------------------------------------------------------------------
   */
   dbms_output.put_line('Create constraints and indexes on Materialized View &MV');

   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'VALID_FROM_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'CURRENCY_RATE_TYPE_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'CURRENCY_CODE_KEY');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX1';
   Database_SYS.Set_Table_Column (columns_, 'DIM_COMPANY_ID');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'N',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX2';
   Database_SYS.Set_Table_Column (columns_, 'DIM_COMPANY_ID');
   Database_SYS.Set_Table_Column (columns_, 'DIM_CURRENCY_CODE_ID');
   Database_SYS.Set_Table_Column (columns_, 'DIM_CURRENCY_RATE_TYPE_ID');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'N',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

EXCEPTION
   WHEN OTHERS THEN
   dbms_output.put_line('Error when creating MV &MV');
   dbms_output.put_line(SQLERRM);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_25');
PROMPT ********* Component &MODULE, definition ends ***********

-------------------------------------------------------------------

UNDEFINE TAB
UNDEFINE MV
UNDEFINE MODULE

--------------------------------------------------------------
--  Creating ACCOUNTING_PERIOD_MV
--------------------------------------------------------------

DEFINE MV         = ACCOUNTING_PERIOD_MV
DEFINE MV_TRANS   = ACCOUNTING_PERIOD_TRANSL_MV
DEFINE TAB1       = ACCOUNTING_YEAR_TAB
DEFINE TAB2       = ACCOUNTING_PERIOD_TAB
DEFINE TAB3       = KEY_LU_TRANSLATION_TAB
DEFINE TAB4       = COMPANY_FINANCE_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_26');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT TO_CHAR(b.company ||''^''|| TO_CHAR(b.accounting_year) ||''^''|| TO_CHAR(b.accounting_period)) id,
              a.company                                                                                      company,
              TO_CHAR(b.accounting_year)||  TO_CHAR(b.accounting_period,''FM00'')                            code,
              b.description                                                                                  description,
              b.date_from                                                                                    start_date,
              b.date_until                                                                                   end_date,
              b.consolidated                                                                                 consolidated,
              ''Dummy''                                                                                      year_status,
              ''Dummy''                                                                                      period_status,
              b.year_end_period                                                                              period_type,
              CAST (a.accounting_year AS NUMBER)                                                             accounting_year,
              CAST (b.accounting_period AS NUMBER)                                                           accounting_period,
              ''Dummy''                                                                                      opening_balances,
              ''Dummy''                                                                                      closing_balances,
              a.open_bal_consolidated                                                                        open_balances_consolidated,
              b.report_from_date                                                                             report_from_date,
              b.report_until_date                                                                            report_until_date,
              b.attribute_one                                                                                attribute_one,
              b.attribute_two                                                                                attribute_two,
              b.attribute_three                                                                              attribute_three,
              b.attribute_four                                                                               attribute_four,
              b.attribute_five                                                                               attribute_five
       FROM   ACCOUNTING_PERIOD_TAB b, ACCOUNTING_YEAR_TAB a
       WHERE b.accounting_year = a.accounting_year AND b.company = a.company
       UNION ALL
       SELECT company||''^''||''#''||''^''||''#''                                                            id,
              company                                                                                        company,
              NULL                                                                                           code,
              NULL                                                                                           description,
              NULL                                                                                           start_date,
              NULL                                                                                           end_date,
              NULL                                                                                           consolidated,
              NULL                                                                                           year_status,
              NULL                                                                                           period_status,
              NULL                                                                                           period_type,
              NULL                                                                                           accounting_year,
              NULL                                                                                           accounting_period,
              NULL                                                                                           opening_balances,
              NULL                                                                                           closing_balances,
              NULL                                                                                           open_balances_consolidated,
              NULL                                                                                           report_from_date,
              NULL                                                                                           report_until_date,
              NULL                                                                                           attribute_one,
              NULL                                                                                           attribute_two,
              NULL                                                                                           attribute_three,
              NULL                                                                                           attribute_four,
              NULL                                                                                           attribute_five
       FROM   &TAB4
       UNION ALL
       SELECT ''#''||''^''||''#''||''^''||''#''                                                              id,
              NULL                                                                                           company,
              NULL                                                                                           code,
              NULL                                                                                           description,
              NULL                                                                                           start_date,
              NULL                                                                                           end_date,
              NULL                                                                                           consolidated,
              NULL                                                                                           year_status,
              NULL                                                                                           period_status,
              NULL                                                                                           period_type,
              NULL                                                                                           accounting_year,
              NULL                                                                                           accounting_period,
              NULL                                                                                           opening_balances,
              NULL                                                                                           closing_balances,
              NULL                                                                                           open_balances_consolidated,
              NULL                                                                                           report_from_date,
              NULL                                                                                           report_until_date,
              NULL                                                                                           attribute_one,
              NULL                                                                                           attribute_two,
              NULL                                                                                           attribute_three,
              NULL                                                                                           attribute_four,
              NULL                                                                                           attribute_five
       FROM BI_DUAL_TAB
       ';
   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_27');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN

   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX1';
   Database_SYS.Set_Table_Column (columns_, 'COMPANY');
   Database_SYS.Set_Table_Column (columns_, 'CODE');
   Database_Sys.Create_Index(table_name_,
                               index_name_,
                               columns_,
                               'U',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX2';
   Database_SYS.Set_Table_Column (columns_, 'COMPANY');
   Database_SYS.Set_Table_Column (columns_, 'ACCOUNTING_YEAR');
   Database_SYS.Set_Table_Column (columns_, 'ACCOUNTING_PERIOD');
   Database_Sys.Create_Index(table_name_,
                               index_name_,
                               columns_,
                               'U',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX3';
   Database_SYS.Set_Table_Column (columns_, 'COMPANY');
   Database_SYS.Set_Table_Column (columns_, 'ACCOUNTING_PERIOD');
   Database_Sys.Create_Index(table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);
   Database_SYS.Reset_Column_Table(columns_);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_28');
PROMPT Create Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);

   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);

   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT key_value                                 company,
              attribute_key                             translation_key,
              language_code                             language_code,
              SUBSTR(current_translation,1,100)         description,
              lu                                        lu,
              module                                    module,
              key_name                                  key_name
       FROM &TAB3
       WHERE key_name = ''CompanyKeyLu''
       AND   module   = ''ACCRUL''
       AND   lu       = ''AccountingPeriod''
       AND   rowtype  = ''CompanyKeyLuTranslation'' ';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_29');
PROMPT Create constraints and index(s) on Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := 'ACCOUNTING_PERIOD_TRANSL_IX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX');
END;
/

UNDEFINE MV
UNDEFINE MV_TRANS
UNDEFINE TAB1
UNDEFINE TAB2
UNDEFINE TAB3
UNDEFINE TAB4

--------------------------------------------------------------
--  Creating TAXCODE_MV
--------------------------------------------------------------

DEFINE MV         = TAXCODE_MV
DEFINE TAB1       = STATUTORY_FEE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_30');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.fee_code id,
              a.company                    company,
              a.fee_code                   code,
              ''Null''                     description,
              a.fee_rate                   fee_rate,
              a.valid_from                 valid_from,
              a.valid_until                valid_until,
              a.fee_type                   fee_type,
              a.vat_received               vat_received,
              a.vat_disbursed              vat_disbursed,
              a.deductible                 deductible,
              a.amount_not_taxable         amount_not_taxable,
              a.min_withheld_amount        min_withheld_amount,
              a.tax_amount_at_inv_print    tax_amount_at_inv_print,
              a.tax_amt_limit              tax_amt_limit,
              a.minimum_base_amount        minimum_base_amount
       FROM   &TAB1 a
       UNION ALL
             SELECT company||''^''||''#''        id,
                    company                      company,
                    NULL                         code,
                    NULL                         description,
                    NULL                         fee_rate,
                    NULL                         valid_from,
                    NULL                         valid_until,
                    NULL                         fee_type,
                    NULL                         vat_received,
                    NULL                         vat_disbursed,
                    NULL                         deductible,
                    NULL                         amount_not_taxable,
                    NULL                         min_withheld_amount,
                    NULL                         tax_amount_at_inv_print,
                    NULL                         tax_amt_limit,
                    NULL                         minimum_base_amount
             FROM   &TAB2
             UNION ALL
             SELECT ''#''||''^''||''#''          id,
                    NULL                         company,
                    NULL                         code,
                    NULL                         description,
                    NULL                         fee_rate,
                    NULL                         valid_from,
                    NULL                         valid_until,
                    NULL                         fee_type,
                    NULL                         vat_received,
                    NULL                         vat_disbursed,
                    NULL                         deductible,
                    NULL                         amount_not_taxable,
                    NULL                         min_withheld_amount,
                    NULL                         tax_amount_at_inv_print,
                    NULL                         tax_amt_limit,
                    NULL                         minimum_base_amount
             FROM BI_DUAL_TAB
             ';
         EXECUTE IMMEDIATE stmt_;

   dbms_output.put_line('Create constraint and index(s) on Materialized View &MV');

   constraint_name_ := table_name_||'_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_SYS.Create_Constraint ( table_name_,
                               constraint_name_,
                               columns_,
                               'P',
                               '&IFSAPP_INDEX',
                                NULL,
                                TRUE,
                                TRUE);

   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'U',
                               '&IFSAPP_INDEX',
                               NULL,
                               TRUE,
                               TRUE);


END;
/

---------------------------------------------------------------------------------------
--  ACCOUNT_MV
---------------------------------------------------------------------------------------

DEFINE MV         = ACCOUNT_MV
DEFINE TAB1       = ACCOUNTING_CODE_PART_VALUE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_31');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.code_part_value id,
              a.company                           company,
              a.code_part_value                   code,
              ''Dummy''                           description,
              a.accnt_group                       account_group,
              b.description                       account_group_desc,
              a.accnt_type                        account_type,
              c.description                       account_type_desc,
              a.valid_from                        valid_from,
              a.valid_until                       valid_until,
              a.logical_account_type              logical_account_type,
              a.ledg_flag                         ledger_account,
              a.curr_balance                      currency_balance,
              a.bud_account                       budget_account_only,
              a.tax_flag                          tax_account,
              a.tax_handling_value                tax_handling,
              a.exclude_from_curr_trans           exclude_from_curr_trans,
              a.keep_rep_currency                 keep_rep_currency,
              a.keep_reporting_entity             keep_reporting_entity,
              a.master_com_code_part_value        master_company_account
       FROM   ACCOUNTING_CODE_PART_VALUE_TAB a,
   ACCOUNT_GROUP_TAB b,
   ACCOUNT_TYPE_TAB c
       WHERE a.code_part   = ''A''
   AND    a.company     = b.company
   AND    a.accnt_group = b.accnt_group
   AND    a.company     = c.company
   AND    a.accnt_type  = c.user_defined_account_type
       UNION ALL
       SELECT company||''^''||''#''               id,
              company                             company,
              NULL                                code,
              NULL                                description,
              NULL                                account_group,
              NULL                                account_group_desc,
              NULL                                account_type,
              NULL                                account_type_desc,
              NULL                                valid_from,
              NULL                                valid_until,
              NULL                                logical_account_type,
              NULL                                ledger_account,
              NULL                                currency_balance,
              NULL                                budget_account_only,
              NULL                                tax_account,
              NULL                                tax_handling,
              NULL                                exclude_from_curr_trans,
              NULL                                keep_rep_currency,
              NULL                                keep_reporting_entity,
              NULL                                master_company_account
       FROM   &TAB2
       UNION ALL
       SELECT ''#''||''^''||''#''                 id,
              NULL                                company,
              NULL                                code,
              NULL                                description,
              NULL                                account_group,
              NULL                                account_group_desc,
              NULL                                account_type,
              NULL                                account_type_desc,
              NULL                                valid_from,
              NULL                                valid_until,
              NULL                                logical_account_type,
              NULL                                ledger_account,
              NULL                                currency_balance,
              NULL                                budget_account_only,
              NULL                                tax_account,
              NULL                                tax_handling,
              NULL                                exclude_from_curr_trans,
              NULL                                keep_rep_currency,
              NULL                                keep_reporting_entity,
              NULL                                master_company_account
       FROM BI_DUAL_TAB
    ';
   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_32');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN

   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX1';
   Database_SYS.Set_Table_Column (columns_, 'COMPANY');
   Database_SYS.Set_Table_Column (columns_, 'ACCOUNT_GROUP');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'N',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX2';
   Database_SYS.Set_Table_Column (columns_, 'COMPANY');
   Database_SYS.Set_Table_Column (columns_, 'LOGICAL_ACCOUNT_TYPE');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'N',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX3';
   Database_SYS.Set_Table_Column (columns_, 'COMPANY');
   Database_SYS.Set_Table_Column (columns_, 'ACCOUNT_TYPE');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'N',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_UX1';
   Database_SYS.Set_Table_Column (columns_, 'COMPANY');
   Database_SYS.Set_Table_Column (columns_, 'CODE');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'U',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

END;
/

UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2

-----------------------------------------------------------------------------

-- ***** COUNTER_PART_ONE_MV - Start *****

DEFINE MV         = COUNTER_PART_ONE_MV
DEFINE TAB1       = ACCOUNTING_CODE_PART_VALUE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_33');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT company||''^''||CODE_PART_VALUE id,
              company                         company,
              CODE_PART_VALUE                 code,
              DESCRIPTION                     description
       FROM   &TAB1
       WHERE code_part = ''K''
       UNION ALL
       SELECT company||''^''||''#''           id,
              company                         company,
              NULL                            code,
              NULL                            description
       FROM   &TAB2
       UNION ALL
       SELECT ''#''||''^''||''#''             id,
              NULL                            company,
              NULL                            code,
              NULL                            description
       FROM BI_DUAL_TAB
    ';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_34');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);

   Database_SYS.Reset_Column_Table(columns_);

END;
/

UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2

-- ***** COUNTER_PART_ONE_MV - End *****

-----------------------------------------------------------------------------

-- ***** COUNTER_PART_TWO_MV - Start *****

DEFINE MV         = COUNTER_PART_TWO_MV
DEFINE TAB1       = ACCOUNTING_CODE_PART_VALUE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_35');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT company||''^''||CODE_PART_VALUE id,
              company                         company,
              CODE_PART_VALUE                 code,
              DESCRIPTION                     description
       FROM   &TAB1
       WHERE code_part = ''L''
       UNION ALL
       SELECT company||''^''||''#''           id,
              company                         company,
              NULL                            code,
              NULL                            description
       FROM   &TAB2
       UNION ALL
       SELECT ''#''||''^''||''#''             id,
              NULL                            company,
              NULL                            code,
              NULL                            description
       FROM BI_DUAL_TAB
    ';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_36');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);

   Database_SYS.Reset_Column_Table(columns_);

END;
/

UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2

-- ***** COUNTER_PART_TWO_MV - End *****

-----------------------------------------------------------------------------

-- ***** CODE_N_MV - Start *****


DEFINE MV         = CODE_N_MV
DEFINE MV_TRANS   = CODE_N_TRANSLATION_MV
DEFINE TAB1       = ACCOUNTING_CODE_PART_VALUE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB
DEFINE TAB3       = KEY_LU_TRANSLATION_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_37');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.code_part_value id,
              a.company                           company,
              a.code_part_value                   code,
              a.description                       description
       FROM   &TAB1 a
       WHERE a.code_part      = ''N''
       UNION ALL
       SELECT company||''^''||''#''               id,
              company                             company,
              NULL                                code,
              NULL                                description
       FROM   &TAB2
       UNION ALL
       SELECT ''#''||''^''||''#''                 id,
              NULL                                company,
              NULL                                code,
              NULL                                description
       FROM BI_DUAL_TAB
    ';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_38');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index (table_name_,
                              index_name_,
                              columns_,
                              'U',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_39');
PROMPT Create Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);

   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);

   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT key_value                                 company,
              attribute_key                             translation_key,
              language_code                             language_code,
              SUBSTR(current_translation,1,100)         description,
              lu                                        lu,
              module                                    module
       FROM &TAB3
       WHERE lu     = ''CodeN''
       AND module   = ''ACCRUL''
       AND key_name = ''CompanyKeyLu''
       AND rowtype  = ''CompanyKeyLuTranslation'' ';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_40');
PROMPT Create constraints and index(s) on Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';

   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LU');
   Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX');
END;
/

UNDEFINE MV
UNDEFINE MV_TRANS
UNDEFINE TAB1
UNDEFINE TAB2
UNDEFINE TAB3

-- ***** CODE_N_MV - End *****

-----------------------------------------------------------------------------

-- ***** CODE_O_MV - Start *****


DEFINE MV         = CODE_O_MV
DEFINE MV_TRANS   = CODE_O_TRANSLATION_MV
DEFINE TAB1       = ACCOUNTING_CODE_PART_VALUE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB
DEFINE TAB3       = KEY_LU_TRANSLATION_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_41');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.code_part_value id,
              a.company                           company,
              a.code_part_value                   code,
              a.description                       description
       FROM   &TAB1 a
       WHERE a.code_part      = ''O''
       UNION ALL
       SELECT company||''^''||''#''               id,
              company                             company,
              NULL                                code,
              NULL                                description
       FROM   &TAB2
       UNION ALL
       SELECT ''#''||''^''||''#''                 id,
              NULL                                company,
              NULL                                code,
              NULL                                description
       FROM BI_DUAL_TAB
    ';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_42');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index (table_name_,
                              index_name_,
                              columns_,
                              'U',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_43');
PROMPT Create Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);

   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);

   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT key_value                                 company,
              attribute_key                             translation_key,
              language_code                             language_code,
              SUBSTR(current_translation,1,100)         description,
              lu                                        lu,
              module                                    module
       FROM &TAB3
       WHERE lu     = ''CodeO''
       AND module   = ''ACCRUL''
       AND key_name = ''CompanyKeyLu''
       AND rowtype  = ''CompanyKeyLuTranslation'' ';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_44');
PROMPT Create constraints and index(s) on Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';

   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LU');
   Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX');
END;
/

UNDEFINE MV
UNDEFINE MV_TRANS
UNDEFINE TAB1
UNDEFINE TAB2
UNDEFINE TAB3

-- ***** CODE_O_MV - End *****

-----------------------------------------------------------------------------

-- ***** CODE_P_MV - Start *****


DEFINE MV         = CODE_P_MV
DEFINE MV_TRANS   = CODE_P_TRANSLATION_MV
DEFINE TAB1       = ACCOUNTING_CODE_PART_VALUE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB
DEFINE TAB3       = KEY_LU_TRANSLATION_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_45');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.code_part_value id,
              a.company                           company,
              a.code_part_value                   code,
              a.description                       description
       FROM   &TAB1 a
       WHERE a.code_part      = ''P''
       UNION ALL
       SELECT company||''^''||''#''               id,
              company                             company,
              NULL                                code,
              NULL                                description
       FROM   &TAB2
       UNION ALL
       SELECT ''#''||''^''||''#''                 id,
              NULL                                company,
              NULL                                code,
              NULL                                description
       FROM BI_DUAL_TAB
    ';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_46');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index (table_name_,
                              index_name_,
                              columns_,
                              'U',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_47');
PROMPT Create Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);

   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);

   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT key_value                                 company,
              attribute_key                             translation_key,
              language_code                             language_code,
              SUBSTR(current_translation,1,100)         description,
              lu                                        lu,
              module                                    module
       FROM &TAB3
       WHERE lu     = ''CodeP''
       AND module   = ''ACCRUL''
       AND key_name = ''CompanyKeyLu''
       AND rowtype  = ''CompanyKeyLuTranslation'' ';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_48');
PROMPT Create constraints and index(s) on Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';

   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LU');
   Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX');
END;
/

UNDEFINE MV
UNDEFINE MV_TRANS
UNDEFINE TAB1
UNDEFINE TAB2
UNDEFINE TAB3

-- ***** CODE_P_MV - End *****

-----------------------------------------------------------------------------

-- ***** CODE_Q_MV - Start *****


DEFINE MV         = CODE_Q_MV
DEFINE MV_TRANS   = CODE_Q_TRANSLATION_MV
DEFINE TAB1       = ACCOUNTING_CODE_PART_VALUE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB
DEFINE TAB3       = KEY_LU_TRANSLATION_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_49');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.code_part_value id,
              a.company                           company,
              a.code_part_value                   code,
              a.description                       description
       FROM   &TAB1 a
       WHERE a.code_part      = ''Q''
       UNION ALL
       SELECT company||''^''||''#''               id,
              company                             company,
              NULL                                code,
              NULL                                description
       FROM   &TAB2
       UNION ALL
       SELECT ''#''||''^''||''#''                 id,
              NULL                                company,
              NULL                                code,
              NULL                                description
       FROM BI_DUAL_TAB
          ';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_50');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index (table_name_,
                              index_name_,
                              columns_,
                              'U',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_51');
PROMPT Create Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);

   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);

   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT key_value                                 company,
              attribute_key                             translation_key,
              language_code                             language_code,
              SUBSTR(current_translation,1,100)         description,
              lu                                        lu,
              module                                    module
       FROM &TAB3
       WHERE lu     = ''CodeQ''
       AND module   = ''ACCRUL''
       AND key_name = ''CompanyKeyLu''
       AND rowtype  = ''CompanyKeyLuTranslation'' ';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_52');
PROMPT Create constraints and index(s) on Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';

   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LU');
   Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX');
END;
/

UNDEFINE MV
UNDEFINE MV_TRANS
UNDEFINE TAB1
UNDEFINE TAB2
UNDEFINE TAB3

-- ***** CODE_Q_MV - End *****

-----------------------------------------------------------------------------

-- ***** CODE_R_MV - Start *****


DEFINE MV         = CODE_R_MV
DEFINE MV_TRANS   = CODE_R_TRANSLATION_MV
DEFINE TAB1       = ACCOUNTING_CODE_PART_VALUE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB
DEFINE TAB3       = KEY_LU_TRANSLATION_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_53');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.code_part_value id,
              a.company                           company,
              a.code_part_value                   code,
              a.description                       description
       FROM   &TAB1 a
       WHERE a.code_part      = ''R''
       UNION ALL
       SELECT company||''^''||''#''               id,
              company                             company,
              NULL                                code,
              NULL                                description
       FROM   &TAB2
       UNION ALL
       SELECT ''#''||''^''||''#''                 id,
              NULL                                company,
              NULL                                code,
              NULL                                description
       FROM BI_DUAL_TAB
    ';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_54');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index (table_name_,
                              index_name_,
                              columns_,
                              'U',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_55');
PROMPT Create Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);

   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);

   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT key_value                                 company,
              attribute_key                             translation_key,
              language_code                             language_code,
              SUBSTR(current_translation,1,100)         description,
              lu                                        lu,
              module                                    module
       FROM &TAB3
       WHERE lu     = ''CodeR''
       AND module   = ''ACCRUL''
       AND key_name = ''CompanyKeyLu''
       AND rowtype  = ''CompanyKeyLuTranslation'' ';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_56');
PROMPT Create constraints and index(s) on Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';

   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LU');
   Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX');
END;
/

UNDEFINE MV
UNDEFINE MV_TRANS
UNDEFINE TAB1
UNDEFINE TAB2
UNDEFINE TAB3

-- ***** CODE_R_MV - End *****

-----------------------------------------------------------------------------

-- ***** CODE_S_MV - Start *****


DEFINE MV         = CODE_S_MV
DEFINE MV_TRANS   = CODE_S_TRANSLATION_MV
DEFINE TAB1       = ACCOUNTING_CODE_PART_VALUE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB
DEFINE TAB3       = KEY_LU_TRANSLATION_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_57');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.code_part_value id,
              a.company                           company,
              a.code_part_value                   code,
              a.description                       description
       FROM   &TAB1 a
       WHERE a.code_part      = ''S''
       UNION ALL
       SELECT company||''^''||''#''               id,
              company                             company,
              NULL                                code,
              NULL                                description
       FROM   &TAB2
       UNION ALL
       SELECT ''#''||''^''||''#''                 id,
              NULL                                company,
              NULL                                code,
              NULL                                description
       FROM BI_DUAL_TAB
    ';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_58');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index (table_name_,
                              index_name_,
                              columns_,
                              'U',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_59');
PROMPT Create Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);

   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);

   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT key_value                                 company,
              attribute_key                             translation_key,
              language_code                             language_code,
              SUBSTR(current_translation,1,100)         description,
              lu                                        lu,
              module                                    module
       FROM &TAB3
       WHERE lu     = ''CodeS''
       AND module   = ''ACCRUL''
       AND key_name = ''CompanyKeyLu''
       AND rowtype  = ''CompanyKeyLuTranslation'' ';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_60');
PROMPT Create constraints and index(s) on Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';

   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LU');
   Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX');
END;
/

UNDEFINE MV
UNDEFINE MV_TRANS
UNDEFINE TAB1
UNDEFINE TAB2
UNDEFINE TAB3

-- ***** CODE_S_MV - End *****

-----------------------------------------------------------------------------

-- ***** CODE_T_MV - Start *****


DEFINE MV         = CODE_T_MV
DEFINE MV_TRANS   = CODE_T_TRANSLATION_MV
DEFINE TAB1       = ACCOUNTING_CODE_PART_VALUE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB
DEFINE TAB3       = KEY_LU_TRANSLATION_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_61');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.code_part_value id,
              a.company                           company,
              a.code_part_value                   code,
              a.description                       description
       FROM   &TAB1 a
       WHERE a.code_part      = ''T''
       UNION ALL
       SELECT company||''^''||''#''               id,
              company                             company,
              NULL                                code,
              NULL                                description
       FROM   &TAB2
       UNION ALL
       SELECT ''#''||''^''||''#''                 id,
              NULL                                company,
              NULL                                code,
              NULL                                description
       FROM BI_DUAL_TAB
    ';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_62');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index (table_name_,
                              index_name_,
                              columns_,
                              'U',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_63');
PROMPT Create Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);

   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);

   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT key_value                                 company,
              attribute_key                             translation_key,
              language_code                             language_code,
              SUBSTR(current_translation,1,100)         description,
              lu                                        lu,
              module                                    module
       FROM &TAB3
       WHERE lu     = ''CodeT''
       AND module   = ''ACCRUL''
       AND key_name = ''CompanyKeyLu''
       AND rowtype  = ''CompanyKeyLuTranslation'' ';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_64');
PROMPT Create constraints and index(s) on Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';

   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LU');
   Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX');
END;
/

UNDEFINE MV
UNDEFINE MV_TRANS
UNDEFINE TAB1
UNDEFINE TAB2
UNDEFINE TAB3

-- ***** CODE_T_MV - End *****



----------------------------------------------------------------------------------------

-- ***** SOURCE_TAX_ITEM_CMV Start *****

DEFINE MV_NAME       = SOURCE_TAX_ITEM_CMV
DEFINE SOURCE_TABLE  = SOURCE_TAX_ITEM_TAB

DECLARE
   stmt_            VARCHAR2(32000);
BEGIN
   Database_SYS.Remove_Materialized_View('&MV_NAME',TRUE);
   stmt_ :=
   'CREATE MATERIALIZED VIEW &MV_NAME
    BUILD DEFERRED
    USING NO INDEX
    REFRESH COMPLETE ON DEMAND
    EVALUATE USING CURRENT EDITION
    AS
    SELECT MAX(ROWVERSION) MAX_ROWVERSION
    FROM &SOURCE_TABLE';

   EXECUTE IMMEDIATE stmt_;

   IS_MV_REFRESH_INFO_API.Clear_Refresh_Info('&MV_NAME');
END;
/

UNDEFINE MV_NAME
UNDEFINE SOURCE_TABLE

-- ***** SOURCE_TAX_ITEM_CMV End *****

-----------------------------------------------------------------------------

-- ***** CODE_M_MV - Start *****

DEFINE MV         = CODE_M_MV
DEFINE MV_TRANS   = CODE_M_TRANSLATION_MV
DEFINE TAB1       = ACCOUNTING_CODE_PART_VALUE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB
DEFINE TAB3       = KEY_LU_TRANSLATION_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_65');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.code_part_value id,
              a.company                           company,
              a.code_part_value                   code,
              a.description                       description
       FROM   &TAB1 a
       WHERE a.code_part      = ''M''
       UNION ALL
       SELECT company||''^''||''#''               id,
              company                             company,
              NULL                                code,
              NULL                                description
       FROM   &TAB2
       UNION ALL
       SELECT ''#''||''^''||''#''                 id,
              NULL                                company,
              NULL                                code,
              NULL                                description
       FROM BI_DUAL_TAB
    ';
   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_66');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN

   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Database_SYS.Reset_Column_Table(columns_);

END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_67');
PROMPT Create Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);

   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);

   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT key_value                                 company,
              attribute_key                             translation_key,
              language_code                             language_code,
              SUBSTR(current_translation,1,100)         description,
              lu                                        lu,
              module                                    module
       FROM &TAB3
       WHERE lu     = ''CodeM''
       AND module   = ''ACCRUL''
       AND key_name = ''CompanyKeyLu''
       AND rowtype  = ''CompanyKeyLuTranslation'' ';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_68');
PROMPT Create constraints and index(s) on Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';

   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LU');
   Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX');
END;
/

UNDEFINE MV
UNDEFINE MV_TRANS
UNDEFINE TAB1
UNDEFINE TAB2
UNDEFINE TAB3

-- ***** CODE_M_MV - End *****
-----------------------------------------------------------------------------

-- ***** CODE_B_MV - Start *****


DEFINE MV         = CODE_B_MV
DEFINE MV_TRANS   = CODE_B_TRANSLATION_MV
DEFINE TAB1       = ACCOUNTING_CODE_PART_VALUE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB
DEFINE TAB3       = KEY_LU_TRANSLATION_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_69');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.code_part_value   id,
              a.code_part_value                     code,
              a.description                         description,
              a.company                             company,
              a.valid_from                          valid_from,
              a.valid_until                         valid_until,
              a.bud_account                         budget_value
       FROM  &TAB1 a
       WHERE a.code_part      = ''B''
       UNION ALL
       SELECT company || ''^'' || ''#''              id,
              NULL                                   code,
              NULL                                   description,
              company                                company,
              NULL                                   valid_from,
              NULL                                   valid_until,
              NULL                                   budget_value
       FROM &TAB2
       UNION ALL
       SELECT ''#'' || ''^'' || ''#''                id,
              NULL                                   code,
              NULL                                   description,
              NULL                                   company,
              NULL                                   valid_from,
              NULL                                   valid_until,
              NULL                                   budget_value
       FROM BI_DUAL_TAB';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_70');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Database_SYS.Reset_Column_Table(columns_);


   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index (table_name_,
                              index_name_,
                              columns_,
                              'U',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_71');
PROMPT Create Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);

   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);

   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT key_value                                 company,
              attribute_key                             translation_key,
              language_code                             language_code,
              SUBSTR(current_translation,1,100)         description,
              lu                                        lu,
              module                                    module
       FROM &TAB3
       WHERE lu     = ''CodeB''
       AND module   = ''ACCRUL''
       AND key_name = ''CompanyKeyLu''
       AND rowtype  = ''CompanyKeyLuTranslation'' ';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_72');
PROMPT Create constraints and index(s) on Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';

   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LU');
   Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX');
END;
/

UNDEFINE MV
UNDEFINE MV_TRANS
UNDEFINE TAB1
UNDEFINE TAB2
UNDEFINE TAB3

-- ***** CODE_B_MV - End *****

-------------------------------------------------------------------

-- ***** CODE_C_MV - Start *****

DEFINE MV         = CODE_C_MV
DEFINE MV_TRANS   = CODE_C_TRANSLATION_MV
DEFINE TAB1       = ACCOUNTING_CODE_PART_VALUE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB
DEFINE TAB3       = KEY_LU_TRANSLATION_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_73');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.code_part_value   id,
              a.code_part_value                     code,
              a.description                         description,
              a.company                             company,
              a.valid_from                          valid_from,
              a.valid_until                         valid_until,
	           a.bud_account                         budget_value
       FROM  &TAB1 a
       WHERE a.code_part      = ''C''
       UNION ALL
       SELECT company || ''^'' || ''#''             id,
              NULL                                  code,
              NULL                                  description,
              company                               company,
              NULL                                  valid_from,
              NULL                                  valid_until,
	      NULL			            budget_value
       FROM &TAB2
       UNION ALL
       SELECT ''#'' || ''^'' || ''#''               id,
              NULL                                  code,
              NULL                                  description,
              NULL                                  company,
              NULL                                  valid_from,
              NULL                                  valid_until,
	      NULL			            budget_value

       FROM BI_DUAL_TAB';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_74');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index (table_name_,
                              index_name_,
                              columns_,
                              'U',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_75');
PROMPT Create Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);

   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);

   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT key_value                                 company,
              attribute_key                             translation_key,
              language_code                             language_code,
              SUBSTR(current_translation,1,100)         description,
              lu                                        lu,
              module                                    module
       FROM &TAB3
       WHERE lu     = ''CodeC''
       AND module   = ''ACCRUL''
       AND key_name = ''CompanyKeyLu''
       AND rowtype  = ''CompanyKeyLuTranslation'' ';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_76');
PROMPT Create constraints and index(s) on Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';

   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LU');
   Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX');
END;
/

UNDEFINE MV
UNDEFINE MV_TRANS
UNDEFINE TAB1
UNDEFINE TAB2
UNDEFINE TAB3

-- ***** CODE_C_MV - End *****

-------------------------------------------------------------------

-- ***** CODE_D_MV - Start *****

DEFINE MV         = CODE_D_MV
DEFINE MV_TRANS   = CODE_D_TRANSLATION_MV
DEFINE TAB1       = ACCOUNTING_CODE_PART_VALUE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB
DEFINE TAB3       = KEY_LU_TRANSLATION_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_77');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.code_part_value   id,
              a.code_part_value                     code,
              a.description                         description,
              a.company                             company,
              a.valid_from                          valid_from,
              a.valid_until                         valid_until,
	           a.bud_account			                budget_value
       FROM  &TAB1 a
       WHERE a.code_part      = ''D''
       UNION ALL
       SELECT company || ''^'' || ''#''              id,
              NULL                                   code,
              NULL                                   description,
              company                                company,
              NULL                                   valid_from,
              NULL                                   valid_until,
	           NULL			                          budget_value
       FROM &TAB2
       UNION ALL
       SELECT ''#'' || ''^'' || ''#''                id,
              NULL                                   code,
              NULL                                   description,
              NULL                                   company,
              NULL                                   valid_from,
              NULL                                   valid_until,
	           NULL                                   budget_value
       FROM BI_DUAL_TAB';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_78');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index (table_name_,
                              index_name_,
                              columns_,
                              'U',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);


END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_79');
PROMPT Create Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);

   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);

   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT key_value                                 company,
              attribute_key                             translation_key,
              language_code                             language_code,
              SUBSTR(current_translation,1,100)         description,
              lu                                        lu,
              module                                    module
       FROM &TAB3
       WHERE lu     = ''CodeD''
       AND module   = ''ACCRUL''
       AND key_name = ''CompanyKeyLu''
       AND rowtype  = ''CompanyKeyLuTranslation'' ';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_80');
PROMPT Create constraints and index(s) on Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';

   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LU');
   Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX');
END;
/

UNDEFINE MV
UNDEFINE MV_TRANS
UNDEFINE TAB1
UNDEFINE TAB2
UNDEFINE TAB3

-- ***** CODE_D_MV - End *****

-------------------------------------------------------------------

-- ***** CODE_E_MV - Start *****

DEFINE MV         = CODE_E_MV
DEFINE MV_TRANS   = CODE_E_TRANSLATION_MV
DEFINE TAB1       = ACCOUNTING_CODE_PART_VALUE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB
DEFINE TAB3       = KEY_LU_TRANSLATION_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_81');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.code_part_value   id,
              a.code_part_value                     code,
              a.description                         description,
              a.company                             company,
              a.valid_from                          valid_from,
              a.valid_until                         valid_until,
              a.bud_account                         budget_value
       FROM  &TAB1 a
       WHERE a.code_part      = ''E''
       UNION ALL
       SELECT company || ''^'' || ''#''              id,
              NULL                                   code,
              NULL                                   description,
              company                                company,
              NULL                                   valid_from,
              NULL                                   valid_until,
              NULL                                   budget_value
       FROM &TAB2
       UNION ALL
       SELECT ''#'' || ''^'' || ''#''                id,
              NULL                                   code,
              NULL                                   description,
              NULL                                   company,
              NULL                                   valid_from,
              NULL                                   valid_until,
              NULL               			           budget_value
       FROM BI_DUAL_TAB';


   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_82');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index (table_name_,
                              index_name_,
                              columns_,
                              'U',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_83');
PROMPT Create Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);

   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);

   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT key_value                                 company,
              attribute_key                             translation_key,
              language_code                             language_code,
              SUBSTR(current_translation,1,100)         description,
              lu                                        lu,
              module                                    module
       FROM &TAB3
       WHERE lu     = ''CodeE''
       AND module   = ''ACCRUL''
       AND key_name = ''CompanyKeyLu''
       AND rowtype  = ''CompanyKeyLuTranslation'' ';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_84');
PROMPT Create constraints and index(s) on Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';

   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LU');
   Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX');
END;
/

UNDEFINE MV
UNDEFINE MV_TRANS
UNDEFINE TAB1
UNDEFINE TAB2
UNDEFINE TAB3

-- ***** CODE_E_MV - End *****

-------------------------------------------------------------------

-- ***** CODE_F_MV - Start *****

DEFINE MV         = CODE_F_MV
DEFINE MV_TRANS   = CODE_F_TRANSLATION_MV
DEFINE TAB1       = ACCOUNTING_CODE_PART_VALUE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB
DEFINE TAB3       = KEY_LU_TRANSLATION_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_85');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.code_part_value   id,
              a.code_part_value                     code,
              a.description                         description,
              a.company                             company,
              a.valid_from                          valid_from,
              a.valid_until                         valid_until,
              a.bud_account                         budget_value
       FROM  &TAB1 a
       WHERE a.code_part      = ''F''
       UNION ALL
       SELECT company || ''^'' || ''#''              id,
              NULL                                   code,
              NULL                                   description,
              company                                company,
              NULL                                   valid_from,
              NULL                                   valid_until,
              NULL                 	    	           budget_value
       FROM &TAB2
       UNION ALL
       SELECT ''#'' || ''^'' || ''#''                id,
              NULL                                   code,
              NULL                                   description,
              NULL                                   company,
              NULL                                   valid_from,
              NULL                                   valid_until,
              NULL			                          budget_value
       FROM BI_DUAL_TAB';

   EXECUTE IMMEDIATE stmt_;
END;
/


exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_86');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index (table_name_,
                              index_name_,
                              columns_,
                              'U',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_87');
PROMPT Create Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);

   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);

   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT key_value                                 company,
              attribute_key                             translation_key,
              language_code                             language_code,
              SUBSTR(current_translation,1,100)         description,
              lu                                        lu,
              module                                    module
       FROM &TAB3
       WHERE lu     = ''CodeF''
       AND module   = ''ACCRUL''
       AND key_name = ''CompanyKeyLu''
       AND rowtype  = ''CompanyKeyLuTranslation'' ';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_88');
PROMPT Create constraints and index(s) on Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';

   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LU');
   Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX');
END;
/

UNDEFINE MV
UNDEFINE MV_TRANS
UNDEFINE TAB1
UNDEFINE TAB2
UNDEFINE TAB3

-- ***** CODE_F_MV - End *****

-------------------------------------------------------------------

-- ***** CODE_G_MV - Start *****

DEFINE MV         = CODE_G_MV
DEFINE MV_TRANS   = CODE_G_TRANSLATION_MV
DEFINE TAB1       = ACCOUNTING_CODE_PART_VALUE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB
DEFINE TAB3       = KEY_LU_TRANSLATION_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_89');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.code_part_value   id,
              a.code_part_value                     code,
              a.description                         description,
              a.company                             company,
              a.valid_from                          valid_from,
              a.valid_until                         valid_until,
              a.bud_account                         budget_value
       FROM  &TAB1 a
       WHERE a.code_part      = ''G''
       UNION ALL
       SELECT company || ''^'' || ''#''              id,
              NULL                                   code,
              NULL                                   description,
              company                                company,
              NULL                                   valid_from,
              NULL                                   valid_until,
              NULL                                   budget_value
       FROM &TAB2
       UNION ALL
       SELECT ''#'' || ''^'' || ''#''                id,
              NULL                                   code,
              NULL                                   description,
              NULL                                   company,
              NULL                                   valid_from,
              NULL                                   valid_until,
              NULL                                   budget_value
       FROM BI_DUAL_TAB';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_90');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index (table_name_,
                              index_name_,
                              columns_,
                              'U',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_91');
PROMPT Create Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);

   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);

   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT key_value                                 company,
              attribute_key                             translation_key,
              language_code                             language_code,
              SUBSTR(current_translation,1,100)         description,
              lu                                        lu,
              module                                    module
       FROM &TAB3
       WHERE lu     = ''CodeG''
       AND module   = ''ACCRUL''
       AND key_name = ''CompanyKeyLu''
       AND rowtype  = ''CompanyKeyLuTranslation'' ';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_92');
PROMPT Create constraints and index(s) on Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';

   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LU');
   Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX');
END;
/


UNDEFINE MV
UNDEFINE MV_TRANS
UNDEFINE TAB1
UNDEFINE TAB2
UNDEFINE TAB3

-- ***** CODE_G_MV - End *****

-------------------------------------------------------------------

-- ***** CODE_H_MV - Start *****

DEFINE MV         = CODE_H_MV
DEFINE MV_TRANS   = CODE_H_TRANSLATION_MV
DEFINE TAB1       = ACCOUNTING_CODE_PART_VALUE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB
DEFINE TAB3       = KEY_LU_TRANSLATION_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_93');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.code_part_value   id,
              a.code_part_value                     code,
              a.description                         description,
              a.company                             company,
              a.valid_from                          valid_from,
              a.valid_until                         valid_until,
              a.bud_account                         budget_value
       FROM  &TAB1 a
       WHERE a.code_part      = ''H''
       UNION ALL
       SELECT company || ''^'' || ''#''              id,
              NULL                                   code,
              NULL                                   description,
              company                                company,
              NULL                                   valid_from,
              NULL                                   valid_until,
              NULL                 		              budget_value
       FROM &TAB2
       UNION ALL
       SELECT ''#'' || ''^'' || ''#''                id,
              NULL                                   code,
              NULL                                   description,
              NULL                                   company,
              NULL                                   valid_from,
              NULL                                   valid_until,
              NULL                                   budget_value
       FROM BI_DUAL_TAB';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_94');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index (table_name_,
                              index_name_,
                              columns_,
                              'U',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_95');
PROMPT Create Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);

   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);

   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT key_value                                 company,
              attribute_key                             translation_key,
              language_code                             language_code,
              SUBSTR(current_translation,1,100)         description,
              lu                                        lu,
              module                                    module
       FROM &TAB3
       WHERE lu     = ''CodeH''
       AND module   = ''ACCRUL''
       AND key_name = ''CompanyKeyLu''
       AND rowtype  = ''CompanyKeyLuTranslation'' ';

   EXECUTE IMMEDIATE stmt_;

END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_96');
PROMPT Create constraints and index(s) on Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LU');
   Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX');
END;
/


UNDEFINE MV
UNDEFINE MV_TRANS
UNDEFINE TAB1
UNDEFINE TAB2
UNDEFINE TAB3

-- ***** CODE_H_MV - End *****

-------------------------------------------------------------------

-- ***** CODE_I_MV - Start *****

DEFINE MV         = CODE_I_MV
DEFINE MV_TRANS   = CODE_I_TRANSLATION_MV
DEFINE TAB1       = ACCOUNTING_CODE_PART_VALUE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB
DEFINE TAB3       = KEY_LU_TRANSLATION_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_97');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.code_part_value   id,
              a.code_part_value                     code,
              a.description                         description,
              a.company                             company,
              a.valid_from                          valid_from,
              a.valid_until                         valid_until,
              a.bud_account                         budget_value
       FROM  &TAB1 a
       WHERE a.code_part      = ''I''
       UNION ALL
       SELECT company || ''^'' || ''#''              id,
              NULL                                   code,
              NULL                                   description,
              company                                company,
              NULL                                   valid_from,
              NULL                                   valid_until,
              NULL                                   budget_value
       FROM &TAB2
       UNION ALL
       SELECT ''#'' || ''^'' || ''#''                id,
              NULL                                   code,
              NULL                                   description,
              NULL                                   company,
              NULL                                   valid_from,
              NULL                                   valid_until,
              NULL                                   budget_value
       FROM BI_DUAL_TAB';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_98');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index (table_name_,
                              index_name_,
                              columns_,
                              'U',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
   Database_SYS.Reset_Column_Table(columns_);

END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_99');
PROMPT Create Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);

   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);

   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT key_value                                 company,
              attribute_key                             translation_key,
              language_code                             language_code,
              SUBSTR(current_translation,1,100)         description,
              lu                                        lu,
              module                                    module
       FROM &TAB3
       WHERE lu     = ''CodeI''
       AND module   = ''ACCRUL''
       AND key_name = ''CompanyKeyLu''
       AND rowtype  = ''CompanyKeyLuTranslation'' ';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_100');
PROMPT Create constraints and index(s) on Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';

   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LU');
   Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX');
END;
/

UNDEFINE MV
UNDEFINE MV_TRANS
UNDEFINE TAB1
UNDEFINE TAB2
UNDEFINE TAB3

-- ***** CODE_I_MV - End *****

-------------------------------------------------------------------

-- ***** CODE_J_MV - Start *****

DEFINE MV         = CODE_J_MV
DEFINE MV_TRANS   = CODE_J_TRANSLATION_MV
DEFINE TAB1       = ACCOUNTING_CODE_PART_VALUE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB
DEFINE TAB3       = KEY_LU_TRANSLATION_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_101');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.code_part_value   id,
              a.code_part_value                     code,
              a.description                         description,
              a.company                             company,
              a.valid_from                          valid_from,
              a.valid_until                         valid_until,
              a.bud_account                         budget_value
       FROM  &TAB1 a
       WHERE a.code_part      = ''J''
       UNION ALL
       SELECT company || ''^'' || ''#''              id,
              NULL                                   code,
              NULL                                   description,
              company                                company,
              NULL                                   valid_from,
              NULL                                   valid_until,
              NULL                                   budget_value
       FROM &TAB2
       UNION ALL
       SELECT ''#'' || ''^'' || ''#''                id,
              NULL                                   code,
              NULL                                   description,
              NULL                                   company,
              NULL                                   valid_from,
              NULL                                   valid_until,
              NULL                                   budget_value
       FROM BI_DUAL_TAB';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_102');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index (table_name_,
                              index_name_,
                              columns_,
                              'U',
                              '&IFSAPP_INDEX',
                              NULL,
                              TRUE,
                              TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_103');
PROMPT Create Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV_TRANS');
   Database_SYS.Remove_All_Cons_And_Idx('&MV_TRANS', TRUE);

   dbms_output.put_line('Drop Materialized View &MV_TRANS');
   Database_SYS.Remove_Materialized_View('&MV_TRANS', TRUE);

   dbms_output.put_line('Create Materialized View &MV_TRANS');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV_TRANS
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
       EVALUATE USING CURRENT EDITION
       AS
       SELECT key_value                                 company,
              attribute_key                             translation_key,
              language_code                             language_code,
              SUBSTR(current_translation,1,100)         description,
              lu                                        lu,
              module                                    module
       FROM &TAB3
       WHERE lu     = ''CodeJ''
       AND module   = ''ACCRUL''
       AND key_name = ''CompanyKeyLu''
       AND rowtype  = ''CompanyKeyLuTranslation'' ';

   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_104');
PROMPT Create constraints and index(s) on Materialized View &MV_TRANS
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV_TRANS';
   index_name_      VARCHAR2(30);
BEGIN
   index_name_ := table_name_||'_IX1';

   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'TRANSLATION_KEY');
   Database_SYS.Set_Table_Column (columns_ , 'LU');
   Database_SYS.Set_Table_Column (columns_ , 'LANGUAGE_CODE');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'N',
                               '&IFSAPP_INDEX');
END;
/


UNDEFINE MV
UNDEFINE MV_TRANS
UNDEFINE TAB1
UNDEFINE TAB2
UNDEFINE TAB3

-- ***** CODE_J_MV - End *****

-----------------------------------------------------------------------------------------

-- ***** Cost_Rev_Element_MV - Start *****

DEFINE MV     = COST_REV_ELEMENT_MV
DEFINE TAB1   = PROJECT_COST_ELEMENT
DEFINE TAB3   = COMPANY_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_105');
PROMPT CREATE Materialized VIEW &MV
DECLARE
   stmt_                    VARCHAR2(32000);
columns_                 Database_SYS.ColumnTabType;
table_name_              VARCHAR2(30) := '&MV';
index_name_              VARCHAR2(30);
constraint_name_         VARCHAR2(30);
BEGIN
   Database_SYS.Remove_All_Cons_And_Idx('COST_REV_ELEMENT_MV', TRUE);
   Database_SYS.Remove_Materialized_View('COST_REV_ELEMENT_MV', TRUE);

   stmt_ :=
   'CREATE MATERIALIZED VIEW &MV
    TABLESPACE &IFSAPP_DATA
    BUILD DEFERRED
    USING NO INDEX
    REFRESH COMPLETE ON DEMAND
	 EVALUATE USING CURRENT EDITION
    AS
    SELECT a.company || ''^'' || a.project_cost_element id,
          a.company                                     company,
          a.project_cost_element                        code,
          a.project_cost_element                        project_cost_element,
          a.description                                 element_description,
          a.default_cost_element                        default_cost_element,
          a.state                                    validity,
          Prj_Followup_Element_Type_API.Decode(a.element_type_db) element_type,
          a.element_type_db                             element_type_db
   FROM   &TAB1 a
   UNION ALL
   SELECT company || ''^'' || ''#''                    id,
          company                                      company,
          NULL                                         code,
          NULL                                         project_cost_element,
          NULL                                         element_description,
          NULL                                         default_cost_element,
          NULL                                         validity,
          NULL                                         element_type,
          NULL                                         element_type_db
   FROM   &TAB3 a
   UNION ALL
   SELECT ''#'' || ''^'' || ''#''                      id,
          NULL                                         company,
          NULL                                         code,
          NULL                                         project_cost_element,
          NULL                                         element_description,
          NULL                                         default_cost_element,
          NULL                                         validity,
          NULL                                         element_type,
          NULL                                         element_type_db
   FROM   BI_DUAL_TAB';

   EXECUTE IMMEDIATE stmt_;

   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
   constraint_name_,
   columns_,
   'P',
   '&IFSAPP_INDEX',
   NULL,
   TRUE,
   TRUE);
   Database_SYS.Reset_Column_Table(columns_);
   index_name_ := table_name_||'_UIX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
   index_name_,
   columns_,
   'U',
   '&IFSAPP_INDEX');
   Database_SYS.Reset_Column_Table(columns_);
END;
/

UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB3

-- ***** Cost_Rev_Element_MV - End *****

---------------------------------------------------------------

-- ***** Cost_Structure_MV - Start *****

DEFINE MV     = COST_STRUCTURE_MV
DEFINE TAB    = COST_STRUCTURE_ITEM_TAB
DEFINE TAB2   = COST_STRUCTURE_TAB
DEFINE TAB3   = COMPANY_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_106');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
'CREATE MATERIALIZED VIEW &MV
 TABLESPACE &IFSAPP_DATA
 BUILD DEFERRED
 USING NO INDEX
 REFRESH COMPLETE ON DEMAND
 EVALUATE USING CURRENT EDITION
 AS
SELECT a.company || ''^'' || a.cost_structure_id || ''^'' || a.name_value || ''^'' || a.cost_struct_item_type
                                                                           id,
       a.company                                                           company,
       a.cost_structure_id                                                 code,
       a.cost_structure_id                                                 cost_structure_id,
       a2.description                                                      structure_description,
       Cost_Struct_Item_Type_API.Decode(a.cost_struct_item_type) item_type,
       a.cost_struct_item_type                                        item_type_db,
       a.name_value                                                        node_element,
       a.description                                                       node_description,
       a.level_id                                                          level_id,
       Cost_Structure_Level_API.Get_Description (a.company, a.cost_structure_id, a.level_id)
                                                                           level_description,
       a.item_above                                                        parent_node
FROM   &TAB  a,
       &TAB2 a2
WHERE  a.company           = a2.company
AND    a.cost_structure_id = a2.cost_structure_id
AND    a2.rowstate         = ''Active''
UNION ALL
       SELECT company||''^''||''#''||''^''||''#''||''^''||''#''                                          id,
              company                                                                                    company,
              NULL                                                                                       code,
              NULL                                                                                       node_element,
              NULL                                                                                       item_type_db,
              NULL                                                                                       cost_structure_id,
              NULL                                                                                       structure_description,
              NULL                                                                                       item_type,
              NULL                                                                                       node_description,
              NULL                                                                                       level_id,
              NULL                                                                                       level_description,
              NULL                                                                                       parent_node
       FROM   &TAB3
UNION ALL
       SELECT ''#''||''^''||''#''||''^''||''#''||''^''||''#''                                            id,
              NULL                                                                                       company,
              NULL                                                                                       code,
              NULL                                                                                       node_element,
              NULL                                                                                       item_type_db,
              NULL                                                                                       cost_structure_id,
              NULL                                                                                       structure_description,
              NULL                                                                                       item_type,
              NULL                                                                                       node_description,
              NULL                                                                                       level_id,
              NULL                                                                                       level_description,
              NULL                                                                                       parent_node
       FROM BI_DUAL_TAB
    ';
   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_107');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN

   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Database_SYS.Reset_Column_Table(columns_);
   index_name_ := table_name_||'_UIX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Set_Table_Column (columns_ , 'NODE_ELEMENT');
   Database_SYS.Set_Table_Column (columns_ , 'ITEM_TYPE_DB');
   Database_SYS.Create_Index ( table_name_,
                               index_name_,
                               columns_,
                               'U',
                               '&IFSAPP_INDEX');
   Database_SYS.Reset_Column_Table(columns_);
END;
/

UNDEFINE MV
UNDEFINE TAB
UNDEFINE TAB2
UNDEFINE TAB3

-- ***** Cost_Structure_MV - End *****

-----------------------------------------------------------------------------------------------------------------

-- ***** COST_STRUC_HEAD_MV - Start *****

DEFINE MV         = COST_STRUC_HEAD_MV
DEFINE TAB1       = COST_STRUCTURE_TAB
DEFINE TAB2       = COMPANY_FINANCE_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_108');
PROMPT CREATE Materialized VIEW &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
            'CREATE MATERIALIZED VIEW &MV
             TABLESPACE &IFSAPP_DATA
             BUILD DEFERRED
             USING NO INDEX
             REFRESH COMPLETE ON DEMAND
			    EVALUATE USING CURRENT EDITION
             AS
             SELECT a.company||''^''||a.cost_structure_id id,
                    a.company                             company,
                    a.cost_structure_id                   code,
                    a.cost_structure_id                   cost_structure_id,
                    a.description                         structure_id_description
             FROM   &TAB1 a
             WHERE a.rowstate         = ''Active''
             ';
   EXECUTE IMMEDIATE stmt_;
END;
/

DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
   constraint_name_,
   columns_,
   'P',
   '&IFSAPP_INDEX',
   NULL,
   TRUE,
   TRUE);

   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
   index_name_,
   columns_,
   'U',
   '&IFSAPP_INDEX');
   Database_SYS.Reset_Column_Table(columns_);

END;
/

UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2

-- ***** COST_STRUC_HEAD_MV - End *****

-----------------------------------------------------------------------------------------
-- ***** Cost_Struc_Level_MV - Start *****

DEFINE MV         = COST_STRUC_LEVEL_MV
DEFINE TAB1       = COST_STRUCTURE_LEVEL_TAB
DEFINE TAB2       = COST_STRUCTURE_TAB
DEFINE TAB3       = COMPANY_FINANCE_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_109');
PROMPT CREATE Materialized VIEW &MV
DECLARE
   stmt_            VARCHAR2(32000);
columns_         Database_SYS.ColumnTabType;
table_name_      VARCHAR2(30) := '&MV';
index_name_      VARCHAR2(30);
constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.cost_structure_id||''^''||a.level_id id,
              a.company                                                company,
              a.cost_structure_id                                      cost_structure_id,
              a.level_id                                               code,
              a.level_id                                               level_id,
              a.description                                            level_id_description,
              a.level_above                                            parent_level_id
       FROM   &TAB1 a,
               &TAB2 b
       WHERE a.company            = b.company
       AND    a.cost_structure_id = b.cost_structure_id
       AND    b.rowstate          = ''Active''
    ';
   EXECUTE IMMEDIATE stmt_;
END;
/

DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
   constraint_name_,
   columns_,
   'P',
   '&IFSAPP_INDEX',
   NULL,
   TRUE,
   TRUE);

   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'COST_STRUCTURE_ID');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
   index_name_,
   columns_,
   'U',
   '&IFSAPP_INDEX',
   NULL,
   TRUE,
   TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'COST_STRUCTURE_ID');
   Database_SYS.Set_Table_Column (columns_ , 'LEVEL_ID');
   Database_SYS.Create_Index ( table_name_,
   index_name_,
   columns_,
   'N',
   '&IFSAPP_INDEX',
   NULL,
   TRUE,
   TRUE);
END;
/

UNDEFINE MV
UNDEFINE TAB
UNDEFINE TAB2
UNDEFINE TAB3

-- ***** Cost_Struc_Level_MV - End *****

---------------------------------------------------------------------------------------

-- ***** Cost_Struc_Node_MV - Start *****

DEFINE MV         = COST_STRUC_NODE_MV
DEFINE TAB1       = COST_STRUCTURE_ITEM_TAB
DEFINE TAB2       = COST_STRUCTURE_TAB
DEFINE TAB3       = COMPANY_FINANCE_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_110');
PROMPT CREATE Materialized VIEW &MV

DECLARE
   stmt_            VARCHAR2(32000);
columns_         Database_SYS.ColumnTabType;
table_name_      VARCHAR2(30) := '&MV';
index_name_      VARCHAR2(30);
constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.cost_structure_id||''^''||a.name_value id,
              a.company                                                  company,
              a.cost_structure_id                                        cost_structure_id,
              a.name_value                                               code,
              a.name_value                                               node_id,
              a.description                                              node_id_description,
              a.item_above                                               parent_node_id,
              a.level_id                                                 level_id
       FROM   &TAB1 a,
              &TAB2 b
       WHERE a.company                    = b.company
       AND    a.cost_structure_id          = b.cost_structure_id
       AND    a.cost_struct_item_type = ''NODE''
       AND    b.rowstate                   = ''Active''
    ';
   EXECUTE IMMEDIATE stmt_;
END;
/

DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
   constraint_name_,
   columns_,
   'P',
   '&IFSAPP_INDEX',
   NULL,
   TRUE,
   TRUE);

   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'COST_STRUCTURE_ID');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
   index_name_,
   columns_,
   'U',
   '&IFSAPP_INDEX',
   NULL,
   TRUE,
   TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_IX';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'COST_STRUCTURE_ID');
   Database_SYS.Set_Table_Column (columns_ , 'NODE_ID');
   Database_SYS.Create_Index ( table_name_,
   index_name_,
   columns_,
   'N',
   '&IFSAPP_INDEX',
   NULL,
   TRUE,
   TRUE);
END;
/

UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2
UNDEFINE TAB3

-- ***** Cost_Struc_Node_MV - End *****

-----------------------------------------------------------------------------------------------------------------

-- ***** Cost_Struc_Leaf_MV - Start *****

DEFINE MV         = COST_STRUC_LEAF_MV
DEFINE TAB1       = COST_STRUCTURE_ITEM_TAB
DEFINE TAB2       = COST_STRUCTURE_TAB
DEFINE TAB3       = COMPANY_FINANCE_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_111');
PROMPT CREATE Materialized VIEW &MV
DECLARE
   stmt_            VARCHAR2(32000);
columns_         Database_SYS.ColumnTabType;
table_name_      VARCHAR2(30) := '&MV';
index_name_      VARCHAR2(30);
constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.cost_structure_id||''^''||a.item_above||''^''||a.name_value id,
              a.company                                                                       company,
              a.cost_structure_id                                                             cost_structure_id,
              a.item_above                                                                    node_id,
              a.name_value                                                                    code
       FROM   &TAB1 a, &TAB2 b
       WHERE a.company                    = b.company
       AND    a.cost_structure_id          = b.cost_structure_id
       AND    a.cost_struct_item_type = ''COST_ELEMENT''
       AND    b.rowstate                   = ''Active''
    ';
   EXECUTE IMMEDIATE stmt_;
END;
/

DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
   constraint_name_,
   columns_,
   'P',
   '&IFSAPP_INDEX',
   NULL,
   TRUE,
   TRUE);

   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX1';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'COST_STRUCTURE_ID');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Create_Index ( table_name_,
   index_name_,
   columns_,
   'U',
   '&IFSAPP_INDEX',
   NULL,
   TRUE,
   TRUE);
END;
/

UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2
UNDEFINE TAB3

-- ***** Cost_Struc_Leaf_MV - End *****
-----------------------------------------------------------------------------

-- ***** Analytic_Cost_Str_MV - Start *****

DEFINE MV         = ANALYTIC_COST_STR_MV
DEFINE TAB1       = ANALYTIC_STRUCT_CACHE_TAB
DEFINE TAB2       = COMPANY_TAB
DEFINE TAB3       = COST_STRUCTURE_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_112');
PROMPT CREATE Materialized VIEW &MV

DECLARE
   stmt_            VARCHAR2(32000);
columns_         Database_SYS.ColumnTabType;
table_name_      VARCHAR2(30) := '&MV';
index_name_      VARCHAR2(30);
constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT a.company||''^''||a.project_cost_element id,
              a.company                                company,
              a.project_cost_element                   code,
              a.cost_structure_id                      cost_structure_id,
              a2.description                           structure_description,
              a.structure_node                         structure_node,
              a.structure_node_desc                    node_description,
              a.level_id                               level_id,
              a.level_id_desc                          level_description
       FROM   &TAB1 a,
              &TAB3 a2
       WHERE a.company           = a2.company
       AND    a.cost_structure_id = a2.cost_structure_id
       AND    a2.rowstate         = ''Active''
       UNION ALL
       SELECT company||''^''||''#''                    id,
              company                                  company,
              NULL                                     code,
              NULL                                     cost_structure_id,
              NULL                                     structure_description,
              NULL                                     structure_node,
              NULL                                     node_description,
              NULL                                     level_id,
              NULL                                     level_description
       FROM   &TAB2
       UNION ALL
       SELECT ''#''||''^''||''#''                      id,
              NULL                                     company,
              NULL                                     code,
              NULL                                     cost_structure_id,
              NULL                                     structure_description,
              NULL                                     structure_node,
              NULL                                     node_description,
              NULL                                     level_id,
              NULL                                     level_description
       FROM BI_DUAL_TAB
       ';
   EXECUTE IMMEDIATE stmt_;
END;
/

DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_SYS.Set_Table_Column (columns_ , 'COST_STRUCTURE_ID');
   Database_SYS.Set_Table_Column (columns_ , 'STRUCTURE_NODE');
   Database_SYS.Set_Table_Column (columns_ , 'LEVEL_ID');
   Database_Sys.Create_Constraint(table_name_,
   constraint_name_,
   columns_,
   'P',
   '&IFSAPP_INDEX',
   NULL,
   TRUE,
   TRUE);

   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_||'_UX';
   Database_SYS.Set_Table_Column (columns_ , 'COMPANY');
   Database_SYS.Set_Table_Column (columns_ , 'COST_STRUCTURE_ID');
   Database_SYS.Set_Table_Column (columns_ , 'CODE');
   Database_SYS.Set_Table_Column (columns_ , 'STRUCTURE_NODE');
   Database_SYS.Set_Table_Column (columns_ , 'LEVEL_ID');
   Database_SYS.Create_Index ( table_name_,
   index_name_,
   columns_,
   'U',
   '&IFSAPP_INDEX',
   NULL,
   TRUE,
   TRUE);
   Database_SYS.Reset_Column_Table(columns_);
END;
/

UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2
UNDEFINE TAB3

-- ***** Analytic_Cost_Str_MV - End *****

---------------------------------------------------------------------------------------------
-- ***** RPD_PERIOD_MV - Start *****

DEFINE MV         = RPD_PERIOD_MV
DEFINE TAB1       = RPD_PERIOD_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_113');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT CAST (d.reporting_date AS DATE)                                     id,
              d.reporting_date                                                    code,
              d.RPD_ID || ''^'' ||
      TO_CHAR(d.REPORTING_DATE, ''YYYY-MM-DD'', ''NLS_CALENDAR=Gregorian'')       id_with_rpd_id,
              d.rpd_id                                                            rpd_id,
              CAST (d.rpd_year AS NUMBER)                                         rpd_year,
              CAST (d.rpd_period AS NUMBER)                                       rpd_period,
              d.reporting_date                                                    reporting_date,
              i.description                                                       rpd_id_description,
              p.year_period_str                                                   year_period_str,
              p.from_date                                                         from_date,
              p.until_date                                                        until_date,
              CAST (p.year_period_num AS NUMBER)                                  year_period_num,
              p.string_attribute1                                                 string_attribute1,
              p.string_attribute2                                                 string_attribute2,
              p.string_attribute3                                                 string_attribute3,
              p.string_attribute4                                                 string_attribute4,
              p.string_attribute5                                                 string_attribute5,
              CAST (p.number_attribute1 AS NUMBER)                                number_attribute1,
              CAST (p.number_attribute2 AS NUMBER)                                number_attribute2,
              CAST (p.number_attribute3 AS NUMBER)                                number_attribute3,
              CAST (p.number_attribute4 AS NUMBER)                                number_attribute4,
              CAST (p.number_attribute5 AS NUMBER)                                number_attribute5
       FROM   RPD_IDENTITY_TAB i, RPD_PERIOD_TAB p, RPD_PERIOD_DETAIL_TAB d
       WHERE i.rpd_id     = d.rpd_id
   AND p.rpd_id     = d.rpd_id
   AND p.rpd_year   = d.rpd_year
   AND p.rpd_period = d.rpd_period
       UNION ALL
       SELECT TO_DATE(''1900-01-01'', ''YYYY-MM-DD'', ''NLS_CALENDAR=Gregorian'') id,
              NULL                                                                code,
              NULL                                                                id_with_rpd_id,
              NULL                                                                rpd_id,
              NULL                                                                rpd_year,
              NULL                                                                rpd_period,
              NULL                                                                reporting_date,
              NULL                                                                rpd_id_description,
              NULL                                                                year_period_str,
              NULL                                                                from_date,
              NULL                                                                until_date,
              NULL                                                                year_period_num,
              NULL                                                                string_attribute1,
              NULL                                                                string_attribute2,
              NULL                                                                string_attribute3,
              NULL                                                                string_attribute4,
              NULL                                                                string_attribute5,
              NULL                                                                number_attribute1,
              NULL                                                                number_attribute2,
              NULL                                                                number_attribute3,
              NULL                                                                number_attribute4,
              NULL                                                                number_attribute5
       FROM BI_DUAL_TAB
    ';
   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_114');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN

   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX1';
   Database_SYS.Set_Table_Column (columns_, 'CODE');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'N',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX2';
   Database_SYS.Set_Table_Column (columns_, 'RPD_ID');
   Database_SYS.Set_Table_Column (columns_, 'RPD_YEAR');
   Database_SYS.Set_Table_Column (columns_, 'RPD_PERIOD');
   Database_SYS.Set_Table_Column (columns_, 'REPORTING_DATE');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'N',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX3';
   Database_SYS.Set_Table_Column (columns_, 'ID_WITH_RPD_ID');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'N',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_UX1';
   Database_SYS.Set_Table_Column (columns_, 'RPD_ID');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'U',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

END;
/

UNDEFINE MV
UNDEFINE TAB1
-- ***** RPD_PERIOD_MV - End *****

-----------------------------------------------------------------------------------------------------------------

-- ***** LEDGER_INFORMATION_MV - Start *****

DEFINE MV         = LEDGER_INFORMATION_MV
DEFINE TAB1       = ACC_YEAR_LEDGER_INFO_TAB
DEFINE TAB2       = ACC_PERIOD_LEDGER_INFO_TAB

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_115');
PROMPT Create Materialized View &MV
DECLARE
   stmt_            VARCHAR2(32000);
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN
   dbms_output.put_line('Primary key cascade drop ON &MV');
   Database_SYS.Remove_All_Cons_And_Idx('&MV', TRUE);

   dbms_output.put_line('Drop Materialized View &MV');
   Database_SYS.Remove_Materialized_View('&MV', TRUE);

   dbms_output.put_line('Create Materialized View &MV');
   stmt_ :=
      'CREATE MATERIALIZED VIEW &MV
       TABLESPACE &IFSAPP_DATA
       BUILD DEFERRED
       USING NO INDEX
       REFRESH COMPLETE ON DEMAND
	    EVALUATE USING CURRENT EDITION
       AS
       SELECT TO_CHAR(b.company ||''^''|| TO_CHAR(b.accounting_year) ||''^''|| TO_CHAR(b.accounting_period)||''^''|| TO_CHAR(b.ledger_id)) id,
              a.company                                                                                                                    company,
              TO_CHAR(b.accounting_year)|| TO_CHAR(b.accounting_period,''FM00'')||TO_CHAR(b.ledger_id)                                     code,
              CAST (a.accounting_year AS NUMBER)                                                                                           accounting_year,
              CAST (b.accounting_period AS NUMBER)                                                                                         accounting_period,
              b.ledger_id                                                                                                                  ledger_id,
              a.year_status                                                                                                                year_status,
              b.period_status                                                                                                              period_status,
              a.opening_balances                                                                                                           opening_balances,
              a.closing_balances                                                                                                           closing_balances
       FROM   ACC_YEAR_LEDGER_INFO_TAB a,ACC_PERIOD_LEDGER_INFO_TAB b
       WHERE b.accounting_year = a.accounting_year AND b.company = a.company AND b.ledger_id = a.ledger_id';
   EXECUTE IMMEDIATE stmt_;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_116');
PROMPT Create constraints and index(s) on Materialized View &MV
DECLARE
   columns_         Database_SYS.ColumnTabType;
   table_name_      VARCHAR2(30) := '&MV';
   index_name_      VARCHAR2(30);
   constraint_name_ VARCHAR2(30);
BEGIN

   constraint_name_ := table_name_ || '_PK';
   Database_SYS.Set_Table_Column (columns_ , 'ID');
   Database_Sys.Create_Constraint(table_name_,
                                  constraint_name_,
                                  columns_,
                                  'P',
                                  '&IFSAPP_INDEX',
                                  NULL,
                                  TRUE,
                                  TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX1';
   Database_SYS.Set_Table_Column (columns_, 'COMPANY');
   Database_SYS.Set_Table_Column (columns_, 'CODE');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'N',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

   index_name_ := table_name_ || '_IX2';
   Database_SYS.Set_Table_Column (columns_, 'COMPANY');
   Database_SYS.Set_Table_Column (columns_, 'ACCOUNTING_YEAR');
   Database_SYS.Set_Table_Column (columns_, 'ACCOUNTING_PERIOD');
   Database_SYS.Set_Table_Column (columns_, 'LEDGER_ID');
   Database_Sys.Create_Index(table_name_,
                             index_name_,
                             columns_,
                             'N',
                             '&IFSAPP_INDEX',
                             NULL,
                             TRUE,
                             TRUE);
   Database_SYS.Reset_Column_Table(columns_);

END;
/

UNDEFINE MV
UNDEFINE TAB1
UNDEFINE TAB2

-- ***** LEDGER_INFORMATION_MV - End *****
--------------------------------------------------------------------------------------


--------------------------------------------------------------------------------------
-- ***** Removing obsolete views Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_117');
PROMPT Removing obsolete views
BEGIN
   Database_SYS.Remove_View('FACT_CURRENCY_RATES_DM_OPT', TRUE);
   Database_SYS.Remove_View('FACT_CURRENCY_RATES_OL_OPT', TRUE);
   Database_SYS.Remove_View('DIM_PROJ_COST_STRUCTURE_DM', TRUE);
   Database_SYS.Remove_View('DIM_PROJ_COST_STRUC_HEAD_DM', TRUE);
   Database_SYS.Remove_View('DIM_PROJ_COST_STRUC_LEAF_DM', TRUE);
   Database_SYS.Remove_View('DIM_PROJ_COST_STRUC_LEVEL_DM', TRUE);
   Database_SYS.Remove_View('DIM_PROJ_COST_STRUC_NODE_DM', TRUE);
   Database_SYS.Remove_View('DIM_ANALYTIC_PROJ_COST_STR_DM', TRUE);
   Database_SYS.Remove_View('DIM_PROJ_COST_STRUCTURE_OL', TRUE);
   Database_SYS.Remove_View('DIM_PROJ_COST_STRUC_LEVEL_OL', TRUE);
   Database_SYS.Remove_View('DIM_PROJ_COST_STRUC_NODE_OL', TRUE);
   Database_SYS.Remove_View('DIM_ANALYTIC_PROJ_COST_STR_OL', TRUE);
   Database_SYS.Remove_View('DIM_PROJ_COST_STRUC_HEAD_OL', TRUE);
   Database_SYS.Remove_View('DIM_PROJ_COST_STRUC_LEAF_OL', TRUE);
END;
/

-- ***** Removing obsolete views End *****
------------------------------------------------------------------
UNDEFINE MODULE
---------------------------------------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Timestamp_118');
PROMPT Upgrade statements in file Accrul 910.upg end here
-- Nothing is allowed to be placed below here
---------------------------------------------------------------------------------------------
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','1000.upg','Done');







