-----------------------------------------------------------------------------
--
--  Logical unit: DocumentFooterHandling
--  Component:    ACCRUL
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
-----------------------------------------------------------------------------

layer Core;

PROCEDURE Import_System_Footer_Field___(
   company_    IN VARCHAR2)
   IS   
BEGIN
   Footer_Field_API.Import_System_Footer_Field__(company_);
END Import_System_Footer_Field___;


@Override
PROCEDURE CRUD_Create___ (
   etag_   IN OUT VARCHAR2,
   key_    IN OUT Footer_Definition_Key,
   attr_   IN OUT VARCHAR2,
   info_   OUT VARCHAR2,
   action_ IN  VARCHAR2 )
IS
   last_position_ VARCHAR2(2000);
   last_profile_ VARCHAR2(2000);
   column1_field_ VARCHAR2(2000);
   column2_field_ VARCHAR2(2000);
   column3_field_ VARCHAR2(2000);
   column4_field_ VARCHAR2(2000);
   column5_field_ VARCHAR2(2000);
   column6_field_ VARCHAR2(2000);
   column7_field_ VARCHAR2(2000);
   column8_field_ VARCHAR2(2000);  
BEGIN
   Footer_Calculation___(last_position_, last_profile_, key_, attr_);
   Footer_Fields___(column1_field_, column2_field_, column3_field_, column4_field_, column5_field_, column6_field_, column7_field_, column8_field_, key_, attr_);
   Client_SYS.Add_To_Attr('LAST_POSITION', last_position_, attr_);  
   Client_SYS.Add_To_Attr('LAST_PROFILE', last_profile_, attr_);
   Client_SYS.Add_To_Attr('COLUMN1_FIELD', column1_field_, attr_);
   Client_SYS.Add_To_Attr('COLUMN2_FIELD', column2_field_, attr_);
   Client_SYS.Add_To_Attr('COLUMN3_FIELD', column3_field_, attr_);
   Client_SYS.Add_To_Attr('COLUMN4_FIELD', column4_field_, attr_);
   Client_SYS.Add_To_Attr('COLUMN5_FIELD', column5_field_, attr_);
   Client_SYS.Add_To_Attr('COLUMN6_FIELD', column6_field_, attr_);
   Client_SYS.Add_To_Attr('COLUMN7_FIELD', column7_field_, attr_);
   Client_SYS.Add_To_Attr('COLUMN8_FIELD', column8_field_, attr_);  
   super(etag_, key_, attr_, info_, action_);   
END CRUD_Create___;


@Override
PROCEDURE CRUD_Update___ (
   etag_   IN OUT VARCHAR2,
   key_    IN OUT Footer_Definition_Key,
   attr_   IN OUT VARCHAR2,
   info_   OUT VARCHAR2,
   action_ IN  VARCHAR2 )
IS
   last_position_ VARCHAR2(2000);
   last_profile_ VARCHAR2(2000);
   column1_field_ VARCHAR2(2000);
   column2_field_ VARCHAR2(2000);
   column3_field_ VARCHAR2(2000);
   column4_field_ VARCHAR2(2000);
   column5_field_ VARCHAR2(2000);
   column6_field_ VARCHAR2(2000);
   column7_field_ VARCHAR2(2000);
   column8_field_ VARCHAR2(2000); 
BEGIN
   Footer_Calculation___(last_position_, last_profile_, key_, attr_);
   Footer_Fields___(column1_field_, column2_field_, column3_field_, column4_field_, column5_field_, column6_field_, column7_field_, column8_field_, key_, attr_);
   Client_SYS.Add_To_Attr('LAST_POSITION', last_position_, attr_);  
   Client_SYS.Add_To_Attr('LAST_PROFILE', last_profile_, attr_);
   Client_SYS.Add_To_Attr('COLUMN1_FIELD', column1_field_, attr_);
   Client_SYS.Add_To_Attr('COLUMN2_FIELD', column2_field_, attr_);
   Client_SYS.Add_To_Attr('COLUMN3_FIELD', column3_field_, attr_);
   Client_SYS.Add_To_Attr('COLUMN4_FIELD', column4_field_, attr_);
   Client_SYS.Add_To_Attr('COLUMN5_FIELD', column5_field_, attr_);
   Client_SYS.Add_To_Attr('COLUMN6_FIELD', column6_field_, attr_);
   Client_SYS.Add_To_Attr('COLUMN7_FIELD', column7_field_, attr_);
   Client_SYS.Add_To_Attr('COLUMN8_FIELD', column8_field_, attr_); 
   super(etag_, key_, attr_, info_, action_);
END CRUD_Update___;


PROCEDURE Footer_Calculation___(
   last_position_ OUT VARCHAR2,
   last_profile_  OUT VARCHAR2,
   key_           IN Footer_Definition_Key,
   attr_          IN VARCHAR2 )
IS
   no_of_columns_    NUMBER;
   column1_width_    NUMBER;
   column2_width_    NUMBER;
   column3_width_    NUMBER;
   column4_width_    NUMBER;
   column5_width_    NUMBER;
   column6_width_    NUMBER;
   column7_width_    NUMBER;
   column8_width_    NUMBER;
   column1_prof_     NUMBER;
   column2_prof_     NUMBER;
   column3_prof_     NUMBER;
   column4_prof_     NUMBER;
   column5_prof_     NUMBER;
   column6_prof_     NUMBER;
   column7_prof_     NUMBER;
   column8_prof_     NUMBER;
   total_width_      NUMBER; 
BEGIN
   no_of_columns_ := Client_SYS.Get_Item_Value('NO_OF_COLUMNS', attr_);
   column1_width_ := Client_SYS.Get_Item_Value('COLUMN1_WIDTH', attr_);
   column2_width_ := Client_SYS.Get_Item_Value('COLUMN2_WIDTH', attr_);
   column3_width_ := Client_SYS.Get_Item_Value('COLUMN3_WIDTH', attr_);
   column4_width_ := Client_SYS.Get_Item_Value('COLUMN4_WIDTH', attr_);
   column5_width_ := Client_SYS.Get_Item_Value('COLUMN5_WIDTH', attr_);
   column6_width_ := Client_SYS.Get_Item_Value('COLUMN6_WIDTH', attr_);
   column7_width_ := Client_SYS.Get_Item_Value('COLUMN7_WIDTH', attr_);
   column8_width_ := Client_SYS.Get_Item_Value('COLUMN8_WIDTH', attr_);

   IF (no_of_columns_ IS NULL) THEN
      no_of_columns_ := Footer_Definition_API.Get_No_Of_Columns(key_.company, key_.footer_id);
   END IF;
   IF (no_of_columns_ > 8) THEN
      Error_SYS.Record_General(lu_name_, 'COLUMNNOVALID1: It is not possible to enter more than 8 columns in the No of Columns field.');
   END IF;
   IF ((column1_width_ IS NULL) AND (no_of_columns_ > 0)) THEN
      column1_width_ := Footer_Definition_API.Get_Column_Width(key_.company, key_.footer_id, 1);
   END IF;
   IF ((column2_width_ IS NULL) AND (no_of_columns_ > 1)) THEN
      column2_width_ := Footer_Definition_API.Get_Column_Width(key_.company, key_.footer_id, 2);
   END IF;
   IF ((column3_width_ IS NULL) AND (no_of_columns_ > 2)) THEN
      column3_width_ := Footer_Definition_API.Get_Column_Width(key_.company, key_.footer_id, 3);
   END IF;
   IF ((column4_width_ IS NULL) AND (no_of_columns_ > 3)) THEN
      column4_width_ := Footer_Definition_API.Get_Column_Width(key_.company, key_.footer_id, 4);
   END IF;
   IF ((column5_width_ IS NULL) AND (no_of_columns_ > 4)) THEN
      column5_width_ := Footer_Definition_API.Get_Column_Width(key_.company, key_.footer_id, 5);
   END IF;
   IF ((column6_width_ IS NULL) AND (no_of_columns_ > 5)) THEN
      column6_width_ := Footer_Definition_API.Get_Column_Width(key_.company, key_.footer_id, 6);
   END IF;
   IF ((column7_width_ IS NULL) AND (no_of_columns_ > 6)) THEN
      column7_width_ := Footer_Definition_API.Get_Column_Width(key_.company, key_.footer_id, 7);
   END IF;
   IF ((column8_width_ IS NULL) AND (no_of_columns_ > 7)) THEN
      column8_width_ := Footer_Definition_API.Get_Column_Width(key_.company, key_.footer_id, 8);
   END IF;   
   
   total_width_ := ROUND(NVL(column1_width_,0) + NVL(column2_width_,0) + NVL(column3_width_,0) + NVL(column4_width_,0) + NVL(column5_width_,0) + NVL(column6_width_,0) + NVL(column7_width_,0) + NVL(column8_width_,0));

   IF (column1_width_ < 0) THEN
      Error_SYS.Record_General(lu_name_, 'SUMOFWIDTHSVALID1: The width of the "1st Column" cannot be a negative value'); 
   END IF;
   IF (column2_width_ < 0) THEN
      Error_SYS.Record_General(lu_name_, 'SUMOFWIDTHSVALID2: The width of the "2nd Column" cannot be a negative value'); 
   END IF;
   IF (column3_width_ < 0) THEN
      Error_SYS.Record_General(lu_name_, 'SUMOFWIDTHSVALID3: The width of the "3rd Column" cannot be a negative value'); 
   END IF;
   IF (column4_width_ < 0) THEN
      Error_SYS.Record_General(lu_name_, 'SUMOFWIDTHSVALID4: The width of the "4th Column" cannot be a negative value'); 
   END IF;
   IF (column5_width_ < 0) THEN
      Error_SYS.Record_General(lu_name_, 'SUMOFWIDTHSVALID5: The width of the "5th Column" cannot be a negative value'); 
   END IF;
   IF (column6_width_ < 0) THEN
      Error_SYS.Record_General(lu_name_, 'SUMOFWIDTHSVALID6: The width of the "6th Column" cannot be a negative value'); 
   END IF;
   IF (column7_width_ < 0) THEN
      Error_SYS.Record_General(lu_name_, 'SUMOFWIDTHSVALID7: The width of the "7th Column" cannot be a negative value'); 
   END IF;
   IF (column8_width_ < 0) THEN
      Error_SYS.Record_General(lu_name_, 'SUMOFWIDTHSVALID8: The width of the "8th Column" cannot be a negative value'); 
   END IF;
   IF (total_width_ <> 100) THEN
      Error_SYS.Record_General(lu_name_, 'SUMOFWIDTHSVALID9: The Sum of the column widths should be 100%'); 
   END IF;
   
   column1_width_ := ROUND(((NVL(column1_width_,0)*800)/100)-1);
   column2_width_ := ROUND(((NVL(column2_width_,0)*800)/100)-1);
   column3_width_ := ROUND(((NVL(column3_width_,0)*800)/100)-1);
   column4_width_ := ROUND(((NVL(column4_width_,0)*800)/100)-1);
   column5_width_ := ROUND(((NVL(column5_width_,0)*800)/100)-1);
   column6_width_ := ROUND(((NVL(column6_width_,0)*800)/100)-1);
   column7_width_ := ROUND(((NVL(column7_width_,0)*800)/100)-1);
   column8_width_ := ROUND(((NVL(column8_width_,0)*800)/100)-1);
  
   IF((800/no_of_columns_)-Round(800/no_of_columns_))> 0 THEN
      column1_prof_:=(column2_width_)-ROUND(800/no_of_columns_);
   ELSE 
      column1_prof_:=(column1_width_-(ROUND(800/no_of_columns_)-1));
   END IF;      
   IF((800/no_of_columns_)-Round(800/no_of_columns_))> 0 THEN
      column2_prof_:=(column2_width_)-ROUND(800/no_of_columns_);
   ELSE 
      column2_prof_:=(column2_width_-(ROUND(800/no_of_columns_)-1));
   END IF;
   IF((800/no_of_columns_)-Round(800/no_of_columns_))> 0 THEN
      column3_prof_:=(column3_width_)-ROUND(800/no_of_columns_);
   ELSE 
      column3_prof_:=(column3_width_-(ROUND(800/no_of_columns_)-1));
   END IF;
   IF((800/no_of_columns_)-Round(800/no_of_columns_))> 0 THEN
      column4_prof_:=(column4_width_)-ROUND(800/no_of_columns_);
   ELSE 
      column4_prof_:=(column4_width_-(ROUND(800/no_of_columns_)-1));
   END IF;
   IF((800/no_of_columns_)-Round(800/no_of_columns_))> 0 THEN
      column5_prof_:=(column5_width_)-ROUND(800/no_of_columns_);
   ELSE 
      column5_prof_:=(column5_width_-(ROUND(800/no_of_columns_)-1));
   END IF;
   IF((800/no_of_columns_)-Round(800/no_of_columns_))> 0 THEN
      column6_prof_:=(column6_width_)-ROUND(800/no_of_columns_);
   ELSE 
      column6_prof_:=(column6_width_-(ROUND(800/no_of_columns_)-1));
   END IF;      
   IF((800/no_of_columns_)-Round(800/no_of_columns_))> 0 THEN
      column7_prof_:=(column7_width_)-ROUND(800/no_of_columns_);
   ELSE 
      column7_prof_:=(column7_width_-(ROUND(800/no_of_columns_)-1));
   END IF;      
   IF((800/no_of_columns_)-Round(800/no_of_columns_))> 0 THEN
      column8_prof_:=(column8_width_)-ROUND(800/no_of_columns_);
   ELSE 
      column8_prof_:=(column8_width_-(ROUND(800/no_of_columns_)-1));
   END IF;  
   
   IF no_of_columns_ = 1 THEN
      last_position_ := NVL(column1_width_,0) || ';' ;
      last_profile_ := NVL(column1_prof_,0) || ';' ;
   ELSIF no_of_columns_ = 2 THEN
      last_position_ := NVL(column1_width_,0) || ';' || NVL(column2_width_,0) || ';';
      last_profile_ := NVL(column1_prof_,0) || ';' || NVL(column2_prof_, 0) || ';';
   ELSIF no_of_columns_ = 3 THEN
      last_position_ := NVL(column1_width_,0) || ';' || NVL(column2_width_,0) || ';' || NVL(column3_width_,0) || ';';
      last_profile_ := NVL(column1_prof_,0) || ';' || NVL(column2_prof_, 0) || ';' || NVL(column3_prof_,0) || ';';
   ELSIF no_of_columns_ = 4 THEN   
      last_position_ := NVL(column1_width_,0) || ';' || NVL(column2_width_,0) || ';' || NVL(column3_width_,0) || ';' || NVL(column4_width_,0) || ';';
      last_profile_ := NVL(column1_prof_,0) || ';' || NVL(column2_prof_, 0) || ';' || NVL(column3_prof_,0) || ';' || NVL(column4_prof_,0) || ';';
   ELSIF no_of_columns_ = 5 THEN   
      last_position_ := NVL(column1_width_,0) || ';' || NVL(column2_width_,0) || ';' || NVL(column3_width_,0) || ';' || NVL(column4_width_,0) || ';' || NVL(column5_width_,0) || ';';
      last_profile_ := NVL(column1_prof_,0) || ';' || NVL(column2_prof_, 0) || ';' || NVL(column3_prof_,0) || ';' || NVL(column4_prof_,0) || ';' || NVL(column5_prof_,0) || ';';
   ELSIF no_of_columns_ = 6 THEN
      last_position_ := NVL(column1_width_,0) || ';' || NVL(column2_width_,0) || ';' || NVL(column3_width_,0) || ';' || NVL(column4_width_,0) || ';' || NVL(column5_width_,0) || ';' || NVL(column6_width_,0) || ';';
      last_profile_ := NVL(column1_prof_,0) || ';' || NVL(column2_prof_, 0) || ';' || NVL(column3_prof_,0) || ';' || NVL(column4_prof_,0) || ';' || NVL(column5_prof_,0) || ';';
   ELSIF no_of_columns_ = 7 THEN
      last_position_ := NVL(column1_width_,0) || ';' || NVL(column2_width_,0) || ';' || NVL(column3_width_,0) || ';' || NVL(column4_width_,0) || ';' || NVL(column5_width_,0) || ';' || NVL(column6_width_,0) || ';' || NVL(column7_width_,0) || ';';
      last_profile_ := NVL(column1_prof_,0) || ';' || NVL(column2_prof_, 0) || ';' || NVL(column3_prof_,0) || ';' || NVL(column4_prof_,0) || ';' || NVL(column5_prof_,0) || ';' || NVL(column6_prof_,0) || ';' || NVL(column7_prof_,0) || ';';
   ELSE
      last_position_ := NVL(column1_width_,0) || ';' || NVL(column2_width_,0) || ';' || NVL(column3_width_,0) || ';' || NVL(column4_width_,0) || ';' || NVL(column5_width_,0) || ';' || NVL(column6_width_,0) || ';' || NVL(column7_width_,0) || ';' || NVL(column8_width_,0) || ';';
      last_profile_ := NVL(column1_prof_,0) || ';' || NVL(column2_prof_, 0) || ';' || NVL(column3_prof_,0) || ';' || NVL(column4_prof_,0) || ';' || NVL(column5_prof_,0) || ';' || NVL(column6_prof_,0) || ';' || NVL(column7_prof_,0) || ';' || NVL(column8_prof_,0) || ';';
   END IF;
END Footer_Calculation___;


PROCEDURE Footer_Fields___ (
   column1_field_ IN OUT VARCHAR2,
   column2_field_ IN OUT VARCHAR2,
   column3_field_ IN OUT VARCHAR2,
   column4_field_ IN OUT VARCHAR2,
   column5_field_ IN OUT VARCHAR2,
   column6_field_ IN OUT VARCHAR2,
   column7_field_ IN OUT VARCHAR2,
   column8_field_ IN OUT VARCHAR2,
   key_           IN Footer_Definition_Key,
   attr_          IN VARCHAR2 )
IS
   column1_field_attr_ VARCHAR2(2000);
   column2_field_attr_ VARCHAR2(2000);
   column3_field_attr_ VARCHAR2(2000);
   column4_field_attr_ VARCHAR2(2000);
   column5_field_attr_ VARCHAR2(2000);
   column6_field_attr_ VARCHAR2(2000);
   column7_field_attr_ VARCHAR2(2000);
   column8_field_attr_ VARCHAR2(2000);  
BEGIN
   column1_field_attr_ := Client_SYS.Get_Item_Value('COLUMN1_FIELD', attr_);
   IF (column1_field_attr_ IS NOT NULL) THEN
      column1_field_ := REPLACE(column1_field_attr_,';',',');
   ELSE
      column1_field_ := Footer_Definition_API.Get_Column1_Field(key_.company, key_.footer_id);
   END IF; 
   column2_field_attr_ := Client_SYS.Get_Item_Value('COLUMN2_FIELD', attr_);
   IF (column2_field_attr_ IS NOT NULL) THEN
      column2_field_ := REPLACE(column2_field_attr_,';',',');
   ELSE
      column2_field_ := Footer_Definition_API.Get_Column2_Field(key_.company, key_.footer_id);
   END IF;
   column3_field_attr_ := Client_SYS.Get_Item_Value('COLUMN3_FIELD', attr_);
   IF (column3_field_attr_ IS NOT NULL) THEN
      column3_field_ := REPLACE(column3_field_attr_,';',',');
   ELSE
      column3_field_ := Footer_Definition_API.Get_Column3_Field(key_.company, key_.footer_id);
   END IF; 
   column4_field_attr_ := Client_SYS.Get_Item_Value('COLUMN4_FIELD', attr_);
   IF (column4_field_attr_ IS NOT NULL) THEN
      column4_field_ := REPLACE(column4_field_attr_,';',',');
   ELSE
      column4_field_ := Footer_Definition_API.Get_Column4_Field(key_.company, key_.footer_id);
   END IF;  
   column5_field_attr_ := Client_SYS.Get_Item_Value('COLUMN5_FIELD', attr_);
   IF (column5_field_attr_ IS NOT NULL) THEN
      column5_field_ := REPLACE(column5_field_attr_,';',',');
   ELSE
      column5_field_ := Footer_Definition_API.Get_Column5_Field(key_.company, key_.footer_id);
   END IF;  
   column6_field_attr_ := Client_SYS.Get_Item_Value('COLUMN6_FIELD', attr_);
   IF (column6_field_attr_ IS NOT NULL) THEN
      column6_field_ := REPLACE(column6_field_attr_,';',',');
   ELSE
      column6_field_ := Footer_Definition_API.Get_Column6_Field(key_.company, key_.footer_id);
   END IF;
   column7_field_attr_ := Client_SYS.Get_Item_Value('COLUMN7_FIELD', attr_);
   IF (column7_field_attr_ IS NOT NULL) THEN
      column7_field_ := REPLACE(column7_field_attr_,';',',');
   ELSE
      column7_field_ := Footer_Definition_API.Get_Column7_Field(key_.company, key_.footer_id);
   END IF;
   column8_field_attr_ := Client_SYS.Get_Item_Value('COLUMN8_FIELD', attr_);
   IF (column8_field_attr_ IS NOT NULL) THEN
      column8_field_ := REPLACE(column8_field_attr_,';',',');
   ELSE
      column8_field_ := Footer_Definition_API.Get_Column8_Field(key_.company, key_.footer_id);
   END IF;
END Footer_Fields___;


FUNCTION Auto_Insert_Col_Width___ (
	no_of_columns_ IN NUMBER) RETURN Auto_Calc_Col_Widths_Structure_Rec
IS
   rec_    Auto_Calc_Col_Widths_Structure_Rec;
BEGIN
	IF no_of_columns_ = 1 THEN
      rec_.column1_width := (100/no_of_columns_);
   ELSIF no_of_columns_ = 2 THEN
      rec_.column1_width := (100/no_of_columns_);
      rec_.column2_width := (100/no_of_columns_);   
   ELSIF no_of_columns_ = 3 THEN
      rec_.column1_width := (100/no_of_columns_);
      rec_.column2_width := (100/no_of_columns_);
      rec_.column3_width := (100/no_of_columns_);  
   ELSIF no_of_columns_ = 4 THEN
      rec_.column1_width := (100/no_of_columns_);
      rec_.column2_width := (100/no_of_columns_);
      rec_.column3_width := (100/no_of_columns_);
      rec_.column4_width := (100/no_of_columns_);  
   ELSIF no_of_columns_ = 5 THEN
      rec_.column1_width := (100/no_of_columns_);
      rec_.column2_width := (100/no_of_columns_);
      rec_.column3_width := (100/no_of_columns_);
      rec_.column4_width := (100/no_of_columns_);
      rec_.column5_width := (100/no_of_columns_); 
   ELSIF no_of_columns_ = 6 THEN
      rec_.column1_width := (100/no_of_columns_);
      rec_.column2_width := (100/no_of_columns_);
      rec_.column3_width := (100/no_of_columns_);
      rec_.column4_width := (100/no_of_columns_);
      rec_.column5_width := (100/no_of_columns_);
      rec_.column6_width := (100/no_of_columns_); 
   ELSIF no_of_columns_ = 7 THEN
      rec_.column1_width := (100/no_of_columns_);
      rec_.column2_width := (100/no_of_columns_);
      rec_.column3_width := (100/no_of_columns_);
      rec_.column4_width := (100/no_of_columns_);
      rec_.column5_width := (100/no_of_columns_);
      rec_.column6_width := (100/no_of_columns_);
      rec_.column7_width := (100/no_of_columns_);
   ELSIF no_of_columns_ = 8 THEN
      rec_.column1_width := (100/no_of_columns_);
      rec_.column2_width := (100/no_of_columns_);
      rec_.column3_width := (100/no_of_columns_);
      rec_.column4_width := (100/no_of_columns_);
      rec_.column5_width := (100/no_of_columns_);
      rec_.column6_width := (100/no_of_columns_);
      rec_.column7_width := (100/no_of_columns_);
      rec_.column8_width := (100/no_of_columns_);
   END IF; 
   RETURN rec_;
END Auto_Insert_Col_Width___;

