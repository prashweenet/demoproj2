-----------------------------------------------------------------------------
--
--  Logical unit: AccountHandling
--  Component:    ACCRUL
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
-- 200608   Sacnlk  GESPRING20-4734, Added Validate_Sat_Account_Group for accounting_xml_data functionality. 
-----------------------------------------------------------------------------

layer Core;


@Override
PROCEDURE CRUD_Default___ (
   rec_ IN OUT Account_Rec )
IS
BEGIN
   rec_.code_part := 'A';
   super(rec_);
   --Add post-processing code here
END CRUD_Default___;   

@Override
PROCEDURE CRUD_Create___ (
   etag_   IN OUT VARCHAR2,
   key_    IN OUT Account_Key,
   attr_   IN OUT VARCHAR2,
   info_   OUT VARCHAR2,
   action_ IN  VARCHAR2 )
IS
   company_                   accounting_code_part_value_tab.company%TYPE;
   req_budget_code_part_      accounting_code_part_value_tab.req_budget_code_b%TYPE;
   budget_code_part_          VARCHAR2(1);
   budget_code_part_blocked   EXCEPTION;
BEGIN
   
      --Add pre-processing code here
            
      company_ := Client_SYS.Get_Item_Value('COMPANY', attr_);
      req_budget_code_part_ := Client_SYS.Get_Item_Value('REQ_BUDGET_CODE_B_DB', attr_);
      IF (Accounting_Code_Parts_API.Is_Code_Used(company_, 'B') = 'FALSE' AND req_budget_code_part_ IS NOT NULL AND req_budget_code_part_ != 'S') THEN
         budget_code_part_ := 'B';
         RAISE budget_code_part_blocked;
      END IF;
      req_budget_code_part_ := Client_SYS.Get_Item_Value('REQ_BUDGET_CODE_C_DB', attr_);
      IF (Accounting_Code_Parts_API.Is_Code_Used(company_, 'C') = 'FALSE' AND req_budget_code_part_ IS NOT NULL AND req_budget_code_part_ != 'S') THEN
         budget_code_part_ := 'C';
         RAISE budget_code_part_blocked;
      END IF;
      req_budget_code_part_ := Client_SYS.Get_Item_Value('REQ_BUDGET_CODE_D_DB', attr_);
      IF (Accounting_Code_Parts_API.Is_Code_Used(company_, 'D') = 'FALSE' AND req_budget_code_part_ IS NOT NULL AND req_budget_code_part_ != 'S') THEN
         budget_code_part_ := 'D';
         RAISE budget_code_part_blocked;
      END IF;
      req_budget_code_part_ := Client_SYS.Get_Item_Value('REQ_BUDGET_CODE_E_DB', attr_);
      IF (Accounting_Code_Parts_API.Is_Code_Used(company_, 'E') = 'FALSE' AND req_budget_code_part_ IS NOT NULL AND req_budget_code_part_ != 'S') THEN
         budget_code_part_ := 'E';
         RAISE budget_code_part_blocked;
      END IF;
      req_budget_code_part_ := Client_SYS.Get_Item_Value('REQ_BUDGET_CODE_F_DB', attr_);
      IF (Accounting_Code_Parts_API.Is_Code_Used(company_, 'F') = 'FALSE' AND req_budget_code_part_ IS NOT NULL AND req_budget_code_part_ != 'S') THEN
         budget_code_part_ := 'F';
         
         RAISE budget_code_part_blocked;
      END IF;
      req_budget_code_part_ := Client_SYS.Get_Item_Value('REQ_BUDGET_CODE_G_DB', attr_);
      IF (Accounting_Code_Parts_API.Is_Code_Used(company_, 'G') = 'FALSE' AND req_budget_code_part_ IS NOT NULL AND req_budget_code_part_ != 'S') THEN
         budget_code_part_ := 'G';
         RAISE budget_code_part_blocked;
      END IF;
      req_budget_code_part_ := Client_SYS.Get_Item_Value('REQ_BUDGET_CODE_H_DB', attr_);
      IF (Accounting_Code_Parts_API.Is_Code_Used(company_, 'H') = 'FALSE' AND req_budget_code_part_ IS NOT NULL AND req_budget_code_part_ != 'S') THEN
         budget_code_part_ := 'H';
         RAISE budget_code_part_blocked;
      END IF;
      req_budget_code_part_ := Client_SYS.Get_Item_Value('REQ_BUDGET_CODE_I_DB', attr_);
      IF (Accounting_Code_Parts_API.Is_Code_Used(company_, 'I') = 'FALSE' AND req_budget_code_part_ IS NOT NULL AND req_budget_code_part_ != 'S') THEN
         budget_code_part_ := 'I';
         RAISE budget_code_part_blocked;
      END IF;
      req_budget_code_part_ := Client_SYS.Get_Item_Value('REQ_BUDGET_CODE_J_DB', attr_);
      IF (Accounting_Code_Parts_API.Is_Code_Used(company_, 'J') = 'FALSE' AND req_budget_code_part_ IS NOT NULL AND req_budget_code_part_ != 'S') THEN
         budget_code_part_ := 'J';
         RAISE budget_code_part_blocked;
      END IF;
   
      super(etag_, key_, attr_, info_, action_);
   EXCEPTION 
   WHEN budget_code_part_blocked THEN
      Error_SYS.Record_General(lu_name_,
                               'BUDCD_BLK: Budget Code Part :P1 is set as not used in Defined Code String.',
                               Accounting_Code_Parts_API.Get_Name(company_, budget_code_part_));
   --Add post-processing code here
END CRUD_Create___;

@Override
PROCEDURE CRUD_Update___ (
   etag_   IN OUT VARCHAR2,
   key_    IN OUT Account_Key,
   attr_   IN OUT VARCHAR2,
   info_   OUT VARCHAR2,
   action_ IN  VARCHAR2 )
IS
   company_                   accounting_code_part_value_tab.company%TYPE;
   req_budget_code_part_      accounting_code_part_value_tab.req_budget_code_b%TYPE;
   budget_code_part_          VARCHAR2(1);
   budget_code_part_blocked   EXCEPTION;
BEGIN
   --Add pre-processing code here  
   
   company_ := key_.company;
      req_budget_code_part_ := Client_SYS.Get_Item_Value('REQ_BUDGET_CODE_B_DB', attr_);
      IF (Accounting_Code_Parts_API.Is_Code_Used(company_, 'B') = 'FALSE' AND req_budget_code_part_ IS NOT NULL AND req_budget_code_part_ != 'S') THEN
         budget_code_part_ := 'B';
         RAISE budget_code_part_blocked;
      END IF;
      req_budget_code_part_ := Client_SYS.Get_Item_Value('REQ_BUDGET_CODE_C_DB', attr_);
      IF (Accounting_Code_Parts_API.Is_Code_Used(company_, 'C') = 'FALSE' AND req_budget_code_part_ IS NOT NULL AND req_budget_code_part_ != 'S') THEN
         budget_code_part_ := 'C';
         RAISE budget_code_part_blocked;
      END IF;
      req_budget_code_part_ := Client_SYS.Get_Item_Value('REQ_BUDGET_CODE_D_DB', attr_);
      IF (Accounting_Code_Parts_API.Is_Code_Used(company_, 'D') = 'FALSE' AND req_budget_code_part_ IS NOT NULL AND req_budget_code_part_ != 'S') THEN
         budget_code_part_ := 'D';
         RAISE budget_code_part_blocked;
      END IF;
      req_budget_code_part_ := Client_SYS.Get_Item_Value('REQ_BUDGET_CODE_E_DB', attr_);
      IF (Accounting_Code_Parts_API.Is_Code_Used(company_, 'E') = 'FALSE' AND req_budget_code_part_ IS NOT NULL AND req_budget_code_part_ != 'S') THEN
         budget_code_part_ := 'E';
         RAISE budget_code_part_blocked;
      END IF;
      req_budget_code_part_ := Client_SYS.Get_Item_Value('REQ_BUDGET_CODE_F_DB', attr_);
      IF (Accounting_Code_Parts_API.Is_Code_Used(company_, 'F') = 'FALSE' AND req_budget_code_part_ IS NOT NULL AND req_budget_code_part_ != 'S') THEN
         budget_code_part_ := 'F';
         
         RAISE budget_code_part_blocked;
      END IF;
      req_budget_code_part_ := Client_SYS.Get_Item_Value('REQ_BUDGET_CODE_G_DB', attr_);
      IF (Accounting_Code_Parts_API.Is_Code_Used(company_, 'G') = 'FALSE' AND req_budget_code_part_ IS NOT NULL AND req_budget_code_part_ != 'S') THEN
         budget_code_part_ := 'G';
         RAISE budget_code_part_blocked;
      END IF;
      req_budget_code_part_ := Client_SYS.Get_Item_Value('REQ_BUDGET_CODE_H_DB', attr_);
      IF (Accounting_Code_Parts_API.Is_Code_Used(company_, 'H') = 'FALSE' AND req_budget_code_part_ IS NOT NULL AND req_budget_code_part_ != 'S') THEN
         budget_code_part_ := 'H';
         RAISE budget_code_part_blocked;
      END IF;
      req_budget_code_part_ := Client_SYS.Get_Item_Value('REQ_BUDGET_CODE_I_DB', attr_);
    
      IF (Accounting_Code_Parts_API.Is_Code_Used(company_, 'I') = 'FALSE' AND req_budget_code_part_ IS NOT NULL AND req_budget_code_part_ != 'S') THEN
         budget_code_part_ := 'I';
         RAISE budget_code_part_blocked;
      END IF;
      req_budget_code_part_ := Client_SYS.Get_Item_Value('REQ_BUDGET_CODE_J_DB', attr_);
      IF (Accounting_Code_Parts_API.Is_Code_Used(company_, 'J') = 'FALSE' AND req_budget_code_part_ IS NOT NULL AND req_budget_code_part_ != 'S') THEN
         budget_code_part_ := 'J';
         RAISE budget_code_part_blocked;
      END IF;
      super(etag_, key_, attr_, info_, action_);
   
   EXCEPTION 
   WHEN budget_code_part_blocked THEN
      Error_SYS.Record_General(lu_name_,
                               'BUDCD_BLK: Budget Code Part :P1 is set as not used in Defined Code String.',
                               Accounting_Code_Parts_API.Get_Name(company_, budget_code_part_));
   --Add post-processing code here
END CRUD_Update___;

@Override
PROCEDURE CRUD_Default_Copy___ (
   rec_ IN OUT Account_Rec )
IS
BEGIN
   super(rec_);
   IF (rec_.master_com_code_part_value IS NOT NULL) THEN
      rec_.description := Accounting_Code_Part_A_API.Get_Description(rec_.master_company, rec_.master_com_code_part_value);
   END IF;
END CRUD_Default_Copy___;

-- gelr:accounting_xml_data, begin
FUNCTION Validate_Sat_Account_Group___ (
   company_           IN VARCHAR2,
   sat_account_group_ IN VARCHAR2 )  RETURN VARCHAR2
IS
   sat_level_       VARCHAR2(20);
BEGIN
   IF (Company_Localization_Info_API.Get_Parameter_Value_Db(company_, 'ACCOUNTING_XML_DATA') = Fnd_Boolean_API.DB_TRUE) THEN
      sat_level_ := Sat_Account_Group_API.Get_Sat_Level(company_, sat_account_group_);
   END IF;
   RETURN sat_level_;
END Validate_Sat_Account_Group___;
-- gelr:accounting_xml_data, end





