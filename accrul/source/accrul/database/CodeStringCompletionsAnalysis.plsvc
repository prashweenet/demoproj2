-----------------------------------------------------------------------------
--
--  Logical unit: CodeStringCompletionsAnalysis
--  Component:    ACCRUL
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
-----------------------------------------------------------------------------

layer Core;

@Override
PROCEDURE CRUD_Update___ (
   etag_ IN OUT VARCHAR2,
   key_  IN OUT Accounting_Codestr_Compl_Key,
   attr_ IN OUT VARCHAR2,
   info_ OUT VARCHAR2,
   action_ IN VARCHAR2 )
IS
   unpack_rec_          Accounting_Codestr_Compl_Rec;
   codepart_block_info_ VARCHAR2(1);
   codepart_demand_     VARCHAR2(2000) := NULL;
   modify_attr_         VARCHAR2(2000);
   modify_info_         VARCHAR2(50);
   objid_               VARCHAR2(100);
   objversion_          VARCHAR2(50);

   CURSOR get_other_codestr_compl_records IS
      SELECT *
        FROM Accounting_Codestr_Compl a
       WHERE a.company            = key_.company
         AND a.code_part          = key_.code_part
         AND a.code_part_value    = key_.code_part_value
         AND (a.codefill_code_part != 'A' OR a.codefill_code_part != a.code_part)
         AND a.codefill_value IS NOT NULL;
BEGIN
   --Add pre-processing code here
   Add_To_Rec_From_Attr___(attr_, unpack_rec_);
   IF unpack_rec_.codefill_value IS NOT NULL THEN
      Accounting_Code_Part_Value_API.Exist(key_.company, key_.codefill_code_part, unpack_rec_.codefill_value);
      
      codepart_block_info_ := Accounting_Codestr_Compl_API.Get_Code_Part_Block_Info(key_.company,key_.code_part,key_.code_part_value,key_.codefill_code_part);
      IF (codepart_block_info_ = 'S') THEN
         Error_SYS.Appl_General(lu_name_, 'CODEPARTBLOCKED: The codepart :P1 is blocked.', key_.codefill_code_part);
      END IF;
   END IF;
   
   super(etag_, key_, attr_, info_, action_);
   IF key_.codefill_code_part = 'A' THEN
      Accounting_Code_Part_A_API.Get_Required_Code_Part(codepart_demand_,key_.company,unpack_rec_.codefill_value);
      FOR rec_ IN get_other_codestr_compl_records LOOP
         IF (rec_.codefill_code_part = 'P') THEN
            IF (SUBSTR(codepart_demand_,INSTR(codepart_demand_,'PROCESS_CODE') + 13, 1) = 'S') THEN
               modify_attr_       := NULL;
               objid_      := rec_.objid;
               objversion_ := rec_.objversion;
               Client_SYS.Add_To_Attr('CODEFILL_VALUE', '', modify_attr_);
               Accounting_Codestr_Compl_API.Modify__(modify_info_, objid_, objversion_, modify_attr_, 'DO'); 
            END IF;
         ELSE
            IF (SUBSTR(codepart_demand_,INSTR(codepart_demand_,'CODE_'|| rec_.codefill_code_part) + 7, 1) = 'S') THEN
               modify_attr_       := NULL;
               objid_      := rec_.objid;
               objversion_ := rec_.objversion;
               Client_SYS.Add_To_Attr('CODEFILL_VALUE', '', modify_attr_);
               Accounting_Codestr_Compl_API.Modify__(modify_info_, objid_, objversion_, modify_attr_, 'DO'); 
            END IF;
         END IF;
      END LOOP;
   END IF;
END CRUD_Update___;

