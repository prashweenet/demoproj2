-----------------------------------------------------------------------------
--  Module : ACCRUL
--
--  Purpose: File for upgrading Accounting Rules versions 9.1.0-GET, 10.0.0-GET to 21.1.0
--
--  File   : 2110_GET.upg
--
--  IFS/Design Template Version 2.3
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  190926  NiJilk  Created.
--  201120  Jadulk  FISPRING20-8268, Changed IFS Cloud version to 21R1.
--  241120  Rruklk  FISPRING20-8133, Resized column FORM_VERSION to VARCHAR2(20)  
--  170221  Basblk  FISPRING20-9134, Replaced Create_Or_Replace_Table with Create_Table.
-----------------------------------------------------------------------------

SET SERVEROUTPUT ON

DEFINE MODULE = 'ACCRUL'
DEFINE GET9VERSION  = 9.1.0-GET
DEFINE GET10VERSION  = 10.0.0-GET

------------------------------------------------------------------------------------------

-- Instructions for upg files:

-- If possible, everything regarding one table should be placed in one section.
-- If this is not possible, a proper comment about the reason should be added.

-- Each section should be started with a "-" line and a empty line.
-- The section should then start with a line like: "-- ***** Example_Tab Start *****"
-- and end with a line like:                       "-- ***** Example_Tab End *****"
-- The "start tag" (in this case "Example_Tab"), should be placed in "List of upgrade sections".
-- Don't forget UPPER/lower case !

-- Every part inside the section should start with a "PROMPT" line.

-- If the Pl block has DML instructions (INSERT,UPDATE,DELETE etc) there should always be a "COMMIT;" line after the block.
-- If the Pl block not has DML instructions, there should not be a "COMMIT;" line after the block.

-- Remember ordinary coding standard rules !

-- Don't drop any column in an upgrade file !

-- Don't forget performance when updating large tabled !

-- No unnecessary blank lines or comments !

-- If possible, use pure SQL update
-- If possible, try to put several updates together in one statement.

-----------------------------------------------------------------------------------------

-- LIST OF  SECTIONS

-- SECTION 1 - Handling Upgrade from GET9 to GET10 RTM
--    List of upgrade sections - statutory_fee_tab
--                               hsn_sac_groups_tab
--                               hsn_sac_codes_tab
--                               hsn_sac_tax_structures_tab
--                               jpk_invoice_configuration_tab
--                               jpk_invent_configuration_tab
--                               jpk_file_tab
--                               jpk_file_id_seq
--                               jpk_header_tab
--                               jpk_entity_tab
--                               jpk_sales_records_tab
--                               jpk_purchase_records_tab
--                               jpk_general_parameters_tab
--                               jpk_invent_report_types_tab
--                               jpk_goods_received_tab
--                               jpk_goods_issued_tab
--                               jpk_internal_issue_tab
--                               jpk_internal_transfer_tab
--                               jpk_warehouse_tab
--                               jpk_invoice_tab
--                               jpk_invoice_line_tab
--                               jpk_file_log_tab
--                               tax_code_texts_tab
--                               tax_structure_item_tab
--                               Removing old External File JPK_VAT and Template
--                               jpk_bank_accounts_tab
--                               jpk_account_balances_tab
--                               jpk_bank_statement_tab
--                               jpk_accounting_journal_tab
--                               jpk_turnover_balance_tab
--                               jpk_journal_entry_tab
--                               voucher_row_tab

-- SECTION 2 - Handling Upgrade from GET10 RTM to GET10 UPD6
--    List of upgrade sections -   statutory_fee_tab
--                                 voucher_row_tab
--                                 tax_liability_date_ctrl_tab
--                                 currency_type_basic_data_tab
--                                 jpk_general_parameters_tab
--                                 voucher_row_tab
--                                 pt_invoice_type_tab
--                                 pt_movement_type_tab
--                                 pt_payment_type_tab
--                                 pt_taxonomy_code_tab
--                                 pt_transaction_types_tab
--                                 pt_invoice_type_config_tab
--                                 pt_movement_type_config_tab
--                                 pt_payment_type_config_tab
--                                 pt_product_type_config_tab
--                                 pt_taxonomy_config_tab
--                                 pt_transaction_type_config_tab
--                                 saft_pt_general_parameter_tab
--                                 audit_basic_data_master_tab
--                                 pt_header_info_tab
--                                 pt_customer_info_tab
--                                 pt_file_tab
--                                 pt_file_id_seq
--                                 pt_invoice_header_tab
--                                 pt_invoice_line_tab
--                                 pt_invoice_document_totals_tab
--                                 pt_inv_headers_summary_tab
--                                 pt_inv_line_tax_info_tab
--                                 pt_product_serial_info_tab
--                                 pt_gen_led_account_info_tab
--                                 pt_supplier_info_tab
--                                 pt_product_info_tab
--                                 product_record_id_seq
--                                 pt_tax_table_info_tab
--                                 pt_gen_led_entry_summary_tab
--                                 pt_gen_led_journal_info_tab
--                                 pt_gen_led_trans_info_tab
--                                 pt_gen_led_trans_line_tab
--                                 pt_stock_movement_info_tab
--                                 pt_stock_movement_line_tab
--                                 pt_mov_of_goods_header_tab
--                                 pt_stock_mov_doc_totals_tab
--                                 pt_stock_mov_line_tax_tab
--                                 pt_stock_prod_serial_info_tab
--                                 pt_payment_header_tab
--                                 pt_payment_line_tab
--                                 pt_payment_summary_tab
--                                 pt_payment_doc_totals_tab
--                                 pt_payment_line_tax_tab
--                                 standard_audit_tax_codes_tab
--                                 pt_stock_movement_info_tab
--                                 jpk_goods_issued_tab
--                                 jpk_invoice_configuration_tab
--                                 fec_general_parameter_tab
--                                 fec_exclude_voucher_type_tab

-- SECTION 3 - Spring related GET DB Changes
--    List of upgrade sections -   statutory_fee_tab

-----------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------
------------- SECTION1 : Handling Upgrade from GET9 to GET10 RTM Start Here -------------
-----------------------------------------------------------------------------------------
-- Content in GET10 RTM Cdb file is included in this section
-----------------------------------------------------------------------------------------


-- ***** STATUTORY_FEE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_1');
PROMPT adding columns to statutory_fee_tab
DECLARE
   table_name_ VARCHAR2(30) := 'STATUTORY_FEE_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      column_ := Database_SYS.Set_Column_Values('TAX_LIABILITY_CLASS', 'VARCHAR2(20)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      column_ := Database_SYS.Set_Column_Values('SII_EXEMPT_REASON', 'VARCHAR2(2)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      column_ := Database_SYS.Set_Column_Values('BUSINESS_TRANS_TYPE_CUST', 'VARCHAR2(2)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      column_ := Database_SYS.Set_Column_Values('BUSINESS_TRANS_TYPE_SUP', 'VARCHAR2(2)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      column_ := Database_SYS.Set_Column_Values('STAMP_DUTY', 'VARCHAR2(5)', 'N', '''FALSE''', keep_default_ => 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_2');
PROMPT modifying lengths of code_of_supply, cs_use_ratio in statutory_fee_tab
DECLARE
   table_name_ VARCHAR2(30) := 'STATUTORY_FEE_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      column_ := Database_SYS.Set_Column_Values('CODE_OF_SUPPLY', 'VARCHAR2(20)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
      column_ := Database_SYS.Set_Column_Values('CS_USE_RATIO', 'VARCHAR2(20)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_3');
PROMPT removing obsolete view statutory_fee_sales_tax
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Remove_View('STATUTORY_FEE_SALES_TAX');
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** STATUTORY_FEE_TAB End *****

-----------------------------------------------------------------------------------------

-- ***** HSN_SAC_GROUPS_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_4');
PROMPT adding table hsn_sac_groups_tab
DECLARE
   table_name_ VARCHAR2(30) := 'HSN_SAC_GROUPS_TAB';
   columns_     Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'HSN_SAC_GROUP', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'TAX_STRUCTURE_CONNECTED', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'INTRA_STATE', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'INTER_STATE', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'HSN_SAC_GROUP_DESC', 'VARCHAR2(100)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'SPECIFIC_DELIVERY_TYPE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_5');
PROMPT adding constraints for hsn_sac_groups_tab
DECLARE
   index_name_ VARCHAR2(30) := 'HSN_SAC_GROUPS_PK';
   table_name_ VARCHAR2(30) := 'HSN_SAC_GROUPS_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'HSN_SAC_GROUP');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_6');
PROMPT adding constraints for hsn_sac_groups_tab
DECLARE
   index_name_ VARCHAR2(30) := 'HSN_SAC_GROUPS_RK';
   table_name_ VARCHAR2(30) := 'HSN_SAC_GROUPS_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** HSN_SAC_GROUPS_TAB End *****

-----------------------------------------------------------------------------------------

-- ***** HSN_SAC_CODES_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_7');
PROMPT adding table hsn_sac_codes_tab
DECLARE
   table_name_ VARCHAR2(30) := 'HSN_SAC_CODES_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'HSN_SAC_CODE', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'HSN_SAC_GROUP_ID', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'HSN_SAC_DESCRIPTION', 'VARCHAR2(100)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_8');
PROMPT adding constraints for hsn_sac_codes_tab
DECLARE
   index_name_ VARCHAR2(30) := 'HSN_SAC_CODES_PK';
   table_name_ VARCHAR2(30) := 'HSN_SAC_CODES_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'HSN_SAC_CODE');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_9');
PROMPT adding constraints for hsn_sac_codes_tab
DECLARE
   index_name_ VARCHAR2(30) := 'HSN_SAC_CODES_RK';
   table_name_ VARCHAR2(30) := 'HSN_SAC_CODES_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/
-- ***** HSN_SAC_CODES_TAB End *****

-----------------------------------------------------------------------------------------

-- ***** HSN_SAC_TAX_STRUCTURES_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_10');
PROMPT adding table hsn_sac_tax_structures_tab
DECLARE
   table_name_ VARCHAR2(30) := 'HSN_SAC_TAX_STRUCTURES_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'HSN_SAC_STATE', 'VARCHAR2(100)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'HSN_SAC_CODE', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'HSN_SAC_GROUP_ID', 'VARCHAR2(50)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'TAX_STRUCTURE', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_11');
prompt adding constraints for hsn_sac_tax_structures_tab
DECLARE
   index_name_ VARCHAR2(30) := 'HSN_SAC_TAX_STRUCTURES_PK';
   table_name_ VARCHAR2(30) := 'HSN_SAC_TAX_STRUCTURES_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'HSN_SAC_STATE');
      Database_SYS.Set_Table_Column(columns_, 'HSN_SAC_CODE');
      Database_SYS.Set_Table_Column(columns_, 'HSN_SAC_GROUP_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_12');
prompt adding constraints for hsn_sac_tax_structures_tab
DECLARE
   index_name_ VARCHAR2(30) := 'HSN_SAC_TAX_STRUCTURES_RK';
   table_name_ VARCHAR2(30) := 'HSN_SAC_TAX_STRUCTURES_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/
-- ***** HSN_SAC_TAX_STRUCTURES_TAB End *****

-----------------------------------------------------------------------------------------

-- ***** JPK_INVOICE_CONFIGURATION_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_13');
PROMPT adding table jpk_invoice_configuration_tab
DECLARE
   table_name_ VARCHAR2(30) := 'JPK_INVOICE_CONFIGURATION_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'COUNTRY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'REPORT_TYPE', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PARTY_TYPE', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_TYPE', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_SERIES', 'VARCHAR2(50)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'JPK_INVOICE_TYPE', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_14');
PROMPT adding constraints for jpk_invoice_configuration_tab
DECLARE
   index_name_ VARCHAR2(30) := 'JPK_INVOICE_CONFIGURATION_PK';
   table_name_ VARCHAR2(30) := 'JPK_INVOICE_CONFIGURATION_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'COUNTRY');
      Database_SYS.Set_Table_Column(columns_, 'REPORT_TYPE');
      Database_SYS.Set_Table_Column(columns_, 'PARTY_TYPE');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_TYPE');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_SERIES');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_15');
PROMPT adding constraints for jpk_invoice_configuration_tab
DECLARE
   index_name_ VARCHAR2(30) := 'JPK_INVOICE_CONFIGURATION_RK';
   table_name_ VARCHAR2(30) := 'JPK_INVOICE_CONFIGURATION_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** JPK_INVOICE_CONFIGURATION_TAB End *****

-----------------------------------------------------------------------------------------

-- ***** JPK_INVENT_CONFIGURATION_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_16');
PROMPT adding table jpk_invent_configuration_tab
DECLARE
   table_name_ VARCHAR2(30) := 'JPK_INVENT_CONFIGURATION_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'COUNTRY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'REPORT_TYPE', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'INVENT_RPT_TYPE', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'JPK_INVENT_RPT_TYPE_ID', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'DIRECTION', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_17');
PROMPT adding constraints for jpk_invent_configuration_tab
DECLARE
   index_name_ VARCHAR2(30) := 'JPK_INVENT_CONFIGURATION_PK';
   table_name_ VARCHAR2(30) := 'JPK_INVENT_CONFIGURATION_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'COUNTRY');
      Database_SYS.Set_Table_Column(columns_, 'REPORT_TYPE');
      Database_SYS.Set_Table_Column(columns_, 'INVENT_RPT_TYPE');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_18');
PROMPT adding constraints for jpk_invent_configuration_tab
DECLARE
   index_name_ VARCHAR2(30) := 'JPK_INVENT_CONFIGURATION_RK';
   table_name_ VARCHAR2(30) := 'JPK_INVENT_CONFIGURATION_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** JPK_INVENT_CONFIGURATION_TAB End *****

-----------------------------------------------------------------------------------------

-- ***** JPK_FILE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_19');
PROMPT adding table jpk_file_tab
DECLARE
   table_name_ VARCHAR2(30) := 'JPK_FILE_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_TYPE', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'FROM_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TO_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_20');
PROMPT adding constraints for jpk_file_tab
DECLARE
   index_name_ VARCHAR2(30) := 'JPK_FILE_PK';
   table_name_ VARCHAR2(30) := 'JPK_FILE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_21');
PROMPT adding constraints for jpk_file_tab
DECLARE
   index_name_ VARCHAR2(30) := 'JPK_FILE_RK';
   table_name_ VARCHAR2(30) := 'JPK_FILE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/
-- ***** JPK_FILE_TAB End *****

-----------------------------------------------------------------------------------------

-- ***** JPK_FILE_ID_SEQ Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_22');
PROMPT creating jpk_file_id_seq
DECLARE
   sequence_name_ VARCHAR2(30) := 'JPK_FILE_ID_SEQ';
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Create_Sequence(sequence_name_, 'INCREMENT BY 1 START WITH 1', TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** JPK_FILE_ID_SEQ End *****

-----------------------------------------------------------------------------------------

-- ***** JPK_HEADER_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_23');
PROMPT adding table jpk_header_tab
DECLARE
   table_name_ VARCHAR2(30) := 'JPK_HEADER_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'FORM_CODE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SYSTEM_CODE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'FORM_VERSION', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'FORM_VARIANT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SUBMISSION_TYPE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TIMESTAMP', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DATE_FROM', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DATE_TO', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CURRENCY_CODE', 'VARCHAR2(3)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TAX_OFFICE_CODE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_24');
PROMPT adding constraints to jpk_header_tab
DECLARE
   index_name_ VARCHAR2(30) := 'JPK_HEADER_PK';
   table_name_ VARCHAR2(30) := 'JPK_HEADER_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_25');
PROMPT adding constraints to jpk_header_tab
DECLARE
   index_name_ VARCHAR2(30) := 'JPK_HEADER_RK';
   table_name_ VARCHAR2(30) := 'JPK_HEADER_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** JPK_HEADER_TAB End *****

-----------------------------------------------------------------------------------------

-- ***** JPK_ENTITY_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_26');
PROMPT adding table jpk_entity_tab
DECLARE
   table_name_ VARCHAR2(30) := 'JPK_ENTITY_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'NIP', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'FULL_NAME', 'VARCHAR2(100)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'REGON', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'COUNTRY_CODE', 'VARCHAR2(2)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'VOIVODSHIP', 'VARCHAR2(35)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DISTRICT', 'VARCHAR2(35)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'MUNICIPALITY', 'VARCHAR2(35)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'STREET', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'HOUSE_NO', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PREMISE_NO', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CITY', 'VARCHAR2(35)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ZIP_CODE', 'VARCHAR2(35)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'POST_OFFICE', 'VARCHAR2(35)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'EMAIL', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_27');
PROMPT adding constraints to jpk_entity_tab
DECLARE
   index_name_ VARCHAR2(30) := 'JPK_ENTITY_PK';
   table_name_ VARCHAR2(30) := 'JPK_ENTITY_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_28');
PROMPT adding constraints to jpk_entity_tab
DECLARE
   index_name_ VARCHAR2(30) := 'JPK_ENTITY_RK';
   table_name_ VARCHAR2(30) := 'JPK_ENTITY_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** JPK_ENTITY_TAB End *****

-----------------------------------------------------------------------------------------

-- ***** JPK_SALES_RECORDS_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_29');
PROMPT adding table jpk_sales_records_tab
DECLARE
   table_name_ VARCHAR2(30) := 'JPK_SALES_RECORDS_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'SALES_LINE_NO', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'CUSTOMER_NO', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CUSTOMER_NAME', 'VARCHAR2(100)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CUSTOMER_ADDRESS', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_NO', 'VARCHAR2(100)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DELIVARY_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_10', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_11', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_12', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_13', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_14', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_15', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_16', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_17', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_18', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_19', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_20', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_21', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_22', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_23', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_24', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_25', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_26', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_27', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_28', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_29', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_30', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_31', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_32', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_33', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_34', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_35', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_36', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_37', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_38', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_39', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_30');
PROMPT adding constraints to jpk_sales_records_tab
DECLARE
   index_name_ VARCHAR2(30) := 'JPK_SALES_RECORDS_PK';
   table_name_ VARCHAR2(30) := 'JPK_SALES_RECORDS_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID');
      Database_SYS.Set_Table_Column(columns_, 'SALES_LINE_NO');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_31');
PROMPT adding constraints to jpk_sales_records_tab
DECLARE
   index_name_ VARCHAR2(30) := 'JPK_SALES_RECORDS_RK';
   table_name_ VARCHAR2(30) := 'JPK_SALES_RECORDS_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** JPK_SALES_RECORDS_TAB End *****

-----------------------------------------------------------------------------------------

-- ***** JPK_PURCHASE_RECORDS_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_32');
PROMPT adding table jpk_purchase_records_tab
DECLARE
   table_name_ VARCHAR2(30) := 'JPK_PURCHASE_RECORDS_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PURCHASE_LINE_NO', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'SUPPLIER_NO', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SUPPLIER_NAME', 'VARCHAR2(100)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SUPPLIER_ADDRESS', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_NO', 'VARCHAR2(100)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ARRIVAL_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_43', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_44', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_45', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_46', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_47', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_48', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_49', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_50', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_33');
PROMPT adding constraints jpk_purchase_records_pk, jpk_purchase_records_rk
DECLARE
   index_name_ VARCHAR2(30) := 'JPK_PURCHASE_RECORDS_PK';
   table_name_ VARCHAR2(30) := 'JPK_PURCHASE_RECORDS_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID');
      Database_SYS.Set_Table_Column(columns_, 'PURCHASE_LINE_NO');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

DECLARE
   index_name_ VARCHAR2(30) := 'JPK_PURCHASE_RECORDS_RK';
   table_name_ VARCHAR2(30) := 'JPK_PURCHASE_RECORDS_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** JPK_PURCHASE_RECORDS_TAB End *****

-----------------------------------------------------------------------------------------

-- ***** JPK_GENERAL_PARAMETERS_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_34');
PROMPT creating jpk_general_parameters_tab
DECLARE
   table_name_ VARCHAR2(30) := 'JPK_GENERAL_PARAMETERS_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'COUNTRY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'REPORT_TYPE', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'TAX_OFFICE_ID', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'COMPANY_ADDRESS_ID', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ACCOUNTING_JOURNAL_ID', 'VARCHAR2(100)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'P_16', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'P_20', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'P_21', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'P_22', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'P_106E_2', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'P_106E_3', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_14', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_38', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'K_39', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'VAT_ON_CASH_BASIS', 'VARCHAR2(5)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CUSTOM_OFFICE_ID', 'VARCHAR2(100)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PERSON_ID', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_35');
PROMPT adding constraints jpk_general_parameters_pk, jpk_general_parameters_rk
DECLARE
   index_name_ VARCHAR2(30) := 'JPK_GENERAL_PARAMETERS_PK';
   table_name_ VARCHAR2(30) := 'JPK_GENERAL_PARAMETERS_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'COUNTRY');
      Database_SYS.Set_Table_Column(columns_, 'REPORT_TYPE');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

DECLARE
   index_name_ VARCHAR2(30) := 'JPK_GENERAL_PARAMETERS_RK';
   table_name_ VARCHAR2(30) := 'JPK_GENERAL_PARAMETERS_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** JPK_GENERAL_PARAMETERS_TAB End *****

-----------------------------------------------------------------------------------------

-- ***** JPK_INVOICE_TYPE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_36');
PROMPT creating jpk_invoice_type_tab
DECLARE
   table_name_ VARCHAR2(30) := 'JPK_INVOICE_TYPE_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'COUNTRY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'REPORT_TYPE', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_TYPE_ID', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'DESCRIPTION', 'VARCHAR2(2000)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_37');
PROMPT adding constraints jpk_invoice_types_pk, jpk_invoice_types_rk
DECLARE
   index_name_ VARCHAR2(30) := 'JPK_INVOICE_TYPE_PK';
   table_name_ VARCHAR2(30) := 'JPK_INVOICE_TYPE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'COUNTRY');
      Database_SYS.Set_Table_Column(columns_, 'REPORT_TYPE');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_TYPE_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

DECLARE
   index_name_ VARCHAR2(30) := 'JPK_INVOICE_TYPE_RK';
   table_name_ VARCHAR2(30) := 'JPK_INVOICE_TYPE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** JPK_INVOICE_TYPE_TAB End *****

-----------------------------------------------------------------------------------------

-- ***** JPK_INVENT_REPORT_TYPES_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_38');
PROMPT creating jpk_invent_report_types_tab
DECLARE
   table_name_ VARCHAR2(30) := 'JPK_INVENT_REPORT_TYPES_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'COUNTRY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'REPORT_TYPE', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'INVENT_RPT_TYPE_ID', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'DESCRIPTION', 'VARCHAR2(2000)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_39');
PROMPT adding jpk_invent_report_types_pk and jpk_invent_report_types_pk

DECLARE
   index_name_ VARCHAR2(30) := 'JPK_INVENT_REPORT_TYPES_PK';
   table_name_ VARCHAR2(30) := 'JPK_INVENT_REPORT_TYPES_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'COUNTRY');
      Database_SYS.Set_Table_Column(columns_, 'REPORT_TYPE');
      Database_SYS.Set_Table_Column(columns_, 'INVENT_RPT_TYPE_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

DECLARE
   index_name_ VARCHAR2(30) := 'JPK_INVENT_REPORT_TYPES_RK';
   table_name_ VARCHAR2(30) := 'JPK_INVENT_REPORT_TYPES_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** JPK_INVENT_REPORT_TYPES_TAB End *****

-----------------------------------------------------------------------------------------

-- ***** JPK_GOODS_RECEIVED_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_40');
PROMPT creating jpk_goods_received_tab
DECLARE
   table_name_ VARCHAR2(30) := 'JPK_GOODS_RECEIVED_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'INVENTORY_TRANSACTION_ID', 'VARCHAR2(10)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'INVENTORY_TRANSACTION_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TRANSACTION_VALUE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TRANSACTION_CREATION_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SUPPLIER', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_ID', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PART_NUMBER', 'VARCHAR2(25)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PART_DESCRIPTION', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'QUANTITY_RECEIVED', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'UNIT_OF_MEASURE', 'VARCHAR2(30)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'UNIT_COST', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'VALUE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_41');
PROMPT adding jpk_goods_received_pk and jpk_goods_received_rk
DECLARE
   index_name_ VARCHAR2(30) := 'JPK_GOODS_RECEIVED_PK';
   table_name_ VARCHAR2(30) := 'JPK_GOODS_RECEIVED_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID');
      Database_SYS.Set_Table_Column(columns_, 'INVENTORY_TRANSACTION_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

DECLARE
   index_name_ VARCHAR2(30) := 'JPK_GOODS_RECEIVED_RK';
   table_name_ VARCHAR2(30) := 'JPK_GOODS_RECEIVED_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** JPK_GOODS_RECEIVED_TAB End *****

-----------------------------------------------------------------------------------------

-- ***** JPK_GOODS_ISSUED_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_42');
PROMPT creating jpk_goods_issued_tab
DECLARE
   table_name_ VARCHAR2(30) := 'JPK_GOODS_ISSUED_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'TRANSACTION_ID', 'VARCHAR2(10)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'TRANSACTION_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TRANSACTION_VALUE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TRANSACTION_CREATION_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'RECEIVER_ID', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_ID', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PART_NUMBER', 'VARCHAR2(25)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PART_DESCRIPTION', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'QUANTITY_ISSUED', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'UNIT_OF_MEASURE', 'VARCHAR2(30)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'UNIT_COST', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'VALUE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_43');
PROMPT adding jpk_goods_issued_pk and jpk_goods_issued_rk
DECLARE
   index_name_ VARCHAR2(30) := 'JPK_GOODS_ISSUED_PK';
   table_name_ VARCHAR2(30) := 'JPK_GOODS_ISSUED_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID');
      Database_SYS.Set_Table_Column(columns_, 'TRANSACTION_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

DECLARE
   index_name_ VARCHAR2(30) := 'JPK_GOODS_ISSUED_RK';
   table_name_ VARCHAR2(30) := 'JPK_GOODS_ISSUED_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** JPK_GOODS_ISSUED_TAB End *****

-----------------------------------------------------------------------------------------

-- ***** JPK_INTERNAL_ISSUE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_44');
PROMPT creating jpk_internal_issue_tab
DECLARE
   table_name_ VARCHAR2(30) := 'JPK_INTERNAL_ISSUE_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'TRANSACTION_ID', 'VARCHAR2(10)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'TRANSACTION_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TRANSACTION_VALUE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TRANSACTION_CREATION_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'INVENTORYLOCATION', 'VARCHAR2(35)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DESTINATION', 'VARCHAR2(100)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PART_NUMBER', 'VARCHAR2(25)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PART_DESCRIPTION', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'QUANTITY', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'UNIT_OF_MEASURE', 'VARCHAR2(30)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'UNIT_COST', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'VALUE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_45');
PROMPT adding jpk_internal_issue_pk and jpk_internal_issue_rk
DECLARE
   index_name_ VARCHAR2(30) := 'JPK_INTERNAL_ISSUE_PK';
   table_name_ VARCHAR2(30) := 'JPK_INTERNAL_ISSUE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID');
      Database_SYS.Set_Table_Column(columns_, 'TRANSACTION_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

DECLARE
   index_name_ VARCHAR2(30) := 'JPK_INTERNAL_ISSUE_RK';
   table_name_ VARCHAR2(30) := 'JPK_INTERNAL_ISSUE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** JPK_INTERNAL_ISSUE_TAB End *****

-----------------------------------------------------------------------------------------

-- ***** JPK_INTERNAL_TRANSFER_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_46');
PROMPT creating jpk_internal_transfer_tab
DECLARE
   table_name_ VARCHAR2(30) := 'JPK_INTERNAL_TRANSFER_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'TRANSACTION_ID', 'VARCHAR2(10)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'TRANSACTION_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TRANSACTION_VALUE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TRANSACTION_CREATION_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'INVENTORYLOCATION', 'VARCHAR2(35)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DESTINATION', 'VARCHAR2(100)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PART_NUMBER', 'VARCHAR2(25)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PART_DESCRIPTION', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'QUANTITY', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'UNIT_OF_MEASURE', 'VARCHAR2(30)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'UNIT_COST', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'VALUE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_47');
PROMPT adding jpk_internal_transfer_pk and jpk_internal_transfer_rk
DECLARE
   index_name_ VARCHAR2(30) := 'JPK_INTERNAL_TRANSFER_PK';
   table_name_ VARCHAR2(30) := 'JPK_INTERNAL_TRANSFER_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID');
      Database_SYS.Set_Table_Column(columns_, 'TRANSACTION_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

DECLARE
   index_name_ VARCHAR2(30) := 'JPK_INTERNAL_TRANSFER_RK';
   table_name_ VARCHAR2(30) := 'JPK_INTERNAL_TRANSFER_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** JPK_INTERNAL_TRANSFER_TAB End *****

-----------------------------------------------------------------------------------------

-- ***** JPK_WAREHOUSE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_48');
PROMPT creating jpk_warehouse_tab
DECLARE
   table_name_ VARCHAR2(30) := 'JPK_WAREHOUSE_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'WAREHOUSE_ID', 'VARCHAR2(15)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'IS_A_SITE', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_49');
PROMPT adding jpk_warehouse_pk and jpk_warehouse_rk
DECLARE
   index_name_ VARCHAR2(30) := 'JPK_WAREHOUSE_PK';
   table_name_ VARCHAR2(30) := 'JPK_WAREHOUSE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

DECLARE
   index_name_ VARCHAR2(30) := 'JPK_WAREHOUSE_RK';
   table_name_ VARCHAR2(30) := 'JPK_WAREHOUSE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** JPK_WAREHOUSE_TAB End *****

-----------------------------------------------------------------------------------------

-- ***** JPK_INVOICE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_50');
PROMPT creating jpk_invoice_tab
DECLARE
   table_name_ VARCHAR2(30) := 'JPK_INVOICE_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
   Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_, 'INVOICE_ID', 'NUMBER', 'N');
   Database_SYS.Set_Table_Column(columns_, 'P_1', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_2A', 'VARCHAR2(256)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_3A', 'VARCHAR2(256)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_3B', 'VARCHAR2(256)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_3C', 'VARCHAR2(256)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_3D', 'VARCHAR2(256)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_4A', 'VARCHAR2(256)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_4B', 'VARCHAR2(256)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_5A', 'VARCHAR2(256)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_5B', 'VARCHAR2(256)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_6', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_13_1', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_14_1', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_13_2', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_14_2', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_13_3', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_14_3', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_13_4', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_14_4', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_13_5', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_14_5', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_13_6', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_13_7', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_15', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_16', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_17', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_18', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_19', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_19A', 'VARCHAR2(256)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_19B', 'VARCHAR2(256)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_19C', 'VARCHAR2(256)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_20', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_20A', 'VARCHAR2(256)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_20B', 'VARCHAR2(256)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_21', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_21A', 'VARCHAR2(256)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_21B', 'VARCHAR2(256)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_21C', 'VARCHAR2(256)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_22', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_22A', 'DATE', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_22B', 'VARCHAR2(256)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_22C', 'VARCHAR2(256)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_23', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_106E_2', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_106E_3', 'VARCHAR2(20)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'P_106E_3A', 'VARCHAR2(256)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'INVOICE_TYPE', 'VARCHAR2(256)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CORRECTION_REASON', 'VARCHAR2(256)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CORRECTED_INV_NO', 'VARCHAR2(256)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'CORRECTED_INV_PERIOD', 'VARCHAR2(256)', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ADVANCE_AMOUNT', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ADVANCE_TAX_AMOUNT', 'NUMBER', 'Y');
   Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
   Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_51');
PROMPT adding jpk_invoice_pk and jpk_invoice_rk
DECLARE
   index_name_ VARCHAR2(30) := 'JPK_INVOICE_PK';
   table_name_ VARCHAR2(30) := 'JPK_INVOICE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'COMPANY');
   Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID');
   Database_SYS.Set_Table_Column(columns_, 'INVOICE_ID');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

DECLARE
   index_name_ VARCHAR2(30) := 'JPK_INVOICE_RK';
   table_name_ VARCHAR2(30) := 'JPK_INVOICE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** JPK_INVOICE_TAB End *****

-----------------------------------------------------------------------------------------

-- ***** JPK_INVOICE_LINE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_52');
PROMPT creating jpk_invoice_line_tab
DECLARE
   table_name_ VARCHAR2(30) := 'JPK_INVOICE_LINE_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ITEM_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'P_2B', 'VARCHAR2(256)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'P_7', 'VARCHAR2(256)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'P_8A', 'VARCHAR2(256)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'P_8B', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'P_9A', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'P_9B', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'P_10', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'P_11', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'P_11A', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'P_12', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_53');
PROMPT adding jpk_invoice_line_pk and jpk_invoice_line_rk
DECLARE
   index_name_ VARCHAR2(30) := 'JPK_INVOICE_LINE_PK';
   table_name_ VARCHAR2(30) := 'JPK_INVOICE_LINE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_ID');
      Database_SYS.Set_Table_Column(columns_, 'ITEM_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

DECLARE
   index_name_ VARCHAR2(30) := 'JPK_INVOICE_LINE_RK';
   table_name_ VARCHAR2(30) := 'JPK_INVOICE_LINE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** JPK_INVOICE_LINE_TAB End *****

-----------------------------------------------------------------------------------------

-- ***** JPK_FILE_LOG_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_54');
PROMPT creating jpk_file_log_tab
DECLARE
    table_name_ VARCHAR2(30) := 'JPK_FILE_LOG_TAB';
    columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_TYPE', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'FROM_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TO_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'OUTPUT_FILE_DIR', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'FILE_TYPE', 'VARCHAR2(30)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'FILE_TEMPLATE', 'VARCHAR2(30)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PROPOSAL_ID', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SITE_ID', 'VARCHAR2(15)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'WAREHOUSE_ID', 'VARCHAR2(15)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'WARNING_TEXT', 'VARCHAR2(4000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CORRECTION_NUMBER', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_55');
PROMPT adding jpk_file_log_pk and jpk_file_log_rk
DECLARE
  index_name_ VARCHAR2(30) := 'JPK_FILE_LOG_PK';
  table_name_ VARCHAR2(30) := 'JPK_FILE_LOG_TAB';
  columns_    Database_SYS.ColumnTabType;
BEGIN
  IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'COMPANY');
   Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
  ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
  END IF;
END;
/

DECLARE
  index_name_ VARCHAR2(30) := 'JPK_FILE_LOG_RK';
  table_name_ VARCHAR2(30) := 'JPK_FILE_LOG_TAB';
  columns_    Database_SYS.ColumnTabType;
BEGIN
  IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
   Database_SYS.Reset_Column_Table(columns_);
   Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
   Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
  ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
  END IF;
END;
/

-- ***** JPK_FILE_LOG_TAB End *****

-----------------------------------------------------------------------------------------

-- ***** TAX_CODE_TEXTS_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_56');
PROMPT adding natureof_operation and exc_from_spesometro_dec column to tax_code_texts_tab
DECLARE
   table_name_    VARCHAR2(30):= 'TAX_CODE_TEXTS_TAB';
   columns_       Database_SYS.ColumnTabType;

BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Set_Table_Column (columns_ , 'NATUREOF_OPERATION', 'VARCHAR2(100)', 'Y');
      Database_SYS.Alter_Table (table_name_, columns_, TRUE);
      Database_SYS.Set_Table_Column (columns_ , 'EXC_FROM_SPESOMETRO_DEC', 'VARCHAR2(5)', 'N', '''FALSE''', keep_default_ => 'Y');
      Database_SYS.Alter_Table (table_name_, columns_, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** TAX_CODE_TEXTS_TAB End *****

-----------------------------------------------------------------------------------------

-- ***** TAX_STRUCTURE_ITEM_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_57');
PROMPT added incl_manual_amnt_in_tax to tax_structure_item_tab
DECLARE
   table_name_  VARCHAR2(30) := 'TAX_STRUCTURE_ITEM_TAB';
   column_ Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      column_ := Database_SYS.Set_Column_Values('INCL_MANUAL_AMNT_IN_TAX', 'VARCHAR2(5)', 'N', '''FALSE''', keep_default_ => 'Y');
      Database_SYS.Alter_Table_Column(table_name_ , 'A', column_, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** TAX_STRUCTURE_ITEM_TAB End *****

-----------------------------------------------------------------------------------------

--*************Removing old External File JPK_VAT and Template Start*************

-- gelr:saft_poland, begin
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_58');
PROMPT Removing JPK_VAT External File Type AND JPK_VAT_TEMPLATE External File Template.
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
   -- Only for upgrade from App9. I don't want to delete any potential user defined data therefore I added this condition just in case.
         -- Removing External File Type
         DELETE FROM Ext_File_Type_Tab WHERE  file_type = 'JPK_VAT';
         DELETE FROM Ext_File_Type_Rec_Tab WHERE  file_type = 'JPK_VAT';
         DELETE FROM Ext_File_Type_Rec_Column_Tab WHERE  file_type = 'JPK_VAT';
         DELETE FROM Ext_File_Type_Param_Tab WHERE  file_type = 'JPK_VAT';
         DELETE FROM Ext_Type_Param_Set_Tab WHERE  file_type = 'JPK_VAT';
         DELETE FROM Ext_Type_Param_Per_Set_Tab WHERE  file_type = 'JPK_VAT';

         -- Removing External File Template
         DELETE FROM Ext_File_Template_Tab WHERE  file_template_id = 'JPK_VAT_TEMPLATE';
         DELETE FROM Ext_File_Template_Dir_Tab WHERE  file_template_id = 'JPK_VAT_TEMPLATE';
         DELETE FROM Ext_File_Template_Detail_Tab WHERE  file_template_id = 'JPK_VAT_TEMPLATE';
         DELETE FROM Ext_File_Templ_Det_Func_Tab WHERE  file_template_id = 'JPK_VAT_TEMPLATE';
         DELETE FROM Ext_File_Template_Control_Tab WHERE  file_template_id = 'JPK_VAT_TEMPLATE';

         COMMIT;
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/
-- gelr:saft_poland, end

--*************Removing old External File and Template End*************

-----------------------------------------------------------------------------------------

-- ***** JPK_BANK_ACCOUNTS_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_59');
PROMPT CREATING jpk_bank_accounts_tab
DECLARE
   table_name_ VARCHAR2(30) := 'JPK_BANK_ACCOUNTS_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'SHORT_NAME', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ACCOUNT_IDENTITIY', 'VARCHAR2(100)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_60');
PROMPT adding constraints to jpk_bank_accounts_tab
DECLARE
   index_name_ VARCHAR2(30) := 'JPK_BANK_ACCOUNTS_PK';
   table_name_ VARCHAR2(30) := 'JPK_BANK_ACCOUNTS_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_61');
PROMPT adding constraints to jpk_bank_accounts_tab
DECLARE
   index_name_ VARCHAR2(30) := 'JPK_BANK_ACCOUNTS_RK';
   table_name_ VARCHAR2(30) := 'JPK_BANK_ACCOUNTS_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** JPK_BANK_ACCOUNTS_TAB End *****

-----------------------------------------------------------------------------------------

-- ***** JPK_ACCOUNT_BALANCES_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_62');
PROMPT CREATING JPK_ACCOUNT_BALANCES_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'JPK_ACCOUNT_BALANCES_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'CASH_ACC_OPEN_BAL', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CASH_ACC_CLOSING_BAL', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_63');
PROMPT adding JPK_ACCOUNT_BALANCES_PK and JPK_ACCOUNT_BALANCES_RK

DECLARE
   index_name_ VARCHAR2(30) := 'JPK_ACCOUNT_BALANCES_PK';
   table_name_ VARCHAR2(30) := 'JPK_ACCOUNT_BALANCES_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

DECLARE
   index_name_ VARCHAR2(30) := 'JPK_ACCOUNT_BALANCES_RK';
   table_name_ VARCHAR2(30) := 'JPK_ACCOUNT_BALANCES_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** JPK_ACCOUNT_BALANCES_TAB End *****

-----------------------------------------------------------------------------------------

-- ***** JPK_BANK_STATEMENT_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_64');
PROMPT CREATING JPK_BANK_STATEMENT_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'JPK_BANK_STATEMENT_TAB';
   columns_    Database_SYS.ColumnTabType;
   column_     Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROW_NO', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ENTITY_NAME', 'VARCHAR2(256)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TRANS_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TRANS_DESC', 'VARCHAR2(256)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TRANS_AMNT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TRANS_BALANCE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_65');
PROMPT adding JPK_BANK_STATEMENT_PK and JPK_BANK_STATEMENT_RK
DECLARE
   index_name_ VARCHAR2(30) := 'JPK_BANK_STATEMENT_PK';
   table_name_ VARCHAR2(30) := 'JPK_BANK_STATEMENT_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID');
      Database_SYS.Set_Table_Column(columns_, 'ROW_NO');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

DECLARE
   index_name_ VARCHAR2(30) := 'JPK_BANK_STATEMENT_RK';
   table_name_ VARCHAR2(30) := 'JPK_BANK_STATEMENT_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** JPK_BANK_STATEMENT_TAB End *****

-----------------------------------------------------------------------------------------

-- ***** JPK_ACCOUNTING_JOURNAL_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_66');
PROMPT CREATING JPK_ACCOUNTING_JOURNAL_TAB
-- gelr:saft_poland begin
DECLARE
   table_name_ VARCHAR2(30) := 'JPK_ACCOUNTING_JOURNAL_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'SUCCESSIVE_NUMBER', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ACC_JOURNAL_SEQ_NO', 'VARCHAR2(256)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ACC_JOURNAL_DESC', 'VARCHAR2(256)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'VOUCHER_NUMBER', 'VARCHAR2(256)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'VOUCHER_TYPE', 'VARCHAR2(256)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TRANSACTION_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DOCUMENT_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'POSTING_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'USER_ID', 'VARCHAR2(256)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TRANSACTION_DESC', 'VARCHAR2(256)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DEB_OR_CRED_AMOUNT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_67');
PROMPT Adding constraints for JPK_ACCOUNTING_JOURNAL_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'JPK_ACCOUNTING_JOURNAL_PK';
   table_name_ VARCHAR2(30) := 'JPK_ACCOUNTING_JOURNAL_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID');
      Database_SYS.Set_Table_Column(columns_, 'SUCCESSIVE_NUMBER');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

DECLARE
   index_name_ VARCHAR2(30) := 'JPK_ACCOUNTING_JOURNAL_RK';
   table_name_ VARCHAR2(30) := 'JPK_ACCOUNTING_JOURNAL_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** JPK_ACCOUNTING_JOURNAL_TAB End *****

-----------------------------------------------------------------------------------------

-- ***** JPK_TURNOVER_BALANCE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_68');
PROMPT Adding table JPK_TURNOVER_BALANCE_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'JPK_TURNOVER_BALANCE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ACCOUNT', 'VARCHAR2(256)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ACCOUNT_NAME', 'VARCHAR2(256)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ACCOUNT_TYPE', 'VARCHAR2(256)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SET_OF_ACC_CODE', 'VARCHAR2(256)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SET_OF_ACC_DESCRIPTION', 'VARCHAR2(256)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ACCOUNT_GROUP_CODE', 'VARCHAR2(256)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ACCOUNT_GROUP_DESCRIPTION', 'VARCHAR2(256)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ACC_SUB_GROUP_CODE', 'VARCHAR2(256)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ACC_SUB_GROUP_DESCRIPTION', 'VARCHAR2(256)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DEBIT_OPENING_BALANCE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CREDIT_OPENING_BALANCE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DEBIT_TURNOVER', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CREDIT_TURNOVER', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ACCU_DEBIT_TURNOVER', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ACCU_CREDIT_TURNOVER', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CLOSING_DEBIT_BALANCE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CLOSING_CREDIT_BALANCE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_69');
PROMPT Adding constraints for JPK_TURNOVER_BALANCE_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'JPK_TURNOVER_BALANCE_PK';
   table_name_ VARCHAR2(30) := 'JPK_TURNOVER_BALANCE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID');
      Database_SYS.Set_Table_Column(columns_, 'ACCOUNT');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

DECLARE
   index_name_ VARCHAR2(30) := 'JPK_TURNOVER_BALANCE_RK';
   table_name_ VARCHAR2(30) := 'JPK_TURNOVER_BALANCE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

-- ***** JPK_TURNOVER_BALANCE_TAB End *****

-----------------------------------------------------------------------------------------

-- ***** JPK_JOURNAL_ENTRY_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_70');
PROMPT Adding table JPK_JOURNAL_ENTRY_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'JPK_JOURNAL_ENTRY_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ORDINAL_NO', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'JOURNAL_SEQ_NO', 'VARCHAR2(256)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ACC_ID_DEBT_AMOUNT', 'VARCHAR2(256)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DEB_AMT_IN_ACC_CURR', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DEB_AMT_IN_TRN_CURR', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CURR_CODE_FOR_DEB_AMT', 'VARCHAR2(3)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TRAN_DESC_FOR_DEB_AMT', 'VARCHAR2(256)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ACC_ID_CRED_AMOUNT', 'VARCHAR2(256)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CRED_AMT_IN_ACC_CURR', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CRED_AMT_IN_TRN_CURR', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CURR_CODE_FOR_CRED_AMT', 'VARCHAR2(3)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TRAN_DESC_FOR_CRED_AMT', 'VARCHAR2(256)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_71');
PROMPT Adding constraints for JPK_JOURNAL_ENTRY_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'JPK_JOURNAL_ENTRY_PK';
   table_name_ VARCHAR2(30) := 'JPK_JOURNAL_ENTRY_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'JPK_FILE_ID');
      Database_SYS.Set_Table_Column(columns_, 'ORDINAL_NO');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/

DECLARE
   index_name_ VARCHAR2(30) := 'JPK_JOURNAL_ENTRY_RK';
   table_name_ VARCHAR2(30) := 'JPK_JOURNAL_ENTRY_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') = '&GET9VERSION') THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version');
   END IF;
END;
/
-- ***** JPK_JOURNAL_ENTRY_TAB End *****

-----------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------
-----------------------------Upgrade Sections for Loc2Core starts here-------------------
-----------------------------------------------------------------------------------------


-----------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------
------------- SECTION1 : Handling Upgrade from GET9 to GET10 RTM Ends Here --------------
-----------------------------------------------------------------------------------------








-----------------------------------------------------------------------------------------
------------- SECTION2 : Handling Upgrade from GET10 RTM to GET10 UPD6 Starts Here ---------------
------------- NOTE     : Support cdb files from GET10 RTM until UPD6                                                         -------
-----------------------------------------------------------------------------------------

-- ***** STATUTORY_FEE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_72');
PROMPT ADDING COLUMNS EXCLUDE_FROM_SII_REPORTING AND SII_OPERATION_TYPE TO STATUTORY_FEE_TAB.
DECLARE
   table_name_ VARCHAR2(30) := 'STATUTORY_FEE_TAB';
   column_     Database_SYS.ColRec;
BEGIN

   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      -- gelr:es_sii_reporting
      column_ := Database_SYS.Set_Column_Values('EXCLUDE_FROM_SII_REPORTING', 'VARCHAR2(5)', 'N', '''FALSE''', keep_default_ => 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);

      column_ := Database_SYS.Set_Column_Values('SII_OPERATION_TYPE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      -- gelr:es_sii_reporting
      -- gelr:round_vat_customs_documents
      column_ := Database_SYS.Set_Column_Values('ROUND_ZERO_DEC', 'VARCHAR2(5)', 'N','''FALSE''', keep_default_ => 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      -- gelr:round_vat_customs_documents
      -- gelr:pt_diff_tax_code_credit_invoic
      column_ := Database_SYS.Set_Column_Values('CREDIT_TAX_CODE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
      -- gelr:pt_diff_tax_code_credit_invoic
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
   -- gelr:es_sii_reporting
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_73');
PROMPT Set default value for STATUTORY_FEE_TAB.SII_OPERATION_TYPE for Spanish companies
DECLARE
   table_name_ VARCHAR2(30) := 'STATUTORY_FEE_TAB';
   column_     Database_SYS.ColRec;
   stmt_          VARCHAR2(1000);
BEGIN
   -- gelr:es_sii_reporting
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN

      IF (Database_SYS.Column_Exist( 'STATUTORY_FEE_TAB', 'SII_OPERATION_TYPE' )) THEN
         stmt_ := 'UPDATE STATUTORY_FEE_TAB t
                     SET SII_OPERATION_TYPE = ''GOODS''
                   WHERE SII_OPERATION_TYPE IS NULL
                   AND EXISTS (SELECT 1
                               FROM Company_TAB c
                               WHERE c.company = t.company
                               AND c.localization_country = ''ES'')';
         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
-- gelr:es_sii_reporting
END;
/

-- ***** STATUTORY_FEE_TAB End *****

-- ***** VOUCHER_ROW_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_74');
PROMPT Adding TAX_ID_NUMBER column to VOUCHER_ROW_TAB.
DECLARE
   table_name_  VARCHAR2(40) := 'VOUCHER_ROW_TAB';
   column_      Database_SYS.ColRec;
BEGIN
   -- gelr:cash_box_report_enhancement
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      column_ := Database_SYS.Set_Column_Values('TAX_ID_NUMBER', 'VARCHAR2(50)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
   -- gelr:cash_box_report_enhancement
END;
/

-- ***** VOUCHER_ROW_TAB End *****

-- ***** TAX_LIABILITY_DATE_CTRL_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_75');
PROMPT Adding use_fulfilment_date,no_of_days_from_deliv_date,tax_fulfilment_adv_payment column to tax_liability_date_ctrl_tab.
DECLARE
   table_name_  VARCHAR2(40) := 'TAX_LIABILITY_DATE_CTRL_TAB';
   column_      Database_SYS.ColRec;
BEGIN
   -- gelr:tax_fulfilment_date
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      column_ := Database_SYS.Set_Column_Values('NO_OF_DAYS_FROM_DELIV_DATE', 'NUMBER', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);

      column_ := Database_SYS.Set_Column_Values('TAX_FULFILMENT_ADV_PAYMENT', 'VARCHAR2(5)', 'N','''FALSE''', keep_default_ => 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
   -- gelr:tax_fulfilment_date
END;
/

-- ***** TAX_LIABILITY_DATE_CTRL_TAB End *****

-- ***** CURRENCY_TYPE_BASIC_DATA_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_76');
PROMPT Adding TAX_BUY_RATE_BASE column to CURRENCY_TYPE_BASIC_DATA_TAB.
DECLARE
   table_name_  VARCHAR2(40) := 'CURRENCY_TYPE_BASIC_DATA_TAB';
   column_      Database_SYS.ColRec;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
         -- gelr:curr_rate_date_incoming_inv
         column_ := Database_SYS.Set_Column_Values('TAX_BUY_RATE_BASE', 'VARCHAR2(20)', 'Y');
         Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
         -- gelr:curr_rate_date_incoming_inv
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_77');
PROMPT removing column Rate_Date from CURRENCY_TYPE_BASIC_DATA_TAB.
DECLARE
   new_column_name_   VARCHAR2(30);
   old_column_name_   VARCHAR2(30);
   table_name_        VARCHAR2(30) := 'CURRENCY_TYPE_BASIC_DATA_TAB';
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      -- gelr:co_ivc_curr_rate_voucher_date, begin
      new_column_name_ := 'RATE_DATE_1000';
      old_column_name_ := 'RATE_DATE';
      IF NOT(Database_SYS.Column_Exist(table_name_, new_column_name_)) AND Database_SYS.Column_Exist(table_name_, old_column_name_) THEN
         Database_SYS.Rename_Column(table_name_, new_column_name_, old_column_name_, TRUE);
      END IF;
      -- gelr:co_ivc_curr_rate_voucher_date, end
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** CURRENCY_TYPE_BASIC_DATA_TAB End *****

-- ***** JPK_GENERAL_PARAMETERS_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_78');
PROMPT Renaming columns K_36, K_37, K_47, K_48, K_49, K_50 from JPK_GENERAL_PARAMETERS_TAB.
DECLARE
   table_name_        VARCHAR2(30) := 'JPK_GENERAL_PARAMETERS_TAB';
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
        IF NOT(Database_SYS.Column_Exist(table_name_, 'K_36_1000')) AND Database_SYS.Column_Exist(table_name_, 'K_36') THEN
           Database_SYS.Rename_Column(table_name_, 'K_36_1000', 'K_36', TRUE);
        END IF;

        IF NOT(Database_SYS.Column_Exist(table_name_, 'K_37_1000')) AND Database_SYS.Column_Exist(table_name_, 'K_37') THEN
           Database_SYS.Rename_Column(table_name_, 'K_37_1000', 'K_37', TRUE);
        END IF;

        IF NOT(Database_SYS.Column_Exist(table_name_, 'K_47_1000')) AND Database_SYS.Column_Exist(table_name_, 'K_47') THEN
           Database_SYS.Rename_Column(table_name_, 'K_47_1000', 'K_47', TRUE);
        END IF;

        IF NOT(Database_SYS.Column_Exist(table_name_, 'K_48_1000')) AND Database_SYS.Column_Exist(table_name_, 'K_48') THEN
           Database_SYS.Rename_Column(table_name_, 'K_48_1000', 'K_48', TRUE);
        END IF;

        IF NOT(Database_SYS.Column_Exist(table_name_, 'K_49_1000')) AND Database_SYS.Column_Exist(table_name_, 'K_49') THEN
           Database_SYS.Rename_Column(table_name_, 'K_49_1000', 'K_49', TRUE);
        END IF;

        IF NOT(Database_SYS.Column_Exist(table_name_, 'K_50_1000')) AND Database_SYS.Column_Exist(table_name_, 'K_50') THEN
           Database_SYS.Rename_Column(table_name_, 'K_50_1000', 'K_50', TRUE);
        END IF;
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** JPK_GENERAL_PARAMETERS_TAB End *****

-- gelr:saft_poland
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_79');
PROMPT Removing obsolete view VOUCHER_TYPE_FOR_Q
DECLARE

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Remove_View('VOUCHER_TYPE_FOR_Q', TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_80');
PROMPT Removing obsolete view VOUCHER_TYPE_MANUAL_SAFT_PL
DECLARE

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Remove_View('VOUCHER_TYPE_MANUAL_SAFT_PL', TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/
-- gelr:saft_poland


-- ***** VOUCHER_ROW_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_81');
PROMPT RENAMING DOCUMENT_NUMBER COLUMN in VOUCHER_ROW_TAB TO DOCUMENT_NUMBER_TMP
DECLARE
   new_column_name_  VARCHAR2(20) := 'DOCUMENT_NUMBER_TMP';
   old_column_name_  VARCHAR2(20) := 'DOCUMENT_NUMBER';
   table_name_       VARCHAR2(30) := 'VOUCHER_ROW_TAB';
   column_           Database_SYS.ColRec;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      IF (Database_SYS.Get_Column_Type(table_name_,old_column_name_) = 'NUMBER') THEN
            IF NOT (Database_SYS.Column_Exist(table_name_, new_column_name_) ) THEN
               Database_SYS.Rename_Column(table_name_,new_column_name_,old_column_name_,TRUE);
            END IF;
      END IF;
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_82');
PROMPT ADDING NEW COLUMN DOCUMENT_NUMBER to VOUCHER_ROW_TAB
DECLARE
   column_        Database_SYS.ColRec;
   table_name_    VARCHAR2(30) := 'VOUCHER_ROW_TAB';
   db_column_     VARCHAR2(20) := 'DOCUMENT_NUMBER_TMP';
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      IF (Database_SYS.Column_Exist(table_name_,db_column_)) THEN
            column_ := Database_SYS.Set_Column_Values('DOCUMENT_NUMBER', 'VARCHAR2(100)', 'Y');
            Database_SYS.Alter_Table_Column ( table_name_, 'A', column_ , TRUE );
      END IF;
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_83');
PROMPT COPYING DATA FROM DOCUMENT_NUMBER_TMP TO DOCUMENT_NUMBER
DECLARE
   stmt_          VARCHAR2(1000);
   table_name_    VARCHAR2(30) := 'VOUCHER_ROW_TAB';
   db_column_     VARCHAR2(20) := 'DOCUMENT_NUMBER_TMP';
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      IF (Database_SYS.Column_Exist(table_name_,db_column_)) THEN
         stmt_ := '  UPDATE VOUCHER_ROW_TAB
                        SET    document_number = TO_CHAR(document_number_tmp)
                     WHERE  document_number_tmp IS NOT NULL
                     AND    document_number IS NULL';
            EXECUTE IMMEDIATE stmt_;
            COMMIT;
      END IF;
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** VOUCHER_ROW_TAB End *****


-- gelr:saft_portugal, begin
-- ***** PT_INVOICE_TYPE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_84');
PROMPT Adding NEW TABLE PT_INVOICE_TYPE_TAB
DECLARE
   table_name_   VARCHAR2(30) := 'PT_INVOICE_TYPE_TAB';
   columns_      Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
	   Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'SAFT_PT_INVOICE_TYPE', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'DESCRIPTION', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_85');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_INVOICE_TYPE_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_INVOICE_TYPE_PK';
   table_name_ VARCHAR2(30) := 'PT_INVOICE_TYPE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'SAFT_PT_INVOICE_TYPE');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_86');
PROMPT Adding ROWKEY CONSTRAINT TO PT_INVOICE_TYPE_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_INVOICE_TYPE_RK';
   table_name_ VARCHAR2(30) := 'PT_INVOICE_TYPE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_INVOICE_TYPE_TAB End *****

-- ***** PT_MOVEMENT_TYPE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_87');
PROMPT Adding NEW TABLE PT_MOVEMENT_TYPE_TAB
DECLARE
   table_name_   VARCHAR2(30) := 'PT_MOVEMENT_TYPE_TAB';
   columns_      Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
	   Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'SAFT_PT_MOVEMENT_TYPE', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'DESCRIPTION', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_88');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_MOVEMENT_TYPE_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_MOVEMENT_TYPE_PK';
   table_name_ VARCHAR2(30) := 'PT_MOVEMENT_TYPE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'SAFT_PT_MOVEMENT_TYPE');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_89');
PROMPT Adding ROWKEY CONSTRAINT TO PT_MOVEMENT_TYPE_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_MOVEMENT_TYPE_RK';
   table_name_ VARCHAR2(30) := 'PT_MOVEMENT_TYPE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_MOVEMENT_TYPE_TAB End *****

-- ***** PT_PAYMENT_TYPE_TAB End *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_90');
PROMPT Adding NEW TABLE PT_PAYMENT_TYPE_TAB
DECLARE
   table_name_   VARCHAR2(30) := 'PT_PAYMENT_TYPE_TAB';
   columns_      Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
	  Database_SYS.Reset_Column_Table(columns_);
	  Database_SYS.Set_Table_Column(columns_, 'SAFT_PT_PAYMENT_TYPE', 'VARCHAR2(20)', 'N');
     Database_SYS.Set_Table_Column(columns_, 'DESCRIPTION', 'VARCHAR2(2000)', 'Y');
     Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
     Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
     Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_91');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_PAYMENT_TYPE_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_PAYMENT_TYPE_PK';
   table_name_ VARCHAR2(30) := 'PT_PAYMENT_TYPE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'SAFT_PT_PAYMENT_TYPE');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_92');
PROMPT Adding ROWKEY CONSTRAINT TO PT_PAYMENT_TYPE_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_PAYMENT_TYPE_RK';
   table_name_ VARCHAR2(30) := 'PT_PAYMENT_TYPE_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_PAYMENT_TYPE_TAB End *****

-- ***** PT_TAXONOMY_CODE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_93');
PROMPT Adding NEW TABLE PT_TAXONOMY_CODE_TAB
DECLARE
   table_name_   VARCHAR2(30) := 'PT_TAXONOMY_CODE_TAB';
   columns_      Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'SAFT_PT_TAXONOMY_CODE', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'DESCRIPTION', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_94');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_TAXONOMY_CODE_TAB
DECLARE
   index_name_    VARCHAR2(30) := 'PT_TAXONOMY_CODE_PK';
   table_name_    VARCHAR2(30) := 'PT_TAXONOMY_CODE_TAB';
   sub_section_   NUMBER;
   columns_       Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'SAFT_PT_TAXONOMY_CODE');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_95');
PROMPT Adding ROWKEY CONSTRAINT TO PT_TAXONOMY_CODE_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_TAXONOMY_CODE_RK';
   table_name_ VARCHAR2(30) := 'PT_TAXONOMY_CODE_TAB';
   columns_    Database_SYS.ColumnTabType;
   sub_section_  NUMBER := 13;
   string_       VARCHAR2(4000);
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_TAXONOMY_CODE_TAB End *****

-- ***** PT_TRANSACTION_TYPES_TAB Start ******

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_96');
PROMPT Adding NEW TABLE PT_TRANSACTION_TYPE_TAB
DECLARE
   table_name_   VARCHAR2(30) := 'PT_TRANSACTION_TYPE_TAB';
   columns_      Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'SAFT_PT_TRANSACTION_TYPE', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'DESCRIPTION', 'VARCHAR2(2000)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_97');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_TRANSACTION_TYPE_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_TRANSACTION_TYPE_PK';
   table_name_ VARCHAR2(30) := 'PT_TRANSACTION_TYPE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'SAFT_PT_TRANSACTION_TYPE');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_98');
PROMPT Adding ROWKEY CONSTRAINT TO PT_TAXONOMY_CODE_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_TRANSACTION_TYPE_RK';
   table_name_ VARCHAR2(30) := 'PT_TRANSACTION_TYPE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_TRANSACTION_TYPES_TAB End ******

-- ***** PT_INVOICE_TYPE_CONFIG_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_99');
PROMPT Adding NEW TABLE PT_INVOICE_TYPE_CONFIG_TAB
DECLARE
   table_name_   VARCHAR2(30) := 'PT_INVOICE_TYPE_CONFIG_TAB';
   columns_      Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'COUNTRY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'REPORT_TYPE', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_SERIES_ID', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'SAFT_PT_INVOICE_TYPE', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_100');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_INVOICE_TYPE_CONFIG_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_INVOICE_TYPE_CONFIG_PK';
   table_name_ VARCHAR2(30) := 'PT_INVOICE_TYPE_CONFIG_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'COUNTRY');
      Database_SYS.Set_Table_Column(columns_, 'REPORT_TYPE');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_SERIES_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_101');
PROMPT Adding ROWKEY CONSTRAINT TO PT_INVOICE_TYPE_CONFIG_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_INVOICE_TYPE_CONFIG_RK';
   table_name_ VARCHAR2(30) := 'PT_INVOICE_TYPE_CONFIG_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_INVOICE_TYPE_CONFIG_TAB End *****


-- ***** PT_MOVEMENT_TYPE_CONFIG_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_102');
PROMPT Adding NEW TABLE PT_MOVEMENT_TYPE_CONFIG_TAB
DECLARE
   table_name_   VARCHAR2(30) := 'PT_MOVEMENT_TYPE_CONFIG_TAB';
   columns_      Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'COUNTRY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'REPORT_TYPE', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'TRANSPORT_SERIES_ID', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'SAFT_PT_MOVEMENT_TYPE', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_103');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_MOVEMENT_TYPE_CONFIG_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_MOVEMENT_TYPE_CONFIG_PK';
   table_name_ VARCHAR2(30) := 'PT_MOVEMENT_TYPE_CONFIG_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'COUNTRY');
      Database_SYS.Set_Table_Column(columns_, 'REPORT_TYPE');
      Database_SYS.Set_Table_Column(columns_, 'TRANSPORT_SERIES_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_104');
PROMPT Adding ROWKEY CONSTRAINT TO PT_MOVEMENT_TYPE_CONFIG_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_MOVEMENT_TYPE_CONFIG_RK';
   table_name_ VARCHAR2(30) := 'PT_MOVEMENT_TYPE_CONFIG_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_MOVEMENT_TYPE_CONFIG_TAB End *****

-- ***** PT_PAYMENT_TYPE_CONFIG_TAB Start ******

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_105');
PROMPT Adding NEW TABLE PT_PAYMENT_TYPE_CONFIG_TAB
DECLARE
   table_name_   VARCHAR2(30) := 'PT_PAYMENT_TYPE_CONFIG_TAB';
   columns_      Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
	   Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'COUNTRY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'REPORT_TYPE', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PAYMENT_SERIES_ID', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'SAFT_PT_PAYMENT_TYPE', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_106');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_PAYMENT_TYPE_CONFIG_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_PAYMENT_TYPE_CONFIG_PK';
   table_name_ VARCHAR2(30) := 'PT_PAYMENT_TYPE_CONFIG_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'COUNTRY');
      Database_SYS.Set_Table_Column(columns_, 'REPORT_TYPE');
      Database_SYS.Set_Table_Column(columns_, 'PAYMENT_SERIES_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_107');
PROMPT Adding ROWKEY CONSTRAINT TO PT_PAYMENT_TYPE_CONFIG_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_PAYMENT_TYPE_CONFIG_RK';
   table_name_ VARCHAR2(30) := 'PT_PAYMENT_TYPE_CONFIG_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/
-- ***** PT_PAYMENT_TYPE_CONFIG_TAB End ******

-- ***** PT_PRODUCT_TYPE_CONFIG_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_108');
PROMPT Adding NEW TABLE PT_PRODUCT_TYPE_CONFIG_TAB
DECLARE
   table_name_   VARCHAR2(30) := 'PT_PRODUCT_TYPE_CONFIG_TAB';
   columns_      Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
	  Database_SYS.Reset_Column_Table(columns_);
     Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
     Database_SYS.Set_Table_Column(columns_, 'COUNTRY', 'VARCHAR2(20)', 'N');
     Database_SYS.Set_Table_Column(columns_, 'REPORT_TYPE', 'VARCHAR2(20)', 'N');
     Database_SYS.Set_Table_Column(columns_, 'SALES_OBJECT_ID', 'VARCHAR2(20)', 'N');
     Database_SYS.Set_Table_Column(columns_, 'ATTRIBUTE_ID', 'VARCHAR2(20)', 'Y');
     Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
     Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
     Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_109');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_PRODUCT_TYPE_CONFIG_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_PRODUCT_TYPE_CONFIG_PK';
   table_name_ VARCHAR2(30) := 'PT_PRODUCT_TYPE_CONFIG_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'COUNTRY');
      Database_SYS.Set_Table_Column(columns_, 'REPORT_TYPE');
      Database_SYS.Set_Table_Column(columns_, 'SALES_OBJECT_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_110');
PROMPT Adding ROWKEY CONSTRAINT TO PT_PRODUCT_TYPE_CONFIG_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_PRODUCT_TYPE_CONFIG_RK';
   table_name_ VARCHAR2(30) := 'PT_PRODUCT_TYPE_CONFIG_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/
-- ***** PT_PRODUCT_TYPE_CONFIG_TAB End *****

-- ***** PT_TAXONOMY_CONFIG_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_111');
PROMPT Adding NEW TABLE PT_TAXONOMY_CONFIG_TAB
DECLARE
   table_name_   VARCHAR2(30) := 'PT_TAXONOMY_CONFIG_TAB';
   columns_      Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
	  Database_SYS.Reset_Column_Table(columns_);
     Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
     Database_SYS.Set_Table_Column(columns_, 'COUNTRY', 'VARCHAR2(20)', 'N');
     Database_SYS.Set_Table_Column(columns_, 'REPORT_TYPE', 'VARCHAR2(20)', 'N');
     Database_SYS.Set_Table_Column(columns_, 'CODE_PART_ATTRIBUTE_ID', 'VARCHAR2(20)', 'N');
     Database_SYS.Set_Table_Column(columns_, 'SAFT_PT_TAXONOMY_CODE', 'VARCHAR2(20)', 'N');
     Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
     Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
     Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_112');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_TAXONOMY_CONFIG_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_TAXONOMY_CONFIG_PK';
   table_name_ VARCHAR2(30) := 'PT_TAXONOMY_CONFIG_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'COUNTRY');
      Database_SYS.Set_Table_Column(columns_, 'REPORT_TYPE');
      Database_SYS.Set_Table_Column(columns_, 'CODE_PART_ATTRIBUTE_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_113');
PROMPT Adding ROWKEY CONSTRAINT TO PT_TAXONOMY_CONFIG_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_TAXONOMY_CONFIG_RK';
   table_name_ VARCHAR2(30) := 'PT_TAXONOMY_CONFIG_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_TAXONOMY_CONFIG_TAB End *****

-- ***** PT_TRANSACTION_TYPE_CONFIG_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_114');
PROMPT Adding NEW TABLE PT_TRANSACTION_TYPE_CONFIG_TAB
DECLARE
   table_name_   VARCHAR2(30) := 'PT_TRANSACTION_TYPE_CONFIG_TAB';
   columns_      Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
	  Database_SYS.Reset_Column_Table(columns_);
     Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
     Database_SYS.Set_Table_Column(columns_, 'COUNTRY', 'VARCHAR2(20)', 'N');
     Database_SYS.Set_Table_Column(columns_, 'REPORT_TYPE', 'VARCHAR2(20)', 'N');
     Database_SYS.Set_Table_Column(columns_, 'VOUCHER_TYPE', 'VARCHAR2(20)', 'N');
     Database_SYS.Set_Table_Column(columns_, 'SAFT_PT_TRANSACTION_TYPE', 'VARCHAR2(20)', 'N');
     Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
     Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
     Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_115');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_TRANSACTION_TYPE_CONFIG_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_TRANSACTION_TYPE_CONFIG_PK';
   table_name_ VARCHAR2(30) := 'PT_TRANSACTION_TYPE_CONFIG_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'COUNTRY');
      Database_SYS.Set_Table_Column(columns_, 'REPORT_TYPE');
      Database_SYS.Set_Table_Column(columns_, 'VOUCHER_TYPE');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_116');
PROMPT Adding ROWKEY CONSTRAINT TO PT_TRANSACTION_TYPE_CONFIG_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_TRANSACTION_TYPE_CONFIG_RK';
   table_name_ VARCHAR2(30) := 'PT_TRANSACTION_TYPE_CONFIG_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_TRANSACTION_TYPE_CONFIG_TAB End *****


-- ***** SAFT_PT_GENERAL_PARAMETER_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_117');
PROMPT Adding NEW TABLE SAFT_PT_GENERAL_PARAMETER_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'SAFT_PT_GENERAL_PARAMETER_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
	   Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'COUNTRY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'REPORT_TYPE', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'EXPORT_CUSTOMERS', 'VARCHAR2(5)', 'N', '''FALSE''');
      Database_SYS.Set_Table_Column(columns_, 'EXPORT_SUPPLIERS', 'VARCHAR2(5)', 'N', '''FALSE''');
      Database_SYS.Set_Table_Column(columns_, 'STATISTICAL_ACCOUNT', 'VARCHAR2(5)', 'N','''FALSE''');
      Database_SYS.Set_Table_Column(columns_, 'ACCOUNTING_STRUCT_ID', 'VARCHAR2(100)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_118');
PROMPT Adding PRIMARY KEY CONSTRAINT TO SAFT_PT_GENERAL_PARAMETER_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'SAFT_PT_GENERAL_PARAMETER_PK';
   table_name_ VARCHAR2(30) := 'SAFT_PT_GENERAL_PARAMETER_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'COUNTRY');
      Database_SYS.Set_Table_Column(columns_, 'REPORT_TYPE');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_119');
PROMPT Adding ROWKEY CONSTRAINT TO SAFT_PT_GENERAL_PARAMETER_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'SAFT_PT_GENERAL_PARAMETER_RK';
   table_name_ VARCHAR2(30) := 'SAFT_PT_GENERAL_PARAMETER_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** SAFT_PT_GENERAL_PARAMETER_TAB End *****


-- ***** AUDIT_BASIC_DATA_MASTER_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_120');
PROMPT Adding column SW_COMPANY_TAX_ID to AUDIT_BASIC_DATA_MASTER_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'AUDIT_BASIC_DATA_MASTER_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      column_ := Database_SYS.Set_Column_Values('SW_COMPANY_TAX_ID', 'VARCHAR2(100)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** AUDIT_BASIC_DATA_MASTER_TAB End *****
-- gelr:saft_portugal, end


-- gelr:saft_portugal, begin
-- ***** PT_HEADER_INFO_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_121');
PROMPT ADDING new table PT_HEADER_INFO_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'PT_HEADER_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
	   Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'AUDIT_FILE_VERSION', 'VARCHAR2(10)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'COMPANY_ID', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TAX_REGISTRATION_NUMBER', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TAX_ACCOUNTING_BASIS', 'VARCHAR2(1)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'COMPANY_NAME', 'VARCHAR2(100)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'BUSINESS_NAME', 'VARCHAR2(60)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'BUILDING_NUMBER', 'VARCHAR2(10)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'STREET_NAME', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ADDRESS_DETAIL', 'VARCHAR2(210)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CITY', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'POSTAL_CODE', 'VARCHAR2(8)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'REGION', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'COUNTRY', 'VARCHAR2(2)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'FISCAL_YEAR', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'START_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'END_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CURRENCY_CODE', 'VARCHAR2(3)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DATE_CREATED', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TAX_ENTITY', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PRODUCT_COMPANY_TAX_ID', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SOFTWARE_CERTIFICATE_NO', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PRODUCT_ID', 'VARCHAR2(255)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PRODUCT_VERSION', 'VARCHAR2(30)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'HEADER_COMMENT', 'VARCHAR2(255)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TELEPHONE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'FAX', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'EMAIL', 'VARCHAR2(254)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'WEBSITE', 'VARCHAR2(60)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_122');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_HEADER_INFO_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_HEADER_INFO_PK';
   table_name_ VARCHAR2(30) := 'PT_HEADER_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_123');
PROMPT Adding ROWKEY CONSTRAINT TO PT_HEADER_INFO_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_HEADER_INFO_RK';
   table_name_ VARCHAR2(30) := 'PT_HEADER_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_HEADER_INFO_TAB End *****


-- ***** PT_CUSTOMER_INFO_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_124');
PROMPT ADDING new table PT_CUSTOMER_INFO_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'PT_CUSTOMER_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
	   Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'CUSTOMER_ID', 'VARCHAR2(30)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ACCOUNT_ID', 'VARCHAR2(30)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CUSTOMER_TAX_ID', 'VARCHAR2(30)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'COMPANY_NAME', 'VARCHAR2(100)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CONTACT', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'BILLING_BUILDING_NUMBER', 'VARCHAR2(10)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'BILLING_STREET_NAME', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'BILLING_ADRESS_DETAIL', 'VARCHAR2(210)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'BILLING_CITY', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'BILLING_POSTAL_CODE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'BILLING_REGION', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'BILLING_COUNTRY', 'VARCHAR2(12)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIPPING_BUILDING_NUMBER', 'VARCHAR2(10)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIPPING_STREET_NAME', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIPPING_ADRESS_DETAIL', 'VARCHAR2(210)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIPPING_CITY', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIPPING_POSTAL_CODE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIPPING_REGION', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIPPING_COUNTRY', 'VARCHAR2(12)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TELEPHONE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'FAX', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'EMAIL', 'VARCHAR2(254)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'WEBSITE', 'VARCHAR2(60)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SELF_BILLING_INDICATOR', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_125');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_CUSTOMER_INFO_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_CUSTOMER_INFO_PK';
   table_name_ VARCHAR2(30) := 'PT_CUSTOMER_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID');
      Database_SYS.Set_Table_Column(columns_, 'CUSTOMER_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_126');
PROMPT Adding ROWKEY CONSTRAINT TO PT_CUSTOMER_INFO_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_CUSTOMER_INFO_RK';
   table_name_ VARCHAR2(30) := 'PT_CUSTOMER_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_CUSTOMER_INFO_TAB End *****

-- ***** PT_FILE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_127');
PROMPT ADDING new table PT_FILE_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'PT_FILE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
	   Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_TYPE', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'FROM_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TO_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_128');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_FILE_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_FILE_PK';
   table_name_ VARCHAR2(30) := 'PT_FILE_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_129');
PROMPT Adding ROWKEY CONSTRAINT TO PT_FILE_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_FILE_RK';
   table_name_ VARCHAR2(30) := 'PT_FILE_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_FILE_TAB End *****

-- ***** PT_FILE_ID_SEQ Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_130');
PROMPT creating pt_file_id_seq
DECLARE
   sequence_name_ VARCHAR2(30) := 'PT_FILE_ID_SEQ';
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Create_Sequence(sequence_name_, 'INCREMENT BY 1 START WITH 1', TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_FILE_ID_SEQ End *****

-- ***** PT_INVOICE_HEADER_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_131');
PROMPT ADDING new table PT_INVOICE_HEADER_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'PT_INVOICE_HEADER_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
	   Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'CUSTOMER_ID', 'VARCHAR2(30)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_ID', 'VARCHAR2(30)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_NO', 'VARCHAR2(60)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'AT_NUMBER', 'VARCHAR2(100)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_STATUS', 'VARCHAR2(1)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_STATUS_DATE', 'VARCHAR2(100)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'REASON', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SOURCE_ID', 'VARCHAR2(30)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SOURCE_BILLING', 'VARCHAR2(1)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'HASH', 'VARCHAR2(172)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'HASH_CONTROL', 'VARCHAR2(70)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PERIOD', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_TYPE', 'VARCHAR2(2)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SELF_BILLING_INDICATOR', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CASH_SCHEME_INDICATOR', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'THIRD_PARTY_BILL_INDICATOR', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'EAC_CODE', 'VARCHAR2(5)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SYSTEM_ENTRY_DATE', 'VARCHAR2(100)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TRANSACTION_ID', 'VARCHAR2(70)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_TO_DELIVERY_ID', 'VARCHAR2(255)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_TO_DELIVERY_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_TO_WAREHOUSE_ID', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_TO_LOCATION_ID', 'VARCHAR2(30)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_TO_ADDRESS', 'VARCHAR2(100)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_TO_BUILDING_NUMBER', 'VARCHAR2(10)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_TO_STREET_NAME', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_TO_ADDRESS_DETAIL', 'VARCHAR2(210)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_TO_CITY', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_TO_POSTAL_CODE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_TO_REGION', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_TO_COUNTRY', 'VARCHAR2(2)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_FROM_DELIVERY_ID', 'VARCHAR2(255)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_FROM_DELIVERY_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_FROM_WAREHOUSE_ID', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_FROM_LOCATION_ID', 'VARCHAR2(30)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_FROM_ADDRESS', 'VARCHAR2(100)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_FROM_BUILDING_NUMBER', 'VARCHAR2(10)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_FROM_STREET_NAME', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_FROM_ADDRESS_DETAIL', 'VARCHAR2(210)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_FROM_CITY', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_FROM_POSTAL_CODE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_FROM_REGION', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_FROM_COUNTRY', 'VARCHAR2(2)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_FROM_MOVE_END_TIME', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_FROM_MOVE_START_TIME', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DELIVERY_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CO_REASON', 'VARCHAR2(100)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'INV_REASON', 'VARCHAR2(100)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_132');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_INVOICE_HEADER_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_INVOICE_HEADER_PK';
   table_name_ VARCHAR2(30) := 'PT_INVOICE_HEADER_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_133');
PROMPT Adding ROWKEY CONSTRAINT TO PT_INVOICE_HEADER_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_INVOICE_HEADER_RK';
   table_name_ VARCHAR2(30) := 'PT_INVOICE_HEADER_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_INVOICE_HEADER_TAB End *****

-- ***** PT_INVOICE_LINE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_134');
PROMPT ADDING new table PT_INVOICE_LINE_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'PT_INVOICE_LINE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
	   Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_ID', 'VARCHAR2(30)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'LINE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ORIGINATING_ON', 'VARCHAR2(60)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ORDER_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PRODUCT_CODE', 'VARCHAR2(60)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PRODUCT_DESCRIPTION', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'QUANTITY', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'UNIT_OF_MEASURE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'UNIT_PRICE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TAX_BASE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TAX_POINT_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'REFERENCE', 'VARCHAR2(60)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'REASON', 'VARCHAR2(60)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DESCRIPTION', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DEBIT_AMOUNT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CREDIT_AMOUNT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SETTLEMENT_AMOUNT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ARC_NO', 'VARCHAR2(21)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'IEC_AMOUNT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SERIAL_NO_COUNT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ORDER_NO', 'VARCHAR2(12)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'LINE_NO', 'VARCHAR2(12)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'REL_NO', 'VARCHAR2(4)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'LINE_ITEM_NO', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DELIV_NO', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_135');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_INVOICE_LINE_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_INVOICE_LINE_PK';
   table_name_ VARCHAR2(30) := 'PT_INVOICE_LINE_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_ID');
      Database_SYS.Set_Table_Column(columns_, 'LINE_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_136');
PROMPT Adding ROWKEY CONSTRAINT TO PT_INVOICE_LINE_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_INVOICE_LINE_RK';
   table_name_ VARCHAR2(30) := 'PT_INVOICE_LINE_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_INVOICE_LINE_TAB End *****

-- *****PT_INVOICE_DOCUMENT_TOTALS_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_137');
PROMPT ADDING new table PT_INVOICE_DOCUMENT_TOTALS_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'PT_INVOICE_DOCUMENT_TOTALS_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
	   Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_ID', 'VARCHAR2(30)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'TAX_PAYABLE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'NET_TOTAL', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'GROSS_TOTAL', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CURRENCY_CODE', 'VARCHAR2(3)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CURRENCY_AMOUNT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'EXCHANGE_RATE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SETTLEMENT_DISCOUNT', 'VARCHAR2(30)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SETTLEMENT_AMOUNT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SETTLEMENT_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PAYMENT_TERMS', 'VARCHAR2(100)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PAYMENT_MECHANISM', 'VARCHAR2(2)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PAYMENT_AMOUNT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PAYMENT_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'WITHHOLDING_TAX_TYPE', 'VARCHAR2(3)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'WITHHOLDING_TAX_DES', 'VARCHAR2(60)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'WITHHOLDING_TAX_AMOUNT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_138');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_INVOICE_DOCUMENT_TOTALS_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_INVOICE_DOCUMENT_TOTALS_PK';
   table_name_ VARCHAR2(30) := 'PT_INVOICE_DOCUMENT_TOTALS_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_139');
PROMPT Adding ROWKEY CONSTRAINT TO PT_INVOICE_DOCUMENT_TOTALS_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_INVOICE_DOCUMENT_TOTALS_RK';
   table_name_ VARCHAR2(30) := 'PT_INVOICE_DOCUMENT_TOTALS_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_INVOICE_DOCUMENT_TOTALS_TAB End *****

-- ***** PT_INV_HEADERS_SUMMARY_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_140');
PROMPT ADDING new table PT_INV_HEADERS_SUMMARY_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'PT_INV_HEADERS_SUMMARY_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
	   Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'NUMBER_OF_ENTRIES', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TOTAL_DEBIT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TOTAL_CREDIT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_141');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_INV_HEADERS_SUMMARY_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_INV_HEADERS_SUMMARY_PK';
   table_name_ VARCHAR2(30) := 'PT_INV_HEADERS_SUMMARY_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_142');
PROMPT Adding ROWKEY CONSTRAINT TO PT_INV_HEADERS_SUMMARY_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_INV_HEADERS_SUMMARY_RK';
   table_name_ VARCHAR2(30) := 'PT_INV_HEADERS_SUMMARY_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_INV_HEADERS_SUMMARY_TAB Start *****

-- ***** PT_INV_LINE_TAX_INFO_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_143');
PROMPT ADDING new table PT_INV_LINE_TAX_INFO_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'PT_INV_LINE_TAX_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
	   Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_ID', 'VARCHAR2(30)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'LINE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'TAX_ITEM_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'TAX_CODE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TAX_TYPE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TAX_COUNTRY_REGION', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TAX_PERCENTAGE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TAX_AMOUNT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TAX_EXEMPTION_REASON', 'VARCHAR2(60)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TAX_EXEMPTION_CODE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_144');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_INV_LINE_TAX_INFO_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_INV_LINE_TAX_INFO_PK';
   table_name_ VARCHAR2(30) := 'PT_INV_LINE_TAX_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_ID', 'VARCHAR2(30)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'LINE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'TAX_ITEM_ID', 'NUMBER', 'N');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_145');
PROMPT Adding ROWKEY CONSTRAINT TO PT_INV_LINE_TAX_INFO_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_INV_LINE_TAX_INFO_RK';
   table_name_ VARCHAR2(30) := 'PT_INV_LINE_TAX_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_INV_LINE_TAX_INFO_TAB End *****

-- ***** PT_PRODUCT_SERIAL_INFO_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_146');
PROMPT ADDING new table PT_PRODUCT_SERIAL_INFO_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'PT_PRODUCT_SERIAL_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
	   Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_ID', 'VARCHAR2(30)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'LINE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'SERIAL_NUMBER', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'IS_FIRST_RECORD', 'VARCHAR2(5)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_147');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_PRODUCT_SERIAL_INFO_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_PRODUCT_SERIAL_INFO_PK';
   table_name_ VARCHAR2(30) := 'PT_PRODUCT_SERIAL_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_ID', 'VARCHAR2(30)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'LINE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'SERIAL_NUMBER', 'VARCHAR2(20)', 'N');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_148');
PROMPT Adding ROWKEY CONSTRAINT TO PT_PRODUCT_SERIAL_INFO_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_PRODUCT_SERIAL_INFO_RK';
   table_name_ VARCHAR2(30) := 'PT_PRODUCT_SERIAL_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_PRODUCT_SERIAL_INFO_TAB End *****

-- ***** PT_GEN_LED_ACCOUNT_INFO_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_149');
PROMPT ADDING new table PT_GEN_LED_ACCOUNT_INFO_TAB
DECLARE
   table_name_   VARCHAR2(30) := 'PT_GEN_LED_ACCOUNT_INFO_TAB';
   columns_      Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
	   Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'TAXONOMY_REFERENCE', 'VARCHAR2(1)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ACCOUNT_ID', 'VARCHAR2(30)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ACCOUNT_DESCRIPTION', 'VARCHAR2(100)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'OPENING_DEBIT_BALANCE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'OPENING_CREDIT_BALANCE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CLOSING_DEBIT_BALANCE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CLOSING_CREDIT_BALANCE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'GROUPING_CATEGORY', 'VARCHAR2(2)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'GROUPING_CODE', 'VARCHAR2(30)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TAXONOMY_CODE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'RECORD_COUNT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_150');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_GEN_LED_ACCOUNT_INFO_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_GEN_LED_ACCOUNT_INFO_PK';
   table_name_ VARCHAR2(30) := 'PT_GEN_LED_ACCOUNT_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID');
      Database_SYS.Set_Table_Column(columns_, 'TAXONOMY_REFERENCE');
      Database_SYS.Set_Table_Column(columns_, 'ACCOUNT_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_151');
PROMPT Adding ROWKEY CONSTRAINT TO PT_GEN_LED_ACCOUNT_INFO_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_GEN_LED_ACCOUNT_INFO_RK';
   table_name_ VARCHAR2(30) := 'PT_GEN_LED_ACCOUNT_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_GEN_LED_ACCOUNT_INFO_TAB End *****

-- ***** PT_SUPPLIER_INFO_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_152');
PROMPT ADDING new table PT_SUPPLIER_INFO_TAB
DECLARE
   table_name_   VARCHAR2(30) := 'PT_SUPPLIER_INFO_TAB';
   columns_      Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
	   Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'SUPPLIER_ID', 'VARCHAR2(30)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ACCOUNT_ID', 'VARCHAR2(30)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SUPPLIER_TAX_ID', 'VARCHAR2(30)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'COMPANY_NAME', 'VARCHAR2(100)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CONTACT', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'BILLING_BUILDING_NUMBER', 'VARCHAR2(10)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'BILLING_STREET_NAME', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'BILLING_ADRESS_DETAIL', 'VARCHAR2(210)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'BILLING_CITY', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'BILLING_POSTAL_CODE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'BILLING_REGION', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'BILLING_COUNTRY', 'VARCHAR2(12)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIPPING_BUILDING_NUMBER', 'VARCHAR2(10)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIPPING_STREET_NAME', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIPPING_ADRESS_DETAIL', 'VARCHAR2(210)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIPPING_CITY', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIPPING_POSTAL_CODE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIPPING_REGION', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIPPING_COUNTRY', 'VARCHAR2(12)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TELEPHONE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'FAX', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'EMAIL', 'VARCHAR2(254)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'WEBSITE', 'VARCHAR2(60)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SELF_BILLING_INDICATOR', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_153');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_SUPPLIER_INFO_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_SUPPLIER_INFO_PK';
   table_name_ VARCHAR2(30) := 'PT_SUPPLIER_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID');
      Database_SYS.Set_Table_Column(columns_, 'SUPPLIER_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_154');
PROMPT Adding ROWKEY CONSTRAINT TO PT_SUPPLIER_INFO_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_SUPPLIER_INFO_RK';
   table_name_ VARCHAR2(30) := 'PT_SUPPLIER_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_SUPPLIER_INFO_TAB End *****

-- ***** PT_PRODUCT_INFO_TAB Start *****
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_155');
PROMPT ADDING new table PT_PRODUCT_INFO_TAB
DECLARE
   table_name_   VARCHAR2(30) := 'PT_PRODUCT_INFO_TAB';
   columns_      Database_SYS.ColumnTabType;
   column_       Database_SYS.ColRec;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'RECORD_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PRODUCT_TYPE', 'VARCHAR2(1)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PRODUCT_CODE', 'VARCHAR2(60)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PRODUCT_GROUP', 'VARCHAR2(60)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PRODUCT_DESCRIPTION', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PRODUCT_NUMBER_CODE', 'VARCHAR2(60)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CN_CODE', 'VARCHAR2(8)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'UN_NUMBER', 'VARCHAR2(4)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_156');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_PRODUCT_INFO_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_PRODUCT_INFO_PK';
   table_name_ VARCHAR2(30) := 'PT_PRODUCT_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID');
      Database_SYS.Set_Table_Column(columns_, 'RECORD_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_157');
PROMPT Adding ROWKEY CONSTRAINT TO PT_PRODUCT_INFO_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_PRODUCT_INFO_RK';
   table_name_ VARCHAR2(30) := 'PT_PRODUCT_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_PRODUCT_INFO_TAB End *****

-- ***** PRODUCT_RECORD_ID_SEQ Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_158');
PROMPT creating product_record_id_seq
DECLARE
   sequence_name_ VARCHAR2(30) := 'PRODUCT_RECORD_ID_SEQ';

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Create_Sequence(sequence_name_, 'INCREMENT BY 1 START WITH 1', TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PRODUCT_RECORD_ID_SEQ End *****

-- ***** PT_TAX_TABLE_INFO_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_159');
PROMPT ADDING new table PT_TAX_TABLE_INFO_TAB
DECLARE
   table_name_   VARCHAR2(30) := 'PT_TAX_TABLE_INFO_TAB';
   columns_      Database_SYS.ColumnTabType;
   column_       Database_SYS.ColRec;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'TAX_ID', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'TAX_CODE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TAX_TYPE', 'VARCHAR2(3)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TAX_COUNTRY_REGION', 'VARCHAR2(5)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DESCRIPTION', 'VARCHAR2(255)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TAX_EXPIRATION_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TAX_PERCENTAGE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TAX_AMOUNT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_160');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_TAX_TABLE_INFO_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_TAX_TABLE_INFO_PK';
   table_name_ VARCHAR2(30) := 'PT_TAX_TABLE_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID');
      Database_SYS.Set_Table_Column(columns_, 'TAX_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_161');
PROMPT Adding ROWKEY CONSTRAINT TO PT_TAX_TABLE_INFO_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_TAX_TABLE_INFO_RK';
   table_name_ VARCHAR2(30) := 'PT_TAX_TABLE_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_TAX_TABLE_INFO_TAB End *****

-- ***** PT_GEN_LED_ENTRY_SUMMARY_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_162');
PROMPT ADDING new table PT_GEN_LED_ENTRY_SUMMARY_TAB
DECLARE
   table_name_   VARCHAR2(30) := 'PT_GEN_LED_ENTRY_SUMMARY_TAB';
   columns_      Database_SYS.ColumnTabType;
   column_       Database_SYS.ColRec;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'NUMBER_OF_ENTRIES', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TOTAL_DEBIT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TOTAL_CREDIT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_163');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_GEN_LED_ENTRY_SUMMARY_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_GEN_LED_ENTRY_SUMMARY_PK';
   table_name_ VARCHAR2(30) := 'PT_GEN_LED_ENTRY_SUMMARY_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_164');
PROMPT Adding ROWKEY CONSTRAINT TO PT_GEN_LED_ENTRY_SUMMARY_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_GEN_LED_ENTRY_SUMMARY_RK';
   table_name_ VARCHAR2(30) := 'PT_GEN_LED_ENTRY_SUMMARY_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_GEN_LED_ENTRY_SUMMARY_TAB End *****

-- ***** PT_GEN_LED_JOURNAL_INFO_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_165');
PROMPT ADDING new table PT_GEN_LED_JOURNAL_INFO_TAB
DECLARE
   table_name_   VARCHAR2(30) := 'PT_GEN_LED_JOURNAL_INFO_TAB';
   columns_      Database_SYS.ColumnTabType;
   column_       Database_SYS.ColRec;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'JOURNAL_ID', 'VARCHAR2(30)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'DESCRIPTION', 'VARCHAR2(60)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_166');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_GEN_LED_JOURNAL_INFO_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_GEN_LED_JOURNAL_INFO_PK';
   table_name_ VARCHAR2(30) := 'PT_GEN_LED_JOURNAL_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID');
      Database_SYS.Set_Table_Column(columns_, 'JOURNAL_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_167');
PROMPT Adding ROWKEY CONSTRAINT TO PT_GEN_LED_JOURNAL_INFO_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_GEN_LED_JOURNAL_INFO_RK';
   table_name_ VARCHAR2(30) := 'PT_GEN_LED_JOURNAL_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_GEN_LED_JOURNAL_INFO_TAB End *****

-- ***** PT_GEN_LED_TRANS_INFO_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_168');
PROMPT ADDING new table PT_GEN_LED_TRANS_INFO_TAB
DECLARE
   table_name_   VARCHAR2(30) := 'PT_GEN_LED_TRANS_INFO_TAB';
   columns_      Database_SYS.ColumnTabType;
   column_       Database_SYS.ColRec;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'JOURNAL_ID', 'VARCHAR2(30)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ACCOUNTING_YEAR', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'VOUCHER_NO', 'VARCHAR2(30)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'TRANSACTION_ID', 'VARCHAR2(70)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PERIOD', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TRANSACTION_DATE', 'VARCHAR2(60)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SOURCE_ID', 'VARCHAR2(30)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DESCRIPTION', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DOC_ARCHIVAL_NUMBER', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TRANSACTION_TYPE', 'VARCHAR2(1)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'GL_POSTING_DATE', 'VARCHAR2(100)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CUSTOMER_ID', 'VARCHAR2(30)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SUPPLIER_ID', 'VARCHAR2(30)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_169');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_GEN_LED_TRANS_INFO_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_GEN_LED_TRANS_INFO_PK';
   table_name_ VARCHAR2(30) := 'PT_GEN_LED_TRANS_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID');
      Database_SYS.Set_Table_Column(columns_, 'JOURNAL_ID');
      Database_SYS.Set_Table_Column(columns_, 'ACCOUNTING_YEAR');
      Database_SYS.Set_Table_Column(columns_, 'VOUCHER_NO');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_170');
PROMPT Adding ROWKEY CONSTRAINT TO PT_GEN_LED_TRANS_INFO_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_GEN_LED_TRANS_INFO_RK';
   table_name_ VARCHAR2(30) := 'PT_GEN_LED_TRANS_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_GEN_LED_TRANS_INFO_TAB End *****

-- ***** PT_GEN_LED_TRANS_LINE_TAB Start *****
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_171');
PROMPT ADDING new table PT_GEN_LED_TRANS_LINE_TAB
DECLARE
   table_name_   VARCHAR2(30) := 'PT_GEN_LED_TRANS_LINE_TAB';
   columns_      Database_SYS.ColumnTabType;
   column_       Database_SYS.ColRec;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'JOURNAL_ID', 'VARCHAR2(30)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ACCOUNTING_YEAR', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'VOUCHER_NO', 'VARCHAR2(30)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROW_NO', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'LINE_TYPE', 'VARCHAR2(10)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'RECORD_ID', 'VARCHAR2(30)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ACCOUNT_ID', 'VARCHAR2(30)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SOURCE_DOCUMENT_ID', 'VARCHAR2(60)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SYSTEM_ENTRY_DATE', 'VARCHAR2(100)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DESCRIPTION', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'AMOUNT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_172');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_GEN_LED_TRANS_LINE_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_GEN_LED_TRANS_LINE_PK';
   table_name_ VARCHAR2(30) := 'PT_GEN_LED_TRANS_LINE_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID');
      Database_SYS.Set_Table_Column(columns_, 'JOURNAL_ID');
      Database_SYS.Set_Table_Column(columns_, 'ACCOUNTING_YEAR');
      Database_SYS.Set_Table_Column(columns_, 'VOUCHER_NO');
      Database_SYS.Set_Table_Column(columns_, 'ROW_NO');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_173');
PROMPT Adding ROWKEY CONSTRAINT TO PT_GEN_LED_TRANS_LINE_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_GEN_LED_TRANS_LINE_RK';
   table_name_ VARCHAR2(30) := 'PT_GEN_LED_TRANS_LINE_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_GEN_LED_TRANS_LINE_TAB Start *****

-- ***** PT_STOCK_MOVEMENT_INFO_TAB Start *****
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_174');
PROMPT ADDING new table PT_STOCK_MOVEMENT_INFO_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'PT_STOCK_MOVEMENT_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
	  Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'DOCUMENT_NUMBER', 'VARCHAR2(60)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'AT_NUMBER', 'VARCHAR2(100)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TRANSPORT_DOC_NUMBER', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'MOVEMENT_STATUS', 'VARCHAR2(1)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'MOVEMENT_STATUS_DATE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'WORK_STATUS', 'VARCHAR2(1)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'WORK_STATUS_DATE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'REASON', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SOURCE_ID', 'VARCHAR2(30)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SOURCE_BILLING', 'VARCHAR2(1)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'HASH', 'VARCHAR2(172)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'HASH_CONTROL', 'VARCHAR2(70)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PERIOD', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'MOVEMENT_DATE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'MOVEMENT_TYPE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'WORK_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'WORK_TYPE', 'VARCHAR2(2)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'EAC_CODE', 'VARCHAR2(5)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SYSTEM_ENTRY_DATE', 'VARCHAR2(100)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TRANSACTION_ID', 'VARCHAR2(70)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CUSTOMER_ID', 'VARCHAR2(30)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SUPPLIER_ID', 'VARCHAR2(30)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'MOVEMENT_COMMENTS', 'VARCHAR2(60)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_TO_DELIVERY_ID', 'VARCHAR2(255)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_TO_DELIVERY_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_TO_WAREHOUSE_ID', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_TO_LOCATION_ID', 'VARCHAR2(30)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_TO_ADDRESS', 'VARCHAR2(100)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_TO_BUILDING_NUMBER', 'VARCHAR2(10)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_TO_STREET_NAME', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_TO_ADDRESS_DETAIL', 'VARCHAR2(210)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_TO_CITY', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_TO_POSTAL_CODE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_TO_REGION', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_TO_COUNTRY', 'VARCHAR2(2)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_FROM_DELIVERY_ID', 'VARCHAR2(255)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_FROM_DELIVERY_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_FROM_WAREHOUSE_ID', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_FROM_LOCATION_ID', 'VARCHAR2(30)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_FROM_ADDRESS', 'VARCHAR2(100)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_FROM_BUILDING_NUMBER', 'VARCHAR2(10)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_FROM_STREET_NAME', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_FROM_ADDRESS_DETAIL', 'VARCHAR2(210)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_FROM_CITY', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_FROM_POSTAL_CODE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_FROM_REGION', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SHIP_FROM_COUNTRY', 'VARCHAR2(2)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'MOVEMENT_END_TIME', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'MOVEMENT_START_TIME', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'AT_DOC_CODE_ID', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DOCUMENT_TYPE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_175');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_STOCK_MOVEMENT_INFO_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_STOCK_MOVEMENT_INFO_PK';
   table_name_ VARCHAR2(30) := 'PT_STOCK_MOVEMENT_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID');
      Database_SYS.Set_Table_Column(columns_, 'DOCUMENT_NUMBER');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_176');
PROMPT Adding ROWKEY CONSTRAINT TO PT_STOCK_MOVEMENT_INFO_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_STOCK_MOVEMENT_INFO_RK';
   table_name_ VARCHAR2(30) := 'PT_STOCK_MOVEMENT_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_STOCK_MOVEMENT_INFO_TAB End *****

-- ***** PT_STOCK_MOVEMENT_LINE_TAB Start*****
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_177');
PROMPT ADDING new table PT_STOCK_MOVEMENT_LINE_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'PT_STOCK_MOVEMENT_LINE_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
	   Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'DOCUMENT_NUMBER', 'VARCHAR2(60)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'LINE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ORIGINATING_ON', 'VARCHAR2(60)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ORDER_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PRODUCT_CODE', 'VARCHAR2(60)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PRODUCT_DESCRIPTION', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'QUANTITY', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'UNIT_OF_MEASURE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'UNIT_PRICE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TAX_BASE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TAX_POINT_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'REFERENCE', 'VARCHAR2(60)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'REASON', 'VARCHAR2(60)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DESCRIPTION', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DEBIT_AMOUNT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CREDIT_AMOUNT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SETTLEMENT_AMOUNT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ARC_NO', 'VARCHAR2(21)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'IEC_AMOUNT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DOCUMENT_TYPE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_178');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_STOCK_MOVEMENT_LINE_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_STOCK_MOVEMENT_LINE_PK';
   table_name_ VARCHAR2(30) := 'PT_STOCK_MOVEMENT_LINE_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID');
      Database_SYS.Set_Table_Column(columns_, 'DOCUMENT_NUMBER');
      Database_SYS.Set_Table_Column(columns_, 'LINE_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_179');
PROMPT Adding ROWKEY CONSTRAINT TO PT_STOCK_MOVEMENT_LINE_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_STOCK_MOVEMENT_LINE_RK';
   table_name_ VARCHAR2(30) := 'PT_STOCK_MOVEMENT_LINE_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_STOCK_MOVEMENT_LINE_TAB End *****

-- ***** PT_MOV_OF_GOODS_HEADER_TAB Start *****
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_180');
PROMPT ADDING new table PT_MOV_OF_GOODS_HEADER_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'PT_MOV_OF_GOODS_HEADER_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
	   Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'NUMBER_OF_ENTRIES', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TOTAL_QUANTITY_ISSUED', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TOTAL_CREDIT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TOTAL_DEBIT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DOCUMENT_TYPE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_181');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_MOV_OF_GOODS_HEADER_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_MOV_OF_GOODS_HEADER_PK';
   table_name_ VARCHAR2(30) := 'PT_MOV_OF_GOODS_HEADER_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_182');
PROMPT Adding ROWKEY CONSTRAINT TO PT_MOV_OF_GOODS_HEADER_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_MOV_OF_GOODS_HEADER_RK';
   table_name_ VARCHAR2(30) := 'PT_MOV_OF_GOODS_HEADER_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_MOV_OF_GOODS_HEADER_TAB End *****

-- ***** PT_STOCK_MOV_DOC_TOTALS_TAB Start *****
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_183');
PROMPT ADDING new table PT_STOCK_MOV_DOC_TOTALS_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'PT_STOCK_MOV_DOC_TOTALS_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
	   Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'DOCUMENT_NUMBER', 'VARCHAR2(60)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'TAX_PAYABLE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'NET_TOTAL', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'GROSS_TOTAL', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CURRENCY_CODE', 'VARCHAR2(3)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CURRENCY_AMOUNT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'EXCHANGE_RATE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DOCUMENT_TYPE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_184');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_STOCK_MOV_DOC_TOTALS_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_STOCK_MOV_DOC_TOTALS_PK';
   table_name_ VARCHAR2(30) := 'PT_STOCK_MOV_DOC_TOTALS_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID');
      Database_SYS.Set_Table_Column(columns_, 'DOCUMENT_NUMBER');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_185');
PROMPT Adding ROWKEY CONSTRAINT TO PT_STOCK_MOV_DOC_TOTALS_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_STOCK_MOV_DOC_TOTALS_RK';
   table_name_ VARCHAR2(30) := 'PT_STOCK_MOV_DOC_TOTALS_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_STOCK_MOV_DOC_TOTALS_TAB End *****

-- ***** PT_STOCK_MOV_LINE_TAX_TAB Start *****
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_186');
PROMPT ADDING new table PT_STOCK_MOV_LINE_TAX_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'PT_STOCK_MOV_LINE_TAX_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
	   Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'DOCUMENT_NUMBER', 'VARCHAR2(60)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'LINE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'TAX_ITEM_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'TAX_CODE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TAX_TYPE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TAX_COUNTRY_REGION', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TAX_PERCENTAGE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TAX_AMOUNT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TAX_EXEMPTION_REASON', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TAX_EXEMPTION_CODE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DOCUMENT_TYPE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_187');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_STOCK_MOV_LINE_TAX_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_STOCK_MOV_LINE_TAX_PK';
   table_name_ VARCHAR2(30) := 'PT_STOCK_MOV_LINE_TAX_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID');
      Database_SYS.Set_Table_Column(columns_, 'DOCUMENT_NUMBER');
      Database_SYS.Set_Table_Column(columns_, 'LINE_ID');
      Database_SYS.Set_Table_Column(columns_, 'TAX_ITEM_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_188');
PROMPT Adding ROWKEY CONSTRAINT TO PT_STOCK_MOV_LINE_TAX_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_STOCK_MOV_LINE_TAX_RK';
   table_name_ VARCHAR2(30) := 'PT_STOCK_MOV_LINE_TAX_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_STOCK_MOV_LINE_TAX_TAB End *****

-- ***** PT_STOCK_PROD_SERIAL_INFO_TAB Start *****
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_189');
PROMPT ADDING new table PT_STOCK_PROD_SERIAL_INFO_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'PT_STOCK_PROD_SERIAL_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
	   Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'DOCUMENT_NUMBER', 'VARCHAR2(60)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'LINE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'SERIAL_NUMBER', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'IS_FIRST_RECORD', 'VARCHAR2(5)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DOCUMENT_TYPE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_190');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_STOCK_PROD_SERIAL_INFO_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_STOCK_PROD_SERIAL_INFO_PK';
   table_name_ VARCHAR2(30) := 'PT_STOCK_PROD_SERIAL_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID');
      Database_SYS.Set_Table_Column(columns_, 'DOCUMENT_NUMBER');
      Database_SYS.Set_Table_Column(columns_, 'LINE_ID');
      Database_SYS.Set_Table_Column(columns_, 'SERIAL_NUMBER');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_191');
PROMPT Adding ROWKEY CONSTRAINT TO PT_STOCK_PROD_SERIAL_INFO_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_STOCK_PROD_SERIAL_INFO_RK';
   table_name_ VARCHAR2(30) := 'PT_STOCK_PROD_SERIAL_INFO_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_STOCK_PROD_SERIAL_INFO_TAB Start *****

-- ***** PT_PAYMENT_HEADER_TAB Start ******
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_192');
PROMPT ADDING new table PT_PAYMENT_HEADER_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'PT_PAYMENT_HEADER_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
	   Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'SERIES_ID', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PAYMENT_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'CURRENCY', 'VARCHAR2(3)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PAYMENT_REF_NO', 'VARCHAR2(60)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'AT_NUMBER', 'VARCHAR2(100)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PERIOD', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TRANSACTION_ID', 'VARCHAR2(70)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TRANSACTION_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PAYMENT_TYPE', 'VARCHAR2(2)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DESCRIPTION', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SYSTEM_ID', 'VARCHAR2(60)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PAYMENT_STATUS', 'VARCHAR2(1)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PAYMENT_STATUS_DATE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'REASON', 'VARCHAR2(50)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SOURCE_ID', 'VARCHAR2(30)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SOURCE_PAYMENT', 'VARCHAR2(1)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PAYMENT_MECHANISM', 'VARCHAR2(2)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PAYMENT_AMOUNT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'PAYMENT_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SYSTEM_ENTRY_DATE', 'VARCHAR2(100)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CUSTOMER_ID', 'VARCHAR2(30)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SAFT_VALUE', 'VARCHAR2(30)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CURR_RATE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_193');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_PAYMENT_HEADER_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_PAYMENT_HEADER_PK';
   table_name_ VARCHAR2(30) := 'PT_PAYMENT_HEADER_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID');
      Database_SYS.Set_Table_Column(columns_, 'SERIES_ID');
      Database_SYS.Set_Table_Column(columns_, 'PAYMENT_ID');
      Database_SYS.Set_Table_Column(columns_, 'CURRENCY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_194');
PROMPT Adding ROWKEY CONSTRAINT TO PT_PAYMENT_HEADER_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_PAYMENT_HEADER_RK';
   table_name_ VARCHAR2(30) := 'PT_PAYMENT_HEADER_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_PAYMENT_HEADER_TAB Start ******

-- ***** PT_PAYMENT_LINE_TAB Start *****
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_195');
PROMPT ADDING new table PT_PAYMENT_LINE_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'PT_PAYMENT_LINE_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
	   Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'SERIES_ID', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PAYMENT_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'CURRENCY', 'VARCHAR2(3)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'LINE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ORIGINATING_ON', 'VARCHAR2(60)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'INVOICE_DATE', 'DATE', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DESCRIPTION', 'VARCHAR2(200)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'DEBIT_AMOUNT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CREDIT_AMOUNT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SETTLEMENT_AMOUNT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TOTAL_WITHHELD_TAX', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TOTAL_PAID_AMOUNT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_196');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_PAYMENT_LINE_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_PAYMENT_LINE_PK';
   table_name_ VARCHAR2(30) := 'PT_PAYMENT_LINE_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID');
      Database_SYS.Set_Table_Column(columns_, 'SERIES_ID');
      Database_SYS.Set_Table_Column(columns_, 'PAYMENT_ID');
      Database_SYS.Set_Table_Column(columns_, 'CURRENCY');
      Database_SYS.Set_Table_Column(columns_, 'LINE_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_197');
PROMPT Adding ROWKEY CONSTRAINT TO PT_PAYMENT_LINE_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_PAYMENT_LINE_RK';
   table_name_ VARCHAR2(30) := 'PT_PAYMENT_LINE_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_PAYMENT_LINE_TAB End *****

-- ***** PT_PAYMENT_SUMMARY_TAB Start *****
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_198');
PROMPT ADDING new table PT_PAYMENT_SUMMARY_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'PT_PAYMENT_SUMMARY_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
	   Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'NUMBER_OF_ENTRIES', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TOTAL_CREDIT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TOTAL_DEBIT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_199');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_PAYMENT_SUMMARY_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_PAYMENT_SUMMARY_PK';
   table_name_ VARCHAR2(30) := 'PT_PAYMENT_SUMMARY_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_200');
PROMPT Adding ROWKEY CONSTRAINT TO PT_PAYMENT_SUMMARY_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_PAYMENT_SUMMARY_RK';
   table_name_ VARCHAR2(30) := 'PT_PAYMENT_SUMMARY_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_PAYMENT_SUMMARY_TAB End *****

-- ***** PT_PAYMENT_DOC_TOTALS_TAB Start *****
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_201');
PROMPT ADDING new table PT_PAYMENT_DOC_TOTALS_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'PT_PAYMENT_DOC_TOTALS_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
	   Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'SERIES_ID', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PAYMENT_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'CURRENCY', 'VARCHAR2(3)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'TAX_PAYABLE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'NET_TOTAL', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'GROSS_TOTAL', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CURRENCY_CODE', 'VARCHAR2(3)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'CURRENCY_AMOUNT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'EXCHANGE_RATE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'SETTLEMENT_AMOUNT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'WITHHOLDING_TAX_TYPE', 'VARCHAR2(3)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'WITHHOLDING_TAX_DES', 'VARCHAR2(60)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'WITHHOLDING_TAX_AMOUNT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_202');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_PAYMENT_DOC_TOTALS_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_PAYMENT_DOC_TOTALS_PK';
   table_name_ VARCHAR2(30) := 'PT_PAYMENT_DOC_TOTALS_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID');
      Database_SYS.Set_Table_Column(columns_, 'SERIES_ID');
      Database_SYS.Set_Table_Column(columns_, 'PAYMENT_ID');
      Database_SYS.Set_Table_Column(columns_, 'CURRENCY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_203');
PROMPT Adding ROWKEY CONSTRAINT TO PT_PAYMENT_DOC_TOTALS_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_PAYMENT_DOC_TOTALS_RK';
   table_name_ VARCHAR2(30) := 'PT_PAYMENT_DOC_TOTALS_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_PAYMENT_DOC_TOTALS_TAB End *****

-- ***** PT_PAYMENT_LINE_TAX_TAB Start *****
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_204');
PROMPT ADDING new table PT_PAYMENT_LINE_TAX_TAB
DECLARE
   table_name_ VARCHAR2(30) := 'PT_PAYMENT_LINE_TAX_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
	   Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'SERIES_ID', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'PAYMENT_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'CURRENCY', 'VARCHAR2(3)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'LINE_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'TAX_ITEM_ID', 'NUMBER', 'N');
      Database_SYS.Set_Table_Column(columns_, 'TAX_CODE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TAX_TYPE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TAX_COUNTRY_REGION', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TAX_PERCENTAGE', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TAX_AMOUNT', 'NUMBER', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TAX_EXEMPTION_REASON', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'TAX_EXEMPTION_CODE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_205');
PROMPT Adding PRIMARY KEY CONSTRAINT TO PT_PAYMENT_LINE_TAX_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_PAYMENT_LINE_TAX_PK';
   table_name_ VARCHAR2(30) := 'PT_PAYMENT_LINE_TAX_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'PT_FILE_ID');
      Database_SYS.Set_Table_Column(columns_, 'SERIES_ID');
      Database_SYS.Set_Table_Column(columns_, 'PAYMENT_ID');
      Database_SYS.Set_Table_Column(columns_, 'CURRENCY');
      Database_SYS.Set_Table_Column(columns_, 'LINE_ID');
      Database_SYS.Set_Table_Column(columns_, 'TAX_ITEM_ID');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_206');
PROMPT Adding ROWKEY CONSTRAINT TO PT_PAYMENT_LINE_TAX_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'PT_PAYMENT_LINE_TAX_RK';
   table_name_ VARCHAR2(30) := 'PT_PAYMENT_LINE_TAX_TAB';
   columns_    Database_SYS.ColumnTabType;

BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_PAYMENT_LINE_TAX_TAB Start *****

-- ***** STANDARD_AUDIT_TAX_CODES_TAB Start *****
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_207');
PROMPT Adding COLUMN TAX_REPORTING_REGION TO STANDARD_AUDIT_TAX_CODES_TAB.
DECLARE
   table_name_ VARCHAR2(30) := 'STANDARD_AUDIT_TAX_CODES_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      column_ := Database_SYS.Set_Column_Values('TAX_REPORTING_REGION', 'VARCHAR2(20)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'A', column_, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** STANDARD_AUDIT_TAX_CODES_TAB End *****
-- gelr:saft_portugal, end


-- ***** PT_STOCK_MOVEMENT_INFO_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_208');
PROMPT CHANGING COLUMN LENGTH TRANSPORT_DOC_NUMBER IN PT_STOCK_MOVEMENT_INFO_TAB.
DECLARE
   table_name_ VARCHAR2(30) := 'PT_STOCK_MOVEMENT_INFO_TAB';
   column_     Database_SYS.ColRec;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      column_ := Database_SYS.Set_Column_Values('TRANSPORT_DOC_NUMBER', 'VARCHAR2(60)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** PT_STOCK_MOVEMENT_INFO_TAB End *****


-- ***** JPK_GOODS_ISSUED_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_209');
PROMPT Extending JPK_GOODS_ISSUED_TAB.RECEIVER_ID length TO 100 chars.
DECLARE
   column_  Database_SYS.ColRec;
   sub_section_   NUMBER;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column(column_);
      column_ := Database_SYS.Set_Column_Values('RECEIVER_ID', 'VARCHAR2(100)');
      Database_SYS.Alter_Table_Column('JPK_GOODS_ISSUED_TAB', 'M', column_, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_210');
PROMPT Extending JPK_GOODS_RECEIVED_TAB.SUPPLIER length TO 100 chars.
DECLARE
   column_ Database_SYS.ColRec;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column(column_);
      column_ := Database_SYS.Set_Column_Values('SUPPLIER', 'VARCHAR2(100)');
      Database_SYS.Alter_Table_Column('JPK_GOODS_RECEIVED_TAB', 'M', column_, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** JPK_GOODS_ISSUED_TAB End *****

-- ***** JPK_INVOICE_CONFIGURATION_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_211');
PROMPT Make nullable column JPK_INVOICE_TYPE in JPK_INVOICE_CONFIGURATION_TAB
DECLARE
   table_name_       VARCHAR2(30) := 'JPK_INVOICE_CONFIGURATION_TAB';
   column_           Database_SYS.ColRec;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      column_ := Database_SYS.Set_Column_Values('JPK_INVOICE_TYPE', 'VARCHAR2(20)', 'Y');
      Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** JPK_INVOICE_CONFIGURATION_TAB End *****


-- gelr:audit_file_france, begin
-- ***** FEC_GENERAL_PARAMETER_TAB Start *****
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_212');
PROMPT Adding TABLE FEC_GENERAL_PARAMETER_TAB
DECLARE
   table_name_   VARCHAR2(30) := 'FEC_GENERAL_PARAMETER_TAB';
   columns_      Database_SYS.ColumnTabType;
   column_       Database_SYS.ColRec;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'COUNTRY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'REPORT_TYPE', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'STATISTICAL_ACCOUNT', 'VARCHAR2(5)', 'N', '''FALSE''');
      Database_SYS.Set_Table_Column(columns_, 'ACC_CODE_PART', 'VARCHAR2(1)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_213');
PROMPT Adding PRIMARY KEY CONSTRAINT TO FEC_GENERAL_PARAMETER_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'FEC_GENERAL_PARAMETER_PK';
   table_name_ VARCHAR2(30) := 'FEC_GENERAL_PARAMETER_TAB';
   columns_      Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'COUNTRY');
      Database_SYS.Set_Table_Column(columns_, 'REPORT_TYPE');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_214');
PROMPT Adding ROWKEY CONSTRAINT TO FEC_GENERAL_PARAMETER_TAB
DECLARE
   index_name_ VARCHAR2(30) := 'FEC_GENERAL_PARAMETER_RK';
   table_name_ VARCHAR2(30) := 'FEC_GENERAL_PARAMETER_TAB';
   columns_      Database_SYS.ColumnTabType;
BEGIN
  IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

-- ***** FEC_GENERAL_PARAMETER_TAB End *****

--  ***** FEC_EXCLUDE_VOUCHER_TYPE_TAB Start *****

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_215');
PROMPT Adding TABLE FEC_EXCLUDE_VOUCHER_TYPE_TAB
DECLARE
   table_name_   VARCHAR2(30) := 'FEC_EXCLUDE_VOUCHER_TYPE_TAB';
   columns_      Database_SYS.ColumnTabType;
   column_       Database_SYS.ColRec;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'COUNTRY', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'REPORT_TYPE', 'VARCHAR2(20)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'VOUCHER_TYPE', 'VARCHAR2(100)', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWVERSION', 'DATE', 'N');
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY', 'VARCHAR2(50)', 'N', 'sys_guid()');
      Database_SYS.Create_Table(table_name_, columns_, '&IFSAPP_DATA', NULL, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_216');
PROMPT Adding PRIMARY KEY CONSTRAINT TO FEC_EXCLUDE_VOUCHER_TYPE_TAB
DECLARE
   index_name_   VARCHAR2(30) := 'FEC_EXCLUDE_VOUCHER_TYPE_PK';
   table_name_   VARCHAR2(30) := 'FEC_EXCLUDE_VOUCHER_TYPE_TAB';
   columns_      Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'COMPANY');
      Database_SYS.Set_Table_Column(columns_, 'COUNTRY');
      Database_SYS.Set_Table_Column(columns_, 'REPORT_TYPE');
      Database_SYS.Set_Table_Column(columns_, 'VOUCHER_TYPE');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'P', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_217');
PROMPT Adding ROWKEY CONSTRAINT TO FEC_EXCLUDE_VOUCHER_TYPE_TAB
DECLARE
   index_name_   VARCHAR2(30) := 'FEC_EXCLUDE_VOUCHER_TYPE_RK';
   table_name_   VARCHAR2(30) := 'FEC_EXCLUDE_VOUCHER_TYPE_TAB';
   columns_      Database_SYS.ColumnTabType;
BEGIN
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      Database_SYS.Reset_Column_Table(columns_);
      Database_SYS.Set_Table_Column(columns_, 'ROWKEY');
      Database_SYS.Create_Constraint(table_name_, index_name_, columns_, 'U', '&IFSAPP_INDEX', NULL, TRUE, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

--  ***** FEC_EXCLUDE_VOUCHER_TYPE_TAB Start *****
-- gelr:audit_file_france, end
-----------------------------------------------------------------------------------------
------------- SECTION2 : Handling Upgrade from GET10 RTM to GET10 UPD6 Ends Here --------
-----------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------
------------- SECTION3 : Handling Upgrade from Spring related GET DB Changes Start Here ---------------                                                        -------
-----------------------------------------------------------------------------------------
--
--  ***** STATUTORY_FEE_TAB Start *****
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_218');
PROMPT UPDATE eu_operation COLUMN TO make it NOT NULL
DECLARE
   stmt_ VARCHAR2(2000);
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      IF(Database_SYS.Column_Exist('STATUTORY_FEE_TAB','EU_OPERATION')) THEN
         stmt_ := 'UPDATE statutory_fee_tab
                  SET eu_operation = ''FALSE''
                  WHERE eu_operation IS NULL';

         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_219');
PROMPT CHANGE eu_operation COLUMN TO make it NOT NULL
DECLARE
   table_name_       VARCHAR2(30) := 'STATUTORY_FEE_TAB';
   column_           Database_SYS.ColRec;
BEGIN
   column_ := Database_SYS.Set_Column_Values('EU_OPERATION', 'VARCHAR2(20)', 'N');
   Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_220');
PROMPT Renaming COLUMN round_zero_decimal from statutory_fee_tab.
DECLARE
   table_name_        VARCHAR2(30) := 'STATUTORY_FEE_TAB';
BEGIN
   -- gelr:round_tax_customs_documents, begin
   IF ( Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
        IF NOT(Database_SYS.Column_Exist(table_name_, 'ROUND_ZERO_DECIMAL')) AND Database_SYS.Column_Exist(table_name_, 'ROUND_ZERO_DEC') THEN
           Database_SYS.Rename_Column(table_name_, 'ROUND_ZERO_DECIMAL', 'ROUND_ZERO_DEC', TRUE);
        END IF;
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
   -- gelr:round_tax_customs_documents, end
END;
/

--  ***** STATUTORY_FEE_TAB End *****


--  ***** PAYMENT_TERM_DETAILS_TAB Start *****
exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_221');
PROMPT UPDATE collective_riba COLUMN TO make it NOT NULL
DECLARE
   stmt_ VARCHAR2(2000);
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      IF(Database_SYS.Column_Exist('PAYMENT_TERM_DETAILS_TAB','COLLECTIVE_RIBA')) THEN
         stmt_ := 'UPDATE payment_term_details_tab
                  SET collective_riba = ''FALSE''
                  WHERE collective_riba IS NULL';

         EXECUTE IMMEDIATE stmt_;
         COMMIT;
      END IF;
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_222');
PROMPT CHANGE collective_riba COLUMN TO make it NOT NULL
DECLARE
   table_name_       VARCHAR2(30) := 'PAYMENT_TERM_DETAILS_TAB';
   column_           Database_SYS.ColRec;
BEGIN
   IF (Database_SYS.Get_Component_Version('&MODULE') IN ('&GET9VERSION', '&GET10VERSION')) THEN
      column_ := Database_SYS.Set_Column_Values('COLLECTIVE_RIBA', 'VARCHAR2(20)', 'N');
      Database_SYS.Alter_Table_Column(table_name_, 'M', column_, TRUE);
   ELSE
      dbms_output.put_line('Not executed since not upgrading from '||'&GET9VERSION'||' Version or '||'&GET10VERSION'||' Version');
   END IF;
END;
/
--  ***** PAYMENT_TERM_DETAILS_TAB End *****

-----------------------------------------------------------------------------------------
------------- SECTION3 : Handling Upgrade from Spring related GET DB Changes End Here ---------------                                                        -------
-----------------------------------------------------------------------------------------





-----------------------------------------------------------------------------------------

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Timestamp_223');
PROMPT Upgrade statements in file Accrul 2110_GET.upg end here
-- Nothing is allowed to be placed below here

UNDEFINE MODULE
UNDEFINE GET9VERSION
UNDEFINE GET10VERSION

exec Database_SYS.Log_Detail_Time_Stamp('ACCRUL','2110_GET.upg','Done');


