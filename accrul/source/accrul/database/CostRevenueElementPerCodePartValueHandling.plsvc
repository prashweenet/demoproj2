-----------------------------------------------------------------------------
--
--  Logical unit: CostRevenueElementPerCodePartValueHandling
--  Component:    ACCRUL
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
-----------------------------------------------------------------------------

layer Core;

@Override
PROCEDURE CRUD_Default___ (
   key_  IN  Cost_Element_To_Account_Key,
   attr_ IN OUT VARCHAR2,
   info_ OUT VARCHAR2 )
IS
   company_    VARCHAR2(20)   := Client_SYS.Get_Item_Value('COMPANY', attr_);
   code_part_  VARCHAR2(2000) := Accounting_Code_Parts_API.Get_Base_For_Followup_Element(company_);
BEGIN
   super(key_, attr_, info_); 
   Client_SYS.Add_To_Attr('VALID_FROM', trunc(SYSDATE), attr_);
   Client_SYS.Add_To_Attr('CODE_PART', code_part_, attr_);
   Client_SYS.Add_To_Attr('CODE_PART_NAME', Accounting_Code_Parts_API.Get_Name(company_, code_part_), attr_);   
END CRUD_Default___;

FUNCTION Get_Current_Date___ RETURN DATE
IS   
BEGIN   
   RETURN SYSDATE;
END Get_Current_Date___;

FUNCTION Set_Value___ (
   company_      IN VARCHAR2) RETURN VARCHAR2
IS 
   code_part_    VARCHAR2(20);
BEGIN
   code_part_ := Accounting_Code_Parts_API.Get_Base_For_Followup_Element(company_);
   RETURN Accounting_Code_Parts_API.Get_Name(company_, code_part_);
END Set_Value___;

@Override
PROCEDURE CRUD_Default_Copy___ (
   objid_  IN  VARCHAR2,
   key_    IN  Cost_Element_To_Account_Key,
   values_ IN  Copy_Values_Rec,
   attr_   OUT VARCHAR2,
   info_   OUT VARCHAR2 )
IS
  valid_from_ DATE; 
BEGIN
   valid_from_:= key_.valid_from;
   super(objid_, key_, values_, attr_, info_);
   IF (Client_SYS.Item_Exist('VALID_FROM', attr_)) THEN
      attr_ := Client_SYS.Remove_Attr('VALID_FROM',attr_);
      Client_SYS.Add_To_Attr('VALID_FROM', valid_from_, attr_);
   END IF;
END CRUD_Default_Copy___;