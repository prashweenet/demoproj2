projection CompaniesPerReportingPeriodDefinitionHandling;
component ACCRUL;
layer Core;
description "companies per reporting period definition";
category Users;
include fragment AccountingYearSelector;

----------------------------- MAIN ENTRY POINTS -----------------------------
entityset RpdIdentitySet for RpdIdentity;


------------------------------ ENTITY DETAILS -------------------------------
@Override
entity RpdIdentity {
   attribute RpdId Text {
      label = "Reporting Period Definition ID";
   }

   array CompanyArray(RpdId) to RpdCompany(RpdId);
}

@Override
entity RpdCompany {
   crud = Read, Create, Delete;

   attribute RpdId Text {
      label = "Definition ID";
   }
   attribute RepPeriodsDefined Boolean("TRUE", "FALSE") {
      fetch = "Rpd_Identity_API.Is_Rpd_Periods_Defined(rpd_id)";
   }

   reference RpdIdRef(RpdId) to RpdIdentity(RpdId) {
      label = "Definition ID";
   }
   reference CompanyRef(Company) to CompanyFinance(Company) {
      label = "Company";
   }
}


------------------------------- ENUMERATIONS --------------------------------


---------------------------------- QUERIES ----------------------------------


---------------------------------- ACTIONS ----------------------------------
action GetMapAccPeriodCount Number {
   initialcheck implementation;
   parameter RpdId Text;
   parameter Company Text;
   parameter AccYearFrom Number;
   parameter AccYearTo Number;
   parameter IncludeYearEnd Boolean;
}


--------------------------------- FUNCTIONS ---------------------------------


-------------------------------- STRUCTURES ---------------------------------
structure RpdGenOnAccCalendarStructure {
   attribute RpdId Text;
   attribute Company Text;
   attribute AccYearFrom Number;
   attribute AccYearTo Number;
   attribute IncludeYearEndPeriod Boolean("TRUE", "FALSE") {
      required = [true];
   }

   reference CompanyRef(Company) to CompanyFinance(Company) {
      label = "Company";
   }
   reference AccFromYearRef(Company, AccYearFrom)to AccountingYear(Company, AccountingYear) {
      label = "From Year";
   }
   reference AccToYearRef(Company, AccYearTo)to AccountingYear(Company, AccountingYear) {
      label = "To Year";
   }
}


--------------------------------- VIRTUALS ----------------------------------


--------------------------------- SUMMARIES ---------------------------------


-------------------------------- SINGLETONS ---------------------------------


