-----------------------------------------------------------------------------
--  Module : ADCOM
--
--  File   : POST_ADCOM_RUN_ALL_DataMigration.sql
--
--  IFS Developer Studio Template Version 2.6
--
--  Date     Sign    History
--  ------   ------  --------------------------------------------------
--  201120   supklk  LMM2020R1-1148, Added Export of ADCOM RUN ALL job chain in deploy file format.
--  ------   ------  --------------------------------------------------
-----------------------------------------------------------------------------


DECLARE
   job_      VARCHAR2(30) := 'FNDMIG_IMPORT';
   line_no_  NUMBER       := Intface_Job_Detail_API.Get_Max_Line_No(job_);
   --
   del_list_flag_    Intface_Detail.Default_Value%TYPE := 'N';
   del_job_flag_     Intface_Detail.Default_Value%TYPE := 'N';
   --
   file_location_db_ Intface_Header.File_Location_DB%TYPE;
   intface_path_     Intface_Header.Intface_Path%TYPE;
   intface_file_     Intface_Header.Intface_File%TYPE;
   char_set_         Intface_Header.Char_Set%TYPE;
   do_reset_         BOOLEAN := FALSE;
   --
   PROCEDURE SetDefault IS
   PRAGMA AUTONOMOUS_TRANSACTION;
   BEGIN
      BEGIN
         SELECT default_value
         INTO   del_list_flag_
         FROM   intface_detail
         WHERE  intface_name = job_
         AND    column_name  = 'DEL_LIST_FLAG';
         SELECT default_value
         INTO   del_job_flag_
         FROM   intface_detail
         WHERE  intface_name = job_
         AND    column_name  = 'DEL_JOB_FLAG';
      EXCEPTION
         WHEN others THEN null;
      END;
      BEGIN
         SELECT file_location_db,
                intface_path,
                intface_file,
                char_set
         INTO   file_location_db_,
                intface_path_,
                intface_file_,
                char_set_
         FROM   intface_header
         WHERE  intface_name = job_;
         UPDATE intface_header_tab
         SET    file_location = '2',
                intface_path  = NULL,
                intface_file  = NULL,
                char_set      = NULL
         WHERE  intface_name  = job_;
      EXCEPTION
         WHEN others THEN null;
      END;
      UPDATE intface_detail_tab SET default_value = 'Y'
      WHERE intface_name = job_;
      COMMIT;
      do_reset_ := TRUE;
   EXCEPTION
      WHEN others THEN
         dbms_output.put_line(SQLERRM);
         ROLLBACK;
   END SetDefault;
   --
   PROCEDURE ResetDefault IS
   BEGIN
      BEGIN
         UPDATE intface_detail_tab
         SET    default_value = del_job_flag_
         WHERE  intface_name  = job_
         AND    column_name   = 'DEL_JOB_FLAG';
         UPDATE intface_detail_tab
         SET    default_value = del_list_flag_
         WHERE  intface_name  = job_
         AND    column_name   = 'DEL_LIST_FLAG';
      EXCEPTION
         WHEN others THEN
            dbms_output.put_line(SQLERRM);
      END;
      IF ( do_reset_ ) THEN
         BEGIN
            UPDATE intface_header_tab
            SET    file_location = file_location_db_,
                   intface_path  = intface_path_,
                   intface_file  = intface_file_,
                   char_set      = char_set_
            WHERE  intface_name  = job_;
         EXCEPTION
            WHEN others THEN
               dbms_output.put_line(SQLERRM);
         END;
      END IF;
   END ResetDefault;
   --
   PROCEDURE LoadData (data_ IN VARCHAR2) IS
      info_       VARCHAR2(2000);
      objid_      VARCHAR2(2000);
      objversion_ VARCHAR2(2000);
      attr_       VARCHAR2(32000);
   BEGIN
      line_no_ := line_no_ + 1;
      Client_SYS.Clear_Attr(attr_);
      Client_SYS.Add_To_Attr('INTFACE_NAME', job_, attr_);
      Client_SYS.Add_To_Attr('LINE_NO', line_no_, attr_);
      Client_SYS.Add_To_Attr('FILE_STRING', data_, attr_);
      Client_SYS.Add_To_Attr('EXECUTION_NO', 0, attr_);
      Client_SYS.Add_To_Attr('STATUS', Intface_Job_Status_API.Decode('2'), attr_);
      Intface_Job_Detail_API.New__(info_, objid_, objversion_, attr_, 'DO');
   EXCEPTION
      WHEN others THEN
         dbms_output.put_line(SQLERRM);
   END LoadData;
   PROCEDURE EndData IS
      info_       VARCHAR2(32000);
   BEGIN
      Intface_Header_API.Start_Job(info_, 'ONLINE', job_);
      dbms_output.put_line(info_);
   EXCEPTION
      WHEN others THEN
         dbms_output.put_line(SQLERRM);
   END EndData;
BEGIN
   -- ---------------------------------
   -- Allow overwrite of existing jobs.
   -- ---------------------------------
   SetDefault;
   LoadData('INTFMINTFACE_NAME#CHR31#004_MXCOM_RUN_ALL#CHR30#EXECUTE_SEQ#CHR31#10#CHR30#VIEW_NAME#CHR31##CHR30#ME');
   LoadData('THOD_NAME#CHR31#Intface_Header_API.Start_Job#CHR30#COLUMN_NAME#CHR31##CHR30#COLUMN_VALUE#CHR31##CHR3');
   LoadData('0#CONVERT_ATTR#CHR31##CHR30#NOTE_TEXT#CHR31##CHR30#REFERENCES#CHR31##CHR30#SOURCE_NAME#CHR31##CHR30#');
   LoadData('ACTION#CHR31#1#CHR30#ON_NEW#CHR31#FALSE#CHR30#ON_MODIFY#CHR31#FALSE#CHR30#PREFIX_OPTION#CHR31#3#CHR3');
   LoadData('0#ON_NEW_MASTER#CHR31#FALSE#CHR30#ON_FIRST_ROW#CHR31#FALSE#CHR30#');
   LoadData('INTFMINTFACE_NAME#CHR31#004_MXCOM_RUN_ALL#CHR30#EXECUTE_SEQ#CHR31#20#CHR30#VIEW_NAME#CHR31##CHR30#ME');
   LoadData('THOD_NAME#CHR31#Intface_Header_API.Start_Job#CHR30#COLUMN_NAME#CHR31##CHR30#COLUMN_VALUE#CHR31##CHR3');
   LoadData('0#CONVERT_ATTR#CHR31##CHR30#NOTE_TEXT#CHR31##CHR30#REFERENCES#CHR31##CHR30#SOURCE_NAME#CHR31##CHR30#');
   LoadData('ACTION#CHR31#3#CHR30#ON_NEW#CHR31#FALSE#CHR30#ON_MODIFY#CHR31#FALSE#CHR30#PREFIX_OPTION#CHR31#3#CHR3');
   LoadData('0#ON_NEW_MASTER#CHR31#FALSE#CHR30#ON_FIRST_ROW#CHR31#FALSE#CHR30#');
   LoadData('INTFMINTFACE_NAME#CHR31#004_MXCOM_RUN_ALL#CHR30#EXECUTE_SEQ#CHR31#30#CHR30#VIEW_NAME#CHR31##CHR30#ME');
   LoadData('THOD_NAME#CHR31#Intface_Header_API.Start_Job#CHR30#COLUMN_NAME#CHR31##CHR30#COLUMN_VALUE#CHR31##CHR3');
   LoadData('0#CONVERT_ATTR#CHR31##CHR30#NOTE_TEXT#CHR31##CHR30#REFERENCES#CHR31##CHR30#SOURCE_NAME#CHR31##CHR30#');
   LoadData('ACTION#CHR31#3#CHR30#ON_NEW#CHR31#FALSE#CHR30#ON_MODIFY#CHR31#FALSE#CHR30#PREFIX_OPTION#CHR31#3#CHR3');
   LoadData('0#ON_NEW_MASTER#CHR31#FALSE#CHR30#ON_FIRST_ROW#CHR31#FALSE#CHR30#');
   LoadData('INTFDINTFACE_NAME#CHR31#004_MXCOM_RUN_ALL#CHR30#COLUMN_NAME#CHR31#METHOD10.EXEC_PLAN_#CHR30#DESCRIPT');
   LoadData('ION#CHR31#IN #CHR30#DATA_TYPE#CHR31#VARCHAR2#CHR30#POS#CHR31#20#CHR30#LENGTH#CHR31#32000#CHR30#DECIM');
   LoadData('AL_LENGTH#CHR31#0#CHR30#AMOUNT_FACTOR#CHR31##CHR30#DEFAULT_VALUE#CHR31##CHR30#DEFAULT_WHERE#CHR31##C');
   LoadData('HR30#FLAGS#CHR31#ARG#CHR30#PAD_CHAR_RIGHT#CHR31##CHR30#PAD_CHAR_LEFT#CHR31##CHR30#CHANGE_DEFAULTS#CH');
   LoadData('R31#2#CHR30#ATTR_SEQ#CHR31#20#CHR30#SOURCE_COLUMN#CHR31##CHR30#NOTE_TEXT#CHR31##CHR30#CONV_LIST_ID#C');
   LoadData('HR31##CHR30#DB_CLIENT_VALUES#CHR31##CHR30#EXT_ATTR#CHR31##CHR30#');
   LoadData('INTFDINTFACE_NAME#CHR31#004_MXCOM_RUN_ALL#CHR30#COLUMN_NAME#CHR31#METHOD10.INFO_#CHR30#DESCRIPTION#C');
   LoadData('HR31#IN OUT #CHR30#DATA_TYPE#CHR31#VARCHAR2#CHR30#POS#CHR31#10#CHR30#LENGTH#CHR31#32000#CHR30#DECIMA');
   LoadData('L_LENGTH#CHR31#0#CHR30#AMOUNT_FACTOR#CHR31##CHR30#DEFAULT_VALUE#CHR31##CHR30#DEFAULT_WHERE#CHR31##CH');
   LoadData('R30#FLAGS#CHR31#ARG#CHR30#PAD_CHAR_RIGHT#CHR31##CHR30#PAD_CHAR_LEFT#CHR31##CHR30#CHANGE_DEFAULTS#CHR');
   LoadData('31#2#CHR30#ATTR_SEQ#CHR31#10#CHR30#SOURCE_COLUMN#CHR31##CHR30#NOTE_TEXT#CHR31##CHR30#CONV_LIST_ID#CH');
   LoadData('R31##CHR30#DB_CLIENT_VALUES#CHR31##CHR30#EXT_ATTR#CHR31##CHR30#');
   LoadData('INTFDINTFACE_NAME#CHR31#004_MXCOM_RUN_ALL#CHR30#COLUMN_NAME#CHR31#METHOD10.INTFACE_NAME_#CHR30#DESCR');
   LoadData('IPTION#CHR31#IN #CHR30#DATA_TYPE#CHR31#VARCHAR2#CHR30#POS#CHR31#30#CHR30#LENGTH#CHR31#32000#CHR30#DE');
   LoadData('CIMAL_LENGTH#CHR31#0#CHR30#AMOUNT_FACTOR#CHR31##CHR30#DEFAULT_VALUE#CHR31##CHR30#DEFAULT_WHERE#CHR31');
   LoadData('##CHR30#FLAGS#CHR31#ARG#CHR30#PAD_CHAR_RIGHT#CHR31##CHR30#PAD_CHAR_LEFT#CHR31##CHR30#CHANGE_DEFAULTS');
   LoadData('#CHR31#2#CHR30#ATTR_SEQ#CHR31#30#CHR30#SOURCE_COLUMN#CHR31##CHR30#NOTE_TEXT#CHR31##CHR30#CONV_LIST_I');
   LoadData('D#CHR31##CHR30#DB_CLIENT_VALUES#CHR31##CHR30#EXT_ATTR#CHR31##CHR30#');
   LoadData('INTFDINTFACE_NAME#CHR31#004_MXCOM_RUN_ALL#CHR30#COLUMN_NAME#CHR31#METHOD20.EXEC_PLAN_#CHR30#DESCRIPT');
   LoadData('ION#CHR31#IN #CHR30#DATA_TYPE#CHR31#VARCHAR2#CHR30#POS#CHR31#50#CHR30#LENGTH#CHR31#32000#CHR30#DECIM');
   LoadData('AL_LENGTH#CHR31#0#CHR30#AMOUNT_FACTOR#CHR31##CHR30#DEFAULT_VALUE#CHR31##CHR30#DEFAULT_WHERE#CHR31##C');
   LoadData('HR30#FLAGS#CHR31#ARG#CHR30#PAD_CHAR_RIGHT#CHR31##CHR30#PAD_CHAR_LEFT#CHR31##CHR30#CHANGE_DEFAULTS#CH');
   LoadData('R31#2#CHR30#ATTR_SEQ#CHR31#50#CHR30#SOURCE_COLUMN#CHR31##CHR30#NOTE_TEXT#CHR31##CHR30#CONV_LIST_ID#C');
   LoadData('HR31##CHR30#DB_CLIENT_VALUES#CHR31##CHR30#EXT_ATTR#CHR31##CHR30#');
   LoadData('INTFDINTFACE_NAME#CHR31#004_MXCOM_RUN_ALL#CHR30#COLUMN_NAME#CHR31#METHOD20.INFO_#CHR30#DESCRIPTION#C');
   LoadData('HR31#IN OUT #CHR30#DATA_TYPE#CHR31#VARCHAR2#CHR30#POS#CHR31#40#CHR30#LENGTH#CHR31#32000#CHR30#DECIMA');
   LoadData('L_LENGTH#CHR31#0#CHR30#AMOUNT_FACTOR#CHR31##CHR30#DEFAULT_VALUE#CHR31##CHR30#DEFAULT_WHERE#CHR31##CH');
   LoadData('R30#FLAGS#CHR31#ARG#CHR30#PAD_CHAR_RIGHT#CHR31##CHR30#PAD_CHAR_LEFT#CHR31##CHR30#CHANGE_DEFAULTS#CHR');
   LoadData('31#2#CHR30#ATTR_SEQ#CHR31#40#CHR30#SOURCE_COLUMN#CHR31##CHR30#NOTE_TEXT#CHR31##CHR30#CONV_LIST_ID#CH');
   LoadData('R31##CHR30#DB_CLIENT_VALUES#CHR31##CHR30#EXT_ATTR#CHR31##CHR30#');
   LoadData('INTFDINTFACE_NAME#CHR31#004_MXCOM_RUN_ALL#CHR30#COLUMN_NAME#CHR31#METHOD20.INTFACE_NAME_#CHR30#DESCR');
   LoadData('IPTION#CHR31#IN #CHR30#DATA_TYPE#CHR31#VARCHAR2#CHR30#POS#CHR31#60#CHR30#LENGTH#CHR31#32000#CHR30#DE');
   LoadData('CIMAL_LENGTH#CHR31#0#CHR30#AMOUNT_FACTOR#CHR31##CHR30#DEFAULT_VALUE#CHR31##CHR30#DEFAULT_WHERE#CHR31');
   LoadData('##CHR30#FLAGS#CHR31#ARG#CHR30#PAD_CHAR_RIGHT#CHR31##CHR30#PAD_CHAR_LEFT#CHR31##CHR30#CHANGE_DEFAULTS');
   LoadData('#CHR31#2#CHR30#ATTR_SEQ#CHR31#60#CHR30#SOURCE_COLUMN#CHR31##CHR30#NOTE_TEXT#CHR31##CHR30#CONV_LIST_I');
   LoadData('D#CHR31##CHR30#DB_CLIENT_VALUES#CHR31##CHR30#EXT_ATTR#CHR31##CHR30#');
   LoadData('INTFDINTFACE_NAME#CHR31#004_MXCOM_RUN_ALL#CHR30#COLUMN_NAME#CHR31#METHOD30.EXEC_PLAN_#CHR30#DESCRIPT');
   LoadData('ION#CHR31#IN #CHR30#DATA_TYPE#CHR31#VARCHAR2#CHR30#POS#CHR31#80#CHR30#LENGTH#CHR31#32000#CHR30#DECIM');
   LoadData('AL_LENGTH#CHR31#0#CHR30#AMOUNT_FACTOR#CHR31##CHR30#DEFAULT_VALUE#CHR31##CHR30#DEFAULT_WHERE#CHR31##C');
   LoadData('HR30#FLAGS#CHR31#ARG#CHR30#PAD_CHAR_RIGHT#CHR31##CHR30#PAD_CHAR_LEFT#CHR31##CHR30#CHANGE_DEFAULTS#CH');
   LoadData('R31#2#CHR30#ATTR_SEQ#CHR31#80#CHR30#SOURCE_COLUMN#CHR31##CHR30#NOTE_TEXT#CHR31##CHR30#CONV_LIST_ID#C');
   LoadData('HR31##CHR30#DB_CLIENT_VALUES#CHR31##CHR30#EXT_ATTR#CHR31##CHR30#');
   LoadData('INTFDINTFACE_NAME#CHR31#004_MXCOM_RUN_ALL#CHR30#COLUMN_NAME#CHR31#METHOD30.INFO_#CHR30#DESCRIPTION#C');
   LoadData('HR31#IN OUT #CHR30#DATA_TYPE#CHR31#VARCHAR2#CHR30#POS#CHR31#70#CHR30#LENGTH#CHR31#32000#CHR30#DECIMA');
   LoadData('L_LENGTH#CHR31#0#CHR30#AMOUNT_FACTOR#CHR31##CHR30#DEFAULT_VALUE#CHR31##CHR30#DEFAULT_WHERE#CHR31##CH');
   LoadData('R30#FLAGS#CHR31#ARG#CHR30#PAD_CHAR_RIGHT#CHR31##CHR30#PAD_CHAR_LEFT#CHR31##CHR30#CHANGE_DEFAULTS#CHR');
   LoadData('31#2#CHR30#ATTR_SEQ#CHR31#70#CHR30#SOURCE_COLUMN#CHR31##CHR30#NOTE_TEXT#CHR31##CHR30#CONV_LIST_ID#CH');
   LoadData('R31##CHR30#DB_CLIENT_VALUES#CHR31##CHR30#EXT_ATTR#CHR31##CHR30#');
   LoadData('INTFDINTFACE_NAME#CHR31#004_MXCOM_RUN_ALL#CHR30#COLUMN_NAME#CHR31#METHOD30.INTFACE_NAME_#CHR30#DESCR');
   LoadData('IPTION#CHR31#IN #CHR30#DATA_TYPE#CHR31#VARCHAR2#CHR30#POS#CHR31#90#CHR30#LENGTH#CHR31#32000#CHR30#DE');
   LoadData('CIMAL_LENGTH#CHR31#0#CHR30#AMOUNT_FACTOR#CHR31##CHR30#DEFAULT_VALUE#CHR31##CHR30#DEFAULT_WHERE#CHR31');
   LoadData('##CHR30#FLAGS#CHR31#ARG#CHR30#PAD_CHAR_RIGHT#CHR31##CHR30#PAD_CHAR_LEFT#CHR31##CHR30#CHANGE_DEFAULTS');
   LoadData('#CHR31#2#CHR30#ATTR_SEQ#CHR31#90#CHR30#SOURCE_COLUMN#CHR31##CHR30#NOTE_TEXT#CHR31##CHR30#CONV_LIST_I');
   LoadData('D#CHR31##CHR30#DB_CLIENT_VALUES#CHR31##CHR30#EXT_ATTR#CHR31##CHR30#');
   LoadData('INTFDINTFACE_NAME#CHR31#004_MXCOM_RUN_ALL#CHR30#COLUMN_NAME#CHR31#OBJID#CHR30#DESCRIPTION#CHR31#Obji');
   LoadData('d#CHR30#DATA_TYPE#CHR31#VARCHAR2#CHR30#POS#CHR31#99999#CHR30#LENGTH#CHR31#20#CHR30#DECIMAL_LENGTH#CH');
   LoadData('R31##CHR30#AMOUNT_FACTOR#CHR31##CHR30#DEFAULT_VALUE#CHR31##CHR30#DEFAULT_WHERE#CHR31##CHR30#FLAGS#CH');
   LoadData('R31##CHR30#PAD_CHAR_RIGHT#CHR31##CHR30#PAD_CHAR_LEFT#CHR31##CHR30#CHANGE_DEFAULTS#CHR31#2#CHR30#ATTR');
   LoadData('_SEQ#CHR31#99999#CHR30#SOURCE_COLUMN#CHR31#ROWID#CHR30#NOTE_TEXT#CHR31##CHR30#CONV_LIST_ID#CHR31##CH');
   LoadData('R30#DB_CLIENT_VALUES#CHR31##CHR30#EXT_ATTR#CHR31##CHR30#');
   LoadData('INTFRINTFACE_NAME#CHR31#004_MXCOM_RUN_ALL#CHR30#RULE_ID#CHR31#ADDOBJID#CHR30#RULE_VALUE#CHR31##CHR30');
   LoadData('#RULE_FLAG#CHR31#1#CHR30#');
   LoadData('INTFRINTFACE_NAME#CHR31#004_MXCOM_RUN_ALL#CHR30#RULE_ID#CHR31#CHECKOPTION#CHR30#RULE_VALUE#CHR31##CH');
   LoadData('R30#RULE_FLAG#CHR31#2#CHR30#');
   LoadData('INTFRINTFACE_NAME#CHR31#004_MXCOM_RUN_ALL#CHR30#RULE_ID#CHR31#CONNJOB#CHR30#RULE_VALUE#CHR31##CHR30#');
   LoadData('RULE_FLAG#CHR31#2#CHR30#');
   LoadData('INTFRINTFACE_NAME#CHR31#004_MXCOM_RUN_ALL#CHR30#RULE_ID#CHR31#CREATEDET#CHR30#RULE_VALUE#CHR31#1#CHR');
   LoadData('30#RULE_FLAG#CHR31#1#CHR30#');
   LoadData('INTFRINTFACE_NAME#CHR31#004_MXCOM_RUN_ALL#CHR30#RULE_ID#CHR31#IGNOREXEERROR#CHR30#RULE_VALUE#CHR31##');
   LoadData('CHR30#RULE_FLAG#CHR31#1#CHR30#');
   LoadData('INTFRINTFACE_NAME#CHR31#004_MXCOM_RUN_ALL#CHR30#RULE_ID#CHR31#KEEPDYNAMPROC#CHR30#RULE_VALUE#CHR31##');
   LoadData('CHR30#RULE_FLAG#CHR31#2#CHR30#');
   LoadData('INTFRINTFACE_NAME#CHR31#004_MXCOM_RUN_ALL#CHR30#RULE_ID#CHR31#MAPDBCOL#CHR30#RULE_VALUE#CHR31##CHR30');
   LoadData('#RULE_FLAG#CHR31#2#CHR30#');
   LoadData('INTFRINTFACE_NAME#CHR31#004_MXCOM_RUN_ALL#CHR30#RULE_ID#CHR31#NONULLVAL#CHR30#RULE_VALUE#CHR31##CHR3');
   LoadData('0#RULE_FLAG#CHR31#2#CHR30#');
   LoadData('INTFAINTFACE_NAME#CHR31#004_MXCOM_RUN_ALL#CHR30#EXECUTE_SEQ#CHR31#10#CHR30#COLUMN_NAME#CHR31#EXEC_PL');
   LoadData('AN_#CHR30#DESCRIPTION#CHR31#VARCHAR2 IN #CHR30#COLUMN_SEQUENCE#CHR31#20#CHR30#FIXED_VALUE#CHR31#ONLI');
   LoadData('NE#CHR30#ON_NEW#CHR31#FALSE#CHR30#ON_MODIFY#CHR31#FALSE#CHR30#FLAGS#CHR31#ARG#CHR30#LU_REFERENCE#CHR');
   LoadData('31##CHR30#IID_VALUES#CHR31##CHR30#');
   LoadData('INTFAINTFACE_NAME#CHR31#004_MXCOM_RUN_ALL#CHR30#EXECUTE_SEQ#CHR31#10#CHR30#COLUMN_NAME#CHR31#INFO_#C');
   LoadData('HR30#DESCRIPTION#CHR31#VARCHAR2 IN OUT #CHR30#COLUMN_SEQUENCE#CHR31#10#CHR30#FIXED_VALUE#CHR31##CHR3');
   LoadData('0#ON_NEW#CHR31#FALSE#CHR30#ON_MODIFY#CHR31#FALSE#CHR30#FLAGS#CHR31#ARG#CHR30#LU_REFERENCE#CHR31##CHR');
   LoadData('30#IID_VALUES#CHR31##CHR30#');
   LoadData('INTFAINTFACE_NAME#CHR31#004_MXCOM_RUN_ALL#CHR30#EXECUTE_SEQ#CHR31#10#CHR30#COLUMN_NAME#CHR31#INTFACE');
   LoadData('_NAME_#CHR30#DESCRIPTION#CHR31#VARCHAR2 IN #CHR30#COLUMN_SEQUENCE#CHR31#30#CHR30#FIXED_VALUE#CHR31#0');
   LoadData('01_BASIC_DATA_RUN_ALL#CHR30#ON_NEW#CHR31#FALSE#CHR30#ON_MODIFY#CHR31#FALSE#CHR30#FLAGS#CHR31#ARG#CHR');
   LoadData('30#LU_REFERENCE#CHR31##CHR30#IID_VALUES#CHR31##CHR30#');
   LoadData('INTFAINTFACE_NAME#CHR31#004_MXCOM_RUN_ALL#CHR30#EXECUTE_SEQ#CHR31#20#CHR30#COLUMN_NAME#CHR31#EXEC_PL');
   LoadData('AN_#CHR30#DESCRIPTION#CHR31#VARCHAR2 IN #CHR30#COLUMN_SEQUENCE#CHR31#20#CHR30#FIXED_VALUE#CHR31#ONLI');
   LoadData('NE#CHR30#ON_NEW#CHR31#FALSE#CHR30#ON_MODIFY#CHR31#FALSE#CHR30#FLAGS#CHR31#ARG#CHR30#LU_REFERENCE#CHR');
   LoadData('31##CHR30#IID_VALUES#CHR31##CHR30#');
   LoadData('INTFAINTFACE_NAME#CHR31#004_MXCOM_RUN_ALL#CHR30#EXECUTE_SEQ#CHR31#20#CHR30#COLUMN_NAME#CHR31#INFO_#C');
   LoadData('HR30#DESCRIPTION#CHR31#VARCHAR2 IN OUT #CHR30#COLUMN_SEQUENCE#CHR31#10#CHR30#FIXED_VALUE#CHR31##CHR3');
   LoadData('0#ON_NEW#CHR31#FALSE#CHR30#ON_MODIFY#CHR31#FALSE#CHR30#FLAGS#CHR31#ARG#CHR30#LU_REFERENCE#CHR31##CHR');
   LoadData('30#IID_VALUES#CHR31##CHR30#');
   LoadData('INTFAINTFACE_NAME#CHR31#004_MXCOM_RUN_ALL#CHR30#EXECUTE_SEQ#CHR31#20#CHR30#COLUMN_NAME#CHR31#INTFACE');
   LoadData('_NAME_#CHR30#DESCRIPTION#CHR31#VARCHAR2 IN #CHR30#COLUMN_SEQUENCE#CHR31#30#CHR30#FIXED_VALUE#CHR31#0');
   LoadData('02_FLM_RUN_ALL#CHR30#ON_NEW#CHR31#FALSE#CHR30#ON_MODIFY#CHR31#FALSE#CHR30#FLAGS#CHR31#ARG#CHR30#LU_R');
   LoadData('EFERENCE#CHR31##CHR30#IID_VALUES#CHR31##CHR30#');
   LoadData('INTFAINTFACE_NAME#CHR31#004_MXCOM_RUN_ALL#CHR30#EXECUTE_SEQ#CHR31#30#CHR30#COLUMN_NAME#CHR31#EXEC_PL');
   LoadData('AN_#CHR30#DESCRIPTION#CHR31#VARCHAR2 IN #CHR30#COLUMN_SEQUENCE#CHR31#20#CHR30#FIXED_VALUE#CHR31#ONLI');
   LoadData('NE#CHR30#ON_NEW#CHR31#FALSE#CHR30#ON_MODIFY#CHR31#FALSE#CHR30#FLAGS#CHR31#ARG#CHR30#LU_REFERENCE#CHR');
   LoadData('31##CHR30#IID_VALUES#CHR31##CHR30#');
   LoadData('INTFAINTFACE_NAME#CHR31#004_MXCOM_RUN_ALL#CHR30#EXECUTE_SEQ#CHR31#30#CHR30#COLUMN_NAME#CHR31#INFO_#C');
   LoadData('HR30#DESCRIPTION#CHR31#VARCHAR2 IN OUT #CHR30#COLUMN_SEQUENCE#CHR31#10#CHR30#FIXED_VALUE#CHR31##CHR3');
   LoadData('0#ON_NEW#CHR31#FALSE#CHR30#ON_MODIFY#CHR31#FALSE#CHR30#FLAGS#CHR31#ARG#CHR30#LU_REFERENCE#CHR31##CHR');
   LoadData('30#IID_VALUES#CHR31##CHR30#');
   LoadData('INTFAINTFACE_NAME#CHR31#004_MXCOM_RUN_ALL#CHR30#EXECUTE_SEQ#CHR31#30#CHR30#COLUMN_NAME#CHR31#INTFACE');
   LoadData('_NAME_#CHR30#DESCRIPTION#CHR31#VARCHAR2 IN #CHR30#COLUMN_SEQUENCE#CHR31#30#CHR30#FIXED_VALUE#CHR31#0');
   LoadData('03_DISCO_RUN_ALL#CHR30#ON_NEW#CHR31#FALSE#CHR30#ON_MODIFY#CHR31#FALSE#CHR30#FLAGS#CHR31#ARG#CHR30#LU');
   LoadData('_REFERENCE#CHR31##CHR30#IID_VALUES#CHR31##CHR30#');
   LoadData('INTFHINTFACE_NAME#CHR31#004_MXCOM_RUN_ALL#CHR30#DESCRIPTION#CHR31#Run all basic data, flm and disco ');
   LoadData('migration jobs#CHR30#INTFACE_PATH#CHR31##CHR30#INTFACE_FILE#CHR31##CHR30#DATE_FORMAT#CHR31##CHR30#MI');
   LoadData('NUS_POS#CHR31##CHR30#WHERE_CLAUSE#CHR31##CHR30#VIEW_NAME#CHR31##CHR30#COLUMN_SEPARATOR#CHR31##CHR30#');
   LoadData('THOUSAND_SEPARATOR#CHR31##CHR30#DECIMAL_POINT#CHR31##CHR30#COLUMN_EMBRACE#CHR31##CHR30#FILE_LOCATION');
   LoadData('#CHR31#3#CHR30#PROCEDURE_NAME#CHR31#MIGRATE_SOURCE_DATA#CHR30#SOURCE_NAME#CHR31##CHR30#SOURCE_OWNER#');
   LoadData('CHR31##CHR30#NOTE_TEXT#CHR31##CHR30#ORDER_BY_CLAUSE#CHR31##CHR30#GROUP_ID#CHR31##CHR30#OBJECT_SEQ#CH');
   LoadData('R31##CHR30#VALUE_LIST#CHR31##CHR30#TABLE_NAME#CHR31##CHR30#ON_INSERT#CHR31#FALSE#CHR30#ON_UPDATE#CHR');
   LoadData('31#FALSE#CHR30#FROM_VALUE#CHR31##CHR30#REPLICATION_MODE#CHR31#1#CHR30#REPL_CRITERIA#CHR31##CHR30#MES');
   LoadData('SAGE_NAME#CHR31##CHR30#MESSAGE_TYPE#CHR31##CHR30#MESSAGE_SENDER#CHR31##CHR30#MESSAGE_RECEIVER#CHR31#');
   LoadData('#CHR30#GROUP_BY_CLAUSE#CHR31##CHR30#TRIGGER_WHEN#CHR31##CHR30#CHAR_SET#CHR31##CHR30#');
   EndData;
   -- ----------------------------------------
   -- Reset overwrite flags to original value.
   -- ----------------------------------------
   ResetDefault;
   COMMIT;
END;
/
