-----------------------------------------------------------------------------
--
--  Logical unit: AvHistFault
--  Component:    ADCOM
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  201008  themlk  DISO2020R1-410, Pre_Sync_Action should find the correct IFS lu key when MX_UNIQUE_KEY is passed in
-----------------------------------------------------------------------------

layer Core;


-------------------- LU SPECIFIC PUBLIC METHODS -----------------------------
UNITTEST "Pre_Sync_Action should find the correct IFS lu key when MX_UNIQUE_KEY is passed in" FOR
   PROCEDURE Pre_Sync_Action(
      attr_ IN OUT VARCHAR2);
USING
   @MockTable av_hist_flight_tab
   VALUES
      | flight_id | flight_leg_alt_id |
      | 1         | 'F001'            |
   END VALUES;

   @MockTable av_inventory_tab
   VALUES
      | inventory_id |parent_inventory_id |inventory_serial_no_oem|part_no_oem|manufacture_code|barcode|
      | 1            | 2                  |'serial001'            |'part001'  |'manufacture001'|'barcode001'|
   END VALUES;

   @MockTable av_hist_work_package_tab
   VALUES
      | inventory_id | mx_unique_key | wp_barcode |
      | 2            | '1234:20441'  | 'WP001'    |
   END VALUES;

   @Mock
   FUNCTION Check_Exist___ (
      fault_barcode_ IN     VARCHAR2 ) RETURN BOOLEAN
   IS
   BEGIN
      IF fault_barcode_ = 'F1000' THEN
         RETURN TRUE;
      ELSE
         RETURN FALSE;
      END IF;
   END Check_Exist___;

IS
   output1_  VARCHAR2(2000);
   expected1_   VARCHAR2(2000);
   expected2_   VARCHAR2(2000);
   expected3_   VARCHAR2(2000);
   expected4_   VARCHAR2(2000);
BEGIN
   FOR
      | attr_ |
      | 'FLIGHT_UNIQUE_KEY'||chr(31)||'F001'||chr(30)||'WITH_FLIGHT_ID'|
      |'INVENTORY_SERIAL_NO_OEM'||chr(31)||'serial001'||chr(30)||'PART_NO_OEM'||chr(31)||'part001' ||chr(30)||'MANUFACTURE_CODE'||chr(31)||'manufacture001'||chr(30)||'BARCODE'||chr(31)||'barcode001'||chr(30)||'WITH_INVENTORY_ID'|
      | 'FAULT_BARCODE'||chr(31)||'F1000'||chr(30)||'FAULT_BARCODE_EXIST'|
      | 'FAULT_BARCODE'||chr(31)||'F2000'||chr(30)||'FAULT_BARCODE_NOT_EXIST'|
      | 'WP_BARCODE'||chr(31)||'WP001'||chr(30)||'WITH_WP_BARCODE'       |
   LOOP
      output1_ := attr_;
      Pre_Sync_Action(output1_);

      expected1_ := 'WITH_FLIGHT_ID'||'FLIGHT_ID'||chr(31)||'1'||chr(30);
      expected2_ := 'WITH_INVENTORY_ID'||'INVENTORY_ID'||chr(31)||'1'||chr(30);
      expected3_ := 'FAULT_BARCODE_EXIST';
      expected4_ := 'WP_BARCODE'||chr(31)||'WP001'||chr(30)||'WITH_WP_BARCODE';

      IF attr_ LIKE '%WITH_FLIGHT_ID%' THEN
         ASSERT output1_ = expected1_ MESSAGE 'Expected '||expected1_||' but  was '||output1_;
      ELSIF attr_ LIKE '%WITH_INVENTORY_ID%' THEN
         ASSERT output1_ = expected2_ MESSAGE 'Expected '||expected2_||' but  was '||output1_;
      ELSIF attr_ LIKE '%FAULT_BARCODE_EXIST%' THEN
         ASSERT output1_ = expected3_ MESSAGE 'Expected '||expected3_||' but  was '||output1_;
      ELSIF attr_ LIKE '%WITH_WP_BARCODE%' THEN
         ASSERT output1_ = expected4_ MESSAGE 'Expected '||expected4_||' but  was '||output1_;
      ELSE
         ASSERT output1_ = attr_ MESSAGE 'Expected '||attr_||' but  was '||output1_;
      END IF;

   END LOOP;
END UNITTEST;

