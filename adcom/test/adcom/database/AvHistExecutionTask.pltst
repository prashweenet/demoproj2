-----------------------------------------------------------------------------
--
--  Logical unit: AvHistExecutionTask
--  Component:    ADCOM
--
--  IFS Developer Studio Template Version 3.0
--
--  Date    Sign    History
--  ------  ------  ---------------------------------------------------------
--  202009  themlk  DISO2020R1-425, Pre_Sync_Action should find the correct IFS lu key when MX_UNIQUE_KEY is passed in
-----------------------------------------------------------------------------

layer Core;


-------------------- LU SPECIFIC PUBLIC METHODS -----------------------------
UNITTEST "Pre_Sync_Action should find the correct IFS lu key when MX_UNIQUE_KEY is passed in" FOR
   PROCEDURE Pre_Sync_Action(
      attr_ IN OUT VARCHAR2);
USING
   --Insert your mock directives and mock return variables here
   @MockTable av_inventory_tab
   VALUES
      | inventory_id |inventory_serial_no_oem|part_no_oem|manufacture_code|barcode|
      | 1            |'serial001'            |'part001'  |'manufacture001'|'barcode001'|
   END VALUES;

   @MockTable av_hist_work_package_tab
   VALUES
      | inventory_id | mx_unique_key | wp_barcode |
      | 1            | 'MXWP1'       | 'WPB1'     |
   END VALUES;

   @MockTable av_hist_execution_task_tab
   VALUES
      |et_barcode|
      |'wpbarcode'|
   END VALUES;

   @MockTable av_hist_execution_task_tab
   VALUES
      |et_barcode|
      | 'etbarcode' |
   END VALUES;
IS
   output1_  VARCHAR2(2000);
   expected1_   VARCHAR2(2000);
   expected2_   VARCHAR2(2000);
   expected3_   VARCHAR2(2000);
BEGIN
   FOR
      | attr_ |
      |'INVENTORY_SERIAL_NO_OEM'||chr(31)||'serial001'||chr(30)||'PART_NO_OEM'||chr(31)||'part001' ||chr(30)||'MANUFACTURE_CODE'||chr(31)||'manufacture001'||chr(30)||'BARCODE'||chr(31)||'barcode001'||chr(30)||'WITH_INVENTORY_ID'|
      |'WP_BARCODE'||chr(31)||'WPB1'||chr(30)||'WITH_WP_BARCODE'|
      |'USG_REC_MX_UNIQUE_KEY'||chr(31)||'MXSNAP1'||chr(30)||'WITH_USAGE_SNAPSHOT_RECORD_ID'|

   LOOP

      output1_ := attr_;
      Pre_Sync_Action(output1_);

      expected1_ := 'WITH_INVENTORY_ID'||'INVENTORY_ID'||chr(31)||'1'||chr(30);
      expected2_ := 'WP_BARCODE'||chr(31)||'WPB1'||chr(30)||'WITH_WP_BARCODE';

      expected3_ := 'WITH_USAGE_SNAPSHOT_RECORD_ID'||'USAGE_SNAPSHOT_RECORD_ID'||chr(31)||'1'||chr(30);

      IF attr_ LIKE '%WITH_INVENTORY_ID%' THEN
         ASSERT output1_ = expected1_ MESSAGE 'Expected '||expected1_||' but  was '||output1_;
      ELSIF attr_ LIKE '%WITH_WP_BARCODE%' THEN
         ASSERT output1_ = expected2_ MESSAGE 'Expected '||expected2_||' but  was '||output1_;
      ELSE
         ASSERT output1_ = attr_ MESSAGE 'Expected '||attr_||' but  was '||output1_;
      END IF;
   END LOOP;
END UNITTEST;




